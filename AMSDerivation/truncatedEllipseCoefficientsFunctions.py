import numpy as np
from numba import jit
from time import time

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 12), ])


    coefficients_array = np.array([0.4385846609371699, 0.018291150091744222, 0.01296834123504817, 0.020414852488860602, 0.014281786322353962, 0.009064748866816033, 0.014858453027996443, 0.008148828706111548, 0.012178664226757152, 0.007277232656698295, -0.009854425880539508, 0.013197673263761043, 0.013292244406715727, -0.00470079313582148, 0.004648476701290503, 0.008771251823595855, -0.008234529685883799, -0.0062710893800316005, -0.006665258353492485, 0.009888960013360728, 0.00937953453913632, 0.007122608078525499, 0.009397707506205975, -0.0055506260403226345, -0.0024835331671065387, -0.007726598148569901, 0.005093476847660036, -0.0057452402989427165, 0.0028019166723769486, -0.00665672888826944, 0.001995857009695147, 0.005165329024589971, -0.0031139153598235127, -0.005183535117024671, 0.006051374104702229, 0.006829343588849904, 0.0032659398938074936, 0.004969493011516352, -0.00578059004536179, 0.0025968622146047907, -0.0015267827837980644, -0.004341456163131064, 0.0062840593098205475, -0.004934722827926517, -0.004852463468757967, -0.005591998356100162, -0.002144084724523311, -0.0032759574261591482, -0.003743886085028487, -0.004815011096201991, -0.0026177353949709387, -0.00335551443047662, -0.00333236905191588, -0.005077778976404542, -0.0034327604218655694, -0.004522129094255042, 0.001021083233371659, 0.003897999945703796, 0.003327245234420882, -0.0020949063268769154, -0.003731702864676586, -0.004921668480605915, -0.0024192250051204107, 0.0032280711790137057, -0.0009266715099539083, -0.000921451969512419, 0.0036873571906544745, -0.002363412353513445, 0.00429296708209707, -0.004109610592123247, 0.004111816378066257, 0.0031973083895602493, 0.003301742176899233, 0.0025131016319406593, -0.00419040997049377, -0.00437882125799335, -0.002540655456556637, -0.003789117687035381, 0.0037114723442212135, -0.0024011156897751048, -0.004179018528923047, 0.000690075090965757, -0.0014940191651945268, -0.003263743377326429, -0.004228212199276496, 0.0033353636716319376, -0.0023343712791229956, -0.0006182090107603868, 0.003825695702039464, -0.0019339173937529487, 0.0024471824752585946, -0.0038884877075459415, -0.0022920538344320895, 0.00251802289968199, 0.003002199739294802, 0.002607699032808316, -0.0008192674233733016, -0.002158113489763248, 0.0005418433441808726, -0.0030963296655188827, -0.0034823670089295365, 0.0025647782937538253, 0.002634672116665334, -0.0023944249701797564, 0.0034757252848898507, 0.002646994552323731, 0.0029438580922588227, -0.0022034132224310883, -0.0026778869549608057, -0.0032949913419918504, 0.002969603925614103, -0.002149537322870617, -0.003170384986087317, 0.0036949558901013457, 0.0007896770097077602, 0.0019098765890053918, -0.0033703586124336684, -0.00339273467015803, -0.0034994371996270902, -0.0018502472487803773, -0.002177499474272713, -0.002606044849888682, 0.002516909342718148, -0.0011704684359709746, 0.0037233236035585787, 0.002553717725773005, -0.0035537709800748203, 0.001275338128735319, -0.002568214641571605, -0.0027570183076361075, 0.00043382915690836217, 0.0015914062654128632, -0.0004327080227033321, -0.0012670192151191966, 0.0019080909121887964, -0.002562207807864934, -0.0030976481817138685, -0.0014773672763528434, -0.0004166681331348536, 0.003675385736494254, -0.002963383079475309, -0.0007429650181949432, -0.002910747074295087, 0.0024377955870711174, 0.002427612963206642, -0.0023065647005098646, -0.001418625901928906, 0.0012886756986476248, -0.003089609020049907, -0.001964265586502829, -0.0019569046392917773, -0.003150820223130862, -0.0028227877840618816, 0.002485884008105026, 0.0015031512155304816, -0.0016439414146998427, -0.0011502340138840848, -0.0025720182449276052, 0.0015376453222514048, 0.0012595250770740902, -0.0008857364493690273, 0.0016237155223215417, -0.0014083171138398053, 0.001500565499392415, -0.0024961927078437107, 0.001386636668050998, 0.0002878855364490828, -0.0022833078097748006, 0.0017247234648561246, -0.001360999246815778, -0.0018383069617405414, 0.0025503173551500676, 0.001674569115915368, -0.0014582428614263487, -0.0023446823667601013, 0.0016372412763957988, 0.00026377610968121367, 0.0014801258615095975, 0.0016927433127723118, -0.002275918873795916, 0.0016570456963333714, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), ])


    coefficients_array = np.array([-0.2334822669231708, 0.0095113457739457, -0.0067173334280761126, -0.006282513182511164, 0.006114731454998803, 0.004267302753072321, -0.0038710688311533485, 0.003239026583275608, -0.0032023306754269606, 0.0027218425826632062, -0.002283839138166098, 0.0019311579903296976, -0.0012726522636910943, 0.0012870439864841984, -0.0012127421522349945, 0.001113056271489619, -0.0011006745619830621, -0.0010507925983631442, -0.0010200580766711045, 0.001007324403064137, 0.0009337446533157071, -0.0008864352899273359, -0.000872383494657185, -0.0008448130788395381, -0.0008295618283981627, 0.0008190307020550714, 0.0007556234677390871, 0.0007414103629865994, -0.000701124909522427, 0.0006568124450463865, 0.0005956825965909352, 0.0005750275041998371, -0.0005559229996361902, 0.0005434419641556473, 0.0004948819283520258, -0.00044042100253056395, -0.0004309586053078584, 0.00042412636862405255, -0.000377131735336531, 0.0003420930892930522, 0.0003398697879673611, 0.0002917587149093958, 0.00028598569617862147, -0.00027594384370282154, 0.0002693946848274046, 0.0002518016828420793, -0.00023177308281769365, -0.00022217466511440016, 0.00020143135306311877, -0.00018690502054641539, 0.00016499106611611805, -0.00014477645666438483, -7.886811135916854e-05, -8.000094476125151e-05, 6.669510484134113e-05, 5.436299545245403e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), ])


    coefficients_array = np.array([0.5614153390627232, -0.018291150091728683, -0.012968341235128428, -0.020414852488926133, -0.014281786322277225, -0.009064748866726265, -0.014858453028245823, -0.008148828706124184, -0.01217866422654068, -0.00727723265678724, 0.009854425880523269, -0.013197673263805672, -0.013292244406774968, 0.004700793135814035, -0.004648476701349591, -0.008771251823602258, 0.00823452968597937, 0.006271089379918431, 0.006665258353536193, -0.009888960013568454, -0.00937953453890631, -0.007122608078438876, -0.009397707506048122, 0.005550626040348765, 0.0024835331670969322, 0.007726598148549023, -0.00509347684762827, 0.005745240298985345, -0.0028019166724699627, 0.0066567288882337745, -0.001995857009708944, -0.0051653290244991065, 0.0031139153599199693, 0.005183535117165579, -0.0060513741047057675, -0.006829343589059053, -0.0032659398937592054, -0.004969493011529477, 0.005780590045343326, -0.00259686221449356, 0.0015267827837961616, 0.004341456163171941, -0.0062840593098513475, 0.004934722827835337, 0.004852463468718478, 0.005591998356142903, 0.0021440847245076185, 0.0032759574262880157, 0.0037438860848993745, 0.0048150110961321215, 0.0026177353950396086, 0.0033555144304858167, 0.003332369051878202, 0.005077778976424207, 0.003432760421872616, 0.004522129094174041, -0.001021083233372401, -0.003897999945735769, -0.003327245234159708, 0.002094906327055438, 0.003731702864619877, 0.004921668480608313, 0.002419225005176742, -0.0032280711789941666, 0.0009266715099538784, 0.0009214519695132647, -0.0036873571904824857, 0.002363412353363235, -0.0042929670821277325, 0.004109610592132686, -0.004111816378090586, -0.003197308389571234, -0.0033017421768629786, -0.002513101631875638, 0.004190409970462743, 0.004378821258176353, 0.002540655456354432, 0.0037891176869513316, -0.0037114723441627195, 0.0024011156897031476, 0.004179018528923366, -0.0006900750909661501, 0.0014940191651812813, 0.0032637433773331716, 0.0042282121992471685, -0.00333536367162604, 0.0023343712791036725, 0.0006182090107567984, -0.003825695701996836, 0.0019339173937079563, -0.002447182475225487, 0.003888487707574733, 0.002292053834418012, -0.0025180228996705394, -0.0030021997392287066, -0.002607699032826332, 0.000819267423384692, 0.0021581134897654306, -0.0005418433441808946, 0.0030963296655663625, 0.0034823670089631363, -0.0025647782937044034, -0.002634672116580745, 0.002394424970188336, -0.0034757252848695744, -0.0026469945523478187, -0.0029438580921655965, 0.0022034132224383616, 0.0026778869550233403, 0.003294991342031984, -0.002969603925584493, 0.002149537322969328, 0.0031703849860514706, -0.003694955890130807, -0.0007896770096344839, -0.0019098765890247916, 0.0033703586124555042, 0.0033927346702298583, 0.0034994371996667053, 0.0018502472488041897, 0.0021774994742715984, 0.002606044849837911, -0.0025169093426959123, 0.0011704684360244323, -0.003723323603477738, -0.0025537177256567518, 0.0035537709801118826, -0.0012753381287576092, 0.0025682146414180915, 0.0027570183075918777, -0.0004338291569082346, -0.0015914062655858867, 0.00043270802270331294, 0.0012670192151093137, -0.0019080909122361437, 0.002562207807907032, 0.003097648181662194, 0.0014773672762893977, 0.0004166681331370855, -0.003675385736504435, 0.00296338307950247, 0.0007429650181693376, 0.002910747074262111, -0.0024377955871259516, -0.00242761296319811, 0.002306564700553815, 0.0014186259020787168, -0.0012886756986974235, 0.00308960901997834, 0.0019642655864701257, 0.001956904639302848, 0.003150820223027479, 0.002822787784043517, -0.0024858840081653575, -0.0015031512155375033, 0.001643941414645754, 0.0011502340139450987, 0.0025720182450266254, -0.0015376453222441047, -0.0012595250770688767, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (c_beta_s ** 10), 1, (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 14), (s_alpha_s ** 2), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 4), (s_alpha_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (s_alpha_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (s_alpha_s ** 10), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[7]), (c_harmonics_alpha[11] * c_harmonics_beta[11]), (c_harmonics_alpha[11] * c_harmonics_beta[13]), (c_harmonics_alpha[11] * c_harmonics_beta[1]), (c_harmonics_alpha[11] * c_harmonics_beta[3]), (c_harmonics_alpha[11] * c_harmonics_beta[5]), (c_harmonics_alpha[11] * c_harmonics_beta[9]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[15]), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), ])


    coefficients_array = np.array([-0.41453516429953496, -0.21201348792439786, -0.20252167634226048, 0.12423407116808098, -0.14466733347089217, -0.13517552191237525, -0.11060954184103898, -0.10188715920238355, -0.0901080891465607, -0.082155135546831, -0.03128938968918849, -0.0764375284456814, -0.06914855902301657, -0.06667965613947148, 0.021108853018337717, -0.059949225932336946, -0.05936672900384538, -0.049170636431520975, -0.04787366924166433, -0.05310667611639987, -0.034309311173663204, -0.03256434766497922, 0.019323524584904293, 0.02539199976802366, -0.009491811604466221, 0.023550354329809994, 0.028329675396311826, 0.017481879073194907, 0.026681154052849522, 0.02948813135172795, 0.028032733920487763, -0.029939606320877686, -0.028642639055672964, 0.02977129295162208, -0.007585216053584025, 0.028480388363013972, 0.02961495645119865, 0.02845991350431741, 0.02923457636050835, 0.028191651095554722, 0.0197362622898178, 0.005330377240493159, 0.017630891620213623, -0.01973655913316156, -0.004588057421618188, -0.020299530447337986, -0.017991595617031637, -0.01905168470562612, 0.02014503133578062, 0.004049796009645043, 0.018039660588435612, -0.0036747342149208106, 0.02029193029012418, -0.0034638022925132248, 0.013300763952986454, 0.01830153057983745, 0.014556568795251744, 0.020053060355334232, -0.0029651944265721517, 0.012878119247225947, 0.015210493639310013, 0.010926496196338679, 0.014117039202745475, -0.014694999749076034, 0.002819052444000997, 0.015521420954701284, 0.014759826317982698, 0.010526483472264855, -0.013496275611978388, 0.01817763166610036, 0.019627811714408222, 0.015064180998009926, -0.0025669145025111503, -0.012407823585255098, 0.01912818971814811, 0.017854342561133142, -0.010747579167482065, 0.01860925797781278, 0.017443668608352413, 0.006321049723185216, -0.011110214983642062, 0.0019751076002433874, 0.017002551700134927, 0.005943668999231541, -0.00995666572734796, -0.001795582062232738, -0.0017801081081122497, 0.010644917238823862, -0.001742824188588223, 0.009294638130499914, 0.001721539938878498, 0.011309433409710844, 0.011610922792122199, 0.01170994242770116, 0.006561367622076003, -0.00818837169602246, 0.008872977812335758, -0.00866060927720746, 0.009630042321342914, -0.001366728295918275, -0.0032445919066302134, 0.007418684780162598, -0.0013310349298962622, 0.01001261444850214, -0.007548288157828647, 0.01018287330812237, -0.0028672111482431605, -0.006612846444644934, 0.00118240000101357, -0.006903702916596861, 0.004581400399641914, 0.0009603762394949167, -0.0009457974470904971, -0.005829055671202379, -0.005527961302014658, 0.0008103823132913457, 0.0007512495690552003, 0.0007146847871623541, -0.0006833577217019835, -0.0006761413882165425, -0.004028355929665839, 0.00022659865705845165, -0.000554846244823514, -0.003740330867148488, 0.0005218328033946243, 0.0004578677936724596, 0.00044689717489047675, -0.00043823398150150583, 0.0004203633566002042, -0.0003995019843126514, 0.000383880938833346, 0.00035740263064568817, -0.0003539485056361715, -0.0023078460889241234, -0.002481757454114613, -0.000255892397527586, -0.00030959783817466753, -0.00033436015813438587, 0.00045827555413923283, 0.0009908127136249703, -0.0009891544735200672, -0.0002611051566808101, 0.00024369000260542474, -0.000230885940795754, -0.00022124391505823224, 0.00022119937982876848, 0.0008191256599125596, 0.0008235423741303679, -0.00021274289048811684, 0.00019432443077923924, -0.0003544272840920851, 0.0001772051230286887, 0.00028644809744111265, -0.00016020978442716065, -0.0011087781653333457, 0.00015128030321892659, -0.0004402675353572689, -0.00043230193229009685, -0.00046822447179848705, -0.0004616196870294705, 0.00013905165750055677, 0.0006190511866718879, 0.0006234678972697357, 0.0001083816486002118, 0.0005273987776444072, 0.0005150458205724819, -0.00013651748389950958, -0.00032403757247181285, 0.00013545037300253152, -0.00034563759128971363, -0.0003160719628651416, -0.0001740837673798413, 0.00023500849269831274, -0.0003390328174920063, 0.0002232670594919294, 0.00012044208208968265, -7.435320525467645e-05, -0.0001602764447517981, -0.00011937497595434718, 0.00047278095572314305, 8.706332601159645e-05, -0.00016603088339296165, 0.0004436583234480491, -0.00015643574502033472, 5.999680184073419e-05, -0.00026909556377397657, 0.0004267100445854453, 5.582559266518229e-05, -0.00028770553310165887, -0.00025478399754516313, 0.0001165190361748291, -0.00027437800236351204, 0.00040075852177743194, 0.00010151071709497682, -0.00018228085845509992, 0.00037913184685086894, 0.00018296665656811453, -0.00024456052899280735, 0.00014878031804548976, 0.000376292233928191, 0.00011276909831970895, -0.00017214639426616393, 9.454891718389404e-05, -0.00025993985707958075, -9.392985113568965e-05, 0.0001263794751270528, 0.0001712252190679978, -0.00012478899163993377, 8.155980645777758e-05, 0.00013766777766163654, 4.045172717494201e-05, 4.0449312598016217e-05, 4.044895059749e-05, 4.0439811714567005e-05, 4.0446908637103416e-05, 4.0450097782935375e-05, 4.0450642184452324e-05, 0.00036234264255878237, 4.044891640452058e-05, -0.00020797173933842535, 8.287579357930526e-05, -0.00022668006868867141, -0.00011098167686588081, 0.00032790899681187113, 3.973169465136818e-05, -0.00021820423437994495, 0.00011726520877088216, -6.549385930707915e-05, -7.678734436092264e-05, -0.00023222556335305119, -0.00011745385807923768, 0.00015686923018296353, 8.632931791854749e-05, -0.00018542204812257187, -0.00010785871092100767, -0.0002024924095792905, 0.00014528082328436998, -0.00020364480799886124, -0.00010226244305372597, -7.669327943794249e-05, -0.00018550942061886327, -0.00018840118859078807, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_harmonics_alpha[3] * s_harmonics_beta[15]), ])


    coefficients_array = np.array([-0.2461657652955841, -0.20634785720158696, -0.16361021837968762, -0.143721769369717, -0.13303735968701366, -0.10028684211206453, -0.08778744276970231, 0.03901708721045841, -0.07651147223699588, -0.06734173875083259, -0.06406422132631295, 0.02814984098305894, 0.02531928280866543, -0.06162860910198802, -0.049710442636846534, -0.05149893497496437, -0.04419554818384881, -0.040209272106110035, -0.04082150216654813, -0.03814670647619479, -0.033518043147628004, -0.010133367492426267, -0.026952785068153063, -0.023496231184522157, -0.018793058710272585, -0.005151640038417729, -0.018643122644858404, 0.004443349421363304, -0.015008328344865167, -0.013224848841691755, 0.0030354935567405016, 0.0026283385720627475, -0.00963006108913092, -0.009022187529016257, -0.009481477373559071, -0.002065783040118204, -0.00809368124355814, -0.0017835096503615979, 0.012143059955381594, 0.011146699379332428, 0.01206372740317496, 0.010842244430639828, 0.012866637801068503, 0.010597596048117197, 0.009571421151443717, 0.009401373524875623, -0.00137471857879033, -0.006006861872807775, 0.008471834006282198, 0.007435216147603179, 0.00787579518043922, 0.0012303641422103339, 0.0067883813365535416, -0.0011269284581167179, -0.0011055396117797146, 0.006250832941742378, -0.0010071857356554745, -0.0009193339730158072, 0.0008887122363167141, 0.0008017711902118124, 0.004072403464814912, -0.0033780385437877057, 0.003902145258252366, 0.0006974621607053942, 0.0006967183892398319, 0.0036924291185458486, 0.0006418658966300968, -0.0005261293880844381, 0.0004930088181556885, 0.0004835453546584527, 0.0004720080654907967, 0.0004787865562952905, -0.0021076340281056833, 0.0025074718743080854, -0.0004464877788818209, -0.00041849924878619224, -0.00039217563551820965, 0.00039789498655581337, 0.0003630989544655669, 0.00034440828512773575, -0.0003329289398779137, 0.00031421582854736945, 0.0015436808258868907, -0.000277447799147105, -0.00024291974765751933, -0.00024834306945495263, -0.00023737629162408247, 0.00024157980462136228, -0.00021491298328916606, 0.0001920615860767549, 0.0001901212084310883, 0.0001826922138807788, 0.0001788088337318689, 0.0001755083050347877, -0.0001535208585531923, 0.00014316830041246825, -0.0001273405636235299, -0.0005366463446072622, -0.00010830619364153303, 9.540402876804045e-05, 9.01301893100553e-05, 7.305384503302056e-05, -6.581997711916392e-05, -6.527951426850478e-05, 6.552070367563101e-05, -5.1366467996694596e-05, -4.974236419912924e-05, 4.4961245046826396e-05, 4.336104807130046e-05, 3.968037205857587e-05, 0.00016206421145103437, -3.1067127121697506e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_False_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), 1, (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 8), (s_beta_s ** 10), (s_alpha_s ** 6), (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[7]), (c_harmonics_alpha[12] * c_harmonics_beta[1]), (c_harmonics_alpha[12] * c_harmonics_beta[11]), (c_harmonics_alpha[12] * c_harmonics_beta[3]), (c_harmonics_alpha[12] * c_harmonics_beta[13]), (c_harmonics_alpha[12] * c_harmonics_beta[5]), (c_harmonics_alpha[12] * c_harmonics_beta[9]), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[15]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 2) * (c_beta_s ** 13), (c_alpha_s ** 1), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 2) * (c_beta_s ** 5), (s_alpha_s ** 2) * (c_beta_s ** 5), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 14) * (s_beta_s ** 6), ])


    coefficients_array = np.array([-0.029517508250443466, 0.024097650637475425, -0.030211866191201572, 0.018865300180945944, -0.016030998261359133, 0.014786892323113374, 0.023403292707404544, 0.01361714696678154, -0.014536676735903626, -0.028136415492317164, 0.026957321368861076, -0.010490285818721922, -0.0036253042434353996, -0.018785063327672914, 0.022137092415551427, 0.0175410184108338, -0.02118382385561028, -0.007976924062965718, 0.016095491552683073, -0.012409110951441414, 0.01843092177785342, -0.017928211065362906, 0.01590381929282178, 0.009040041249882056, -0.009794879772212405, 0.006901582864619659, 0.009729548530515001, 0.012622644199902335, -0.014057502156236749, -0.00645533421386307, 0.014818139902348313, 0.012141534613893038, 0.00509420708163285, 0.006114215550600598, -0.013037921748811973, -0.0059941780976556615, -0.011919006761587518, -0.011483360563249933, -0.010443987934318727, 0.009014618828547363, 0.011053450966000812, 0.010380673520648472, -0.009662602482818406, -0.00952320387726865, 0.00846149627898463, 0.007201539396184476, -0.010550357481220478, 0.002725047158985764, -0.009673803716300396, 0.010183529342855869, 0.010437557600690702, 0.008584866772336566, 0.008538467499681528, 0.010284505150751988, -0.008336821598243878, -0.007827616584576105, -0.010917450429870414, 0.004516780813488316, -0.009788225627161883, -0.006810743216864536, -0.010805500754831015, -0.0039872539226555506, -0.005721061340634132, -0.009266614765342228, -0.00729025458282838, -0.00790051097640537, 0.009259519087426083, 0.008015658883970298, 0.008068395263233077, 0.004248386594283723, 0.008918805059752124, 0.00734929269405128, 0.0018498234989050115, -0.005938067787281004, 0.007049981235414019, 0.009248525742706879, -0.01058009633340001, 0.006724865077474151, 0.0051052388564648546, -0.011331702633767178, -0.009659069387525303, -0.0016495791458417649, -0.007770911466566345, -0.00850883371589141, -0.010769644199244113, 0.008297036303992793, 0.005184874461972161, -0.011344889894319069, 0.006563214180228991, -0.008463382386136413, -0.0074687059776246695, 0.0014440527060152765, 0.008037203371844607, -0.0060636909242711, 0.004026538160022389, -0.0013453042518459216, 0.006755361634511822, -0.007615036271237249, 0.006360199031209472, -0.00130834662315323, 0.0038221861687951853, 0.0027698086277770746, -0.0044884749165629845, -0.0053443572570399216, 0.006386936108518838, -0.008815292491923706, -0.004805470385995168, -0.009431844335312026, -0.006250984547991905, 0.004641252541560395, 0.004135272473633138, 0.0044516384272703, 0.007074318422034658, -0.005651306502556961, -0.004369211028793613, 0.003529025764265136, 0.00397070787182728, -0.0031014933736898597, 0.006396395322439373, -0.0048902711340115266, 0.006176473739065518, 0.006578149430137931, -0.005793789669314311, 0.0008989779084217687, 0.003785614877615428, -0.00367245087161087, -0.004775306147671736, -0.0021073323196207686, 0.0007850793131657269, 0.003666875964347847, 0.003926622370768425, -0.004450320813128782, -0.0037948684631359604, -0.0028325118770793196, 0.0036093522845682463, -0.005835744590091134, 0.0026795673019998478, -0.0027145137937434594, -0.004396051843500514, 0.003131718723527001, -0.0045681182797442255, -0.004997100302965489, -0.0034135522873589216, -0.005138213367923645, -0.0019672631843054866, -0.004519581345289255, -0.004413315630549154, 0.0027016353354728773, -0.00119358560035206, -0.0035897408932017453, 0.003470888187503829, 0.0031543910424631223, -0.003913876049877272, 0.002892433161144122, -0.0035019951806300386, -0.0036498253673894507, -0.002432088836956961, 0.00299305588703138, -0.0005074353077370171, -0.0030237342791701277, -0.0005021399494320969, 0.0021879025324540676, 0.0026249023682359475, 0.001856310658424441, 0.003041797965642905, -0.002900699518372074, -0.0034395729957848705, 0.002516655099005613, 0.00402779638747764, 0.0006943579350692196, 0.002497644351115418, 0.0029726221203295743, 0.002637868097847274, -0.002785105137435979, -0.002638330261107205, -0.00036222423066576163, 0.00035190231316998156, -0.00034840427495977735, -0.0003459709979967072, 0.0027425989418850484, -0.0028992629600917983, 0.00033292089760017626, -0.00032399876375419854, -0.0021911366408470493, -0.0024681214976420966, 0.0018687076340061452, 0.00031033574768154316, 0.0010718018015312958, -0.0018411771334196157, 0.00029616158268293394, -0.0023751246071459764, 0.0024147358446556656, -0.00028176511360648333, 0.0002786673701058341, 0.0002769497125330231, 0.00027697967868221254, 0.0016994120416881045, 0.0017820400811218793, -0.0013228199481803002, -0.002254274998040507, 0.0014076535469276985, 0.0002512543552944554, 0.0002488548076643005, -0.0014535566472401774, -0.0015208472694943017, -0.0002445418316223975, 0.0012629638237796658, -0.0018433996314045666, -0.0002326132777707383, -0.00022453198148634013, -0.0014619956211882343, 0.0013050275735048407, 0.00020405807834187643, 0.0015617676465987127, 0.0010265737728472409, 0.00018702486966451306, 0.0015194294143084765, -0.0012608296038017083, -0.0008195095383922323, 0.0011860011732181012, 0.0008551950777588845, 0.000761261750987164, 0.0013663902103500595, 0.0003925654014420696, 0.0007912528290432984, -0.0005337321023131842, 0.001253689656736502, -0.0005308370157201789, 0.0005012209906079874, 0.0007748631459751224, -0.00013391806472100838, -0.0004901041776650339, 0.0009551592936295181, 0.0006234018266751054, 0.0008929865772883917, 0.00037909154228876036, 0.0003814914659055064, 0.0008518892901444526, 0.0003554090066286322, -0.00010453327852415263, 0.00010426115807303107, -0.00010313560844442106, -0.0002415085340067894, 0.0005508854257103659, 0.0008824958315810509, -0.00010077883234512584, -0.00023977424061848374, 9.90249598420165e-05, 9.460379299958524e-05, 0.0008535776507155248, -0.000679355357314384, -0.0003995885117588658, -0.00039669342546910503, 7.641162522461073e-05, -7.581879200892386e-05, -7.393504243895979e-05, 0.0005128332247079598, 7.164489672726421e-05, -6.990166219854221e-05, 0.0002850575416069205, 0.00028745746721162705, 6.895256279867473e-05, 0.0006208290004165045, -0.00018036727367366946, -0.0003321298622628482, -0.0001786329807071397, -0.0003300084842919603, 0.0001754626867581315, 0.00017279857052949818, 0.0001378352178110441, 0.0001357414001809269, 0.00023841011294512072, 0.0002400708958588252, -0.0002899119469480422, -0.00028856426952138535, -0.00014945112901291959, -0.00014840786461131934, -3.8327507046750426e-05, 0.0002093070196675305, 0.00021022866313324913, -0.00026036373691844077, -0.00025969107884033063, 0.0001889290190729568, -0.00013008293987052457, 0.00018920567797846302, -0.0002382164231065468, -0.00012973070348466754, 0.0001329888548788576, -0.00023812010392481464, 0.000130324741434778, -0.00017336763241485956, 0.00010465049182229579, 0.00010255667288043023, -2.593218426327274e-05, -2.5921530700107914e-05, -2.590773212906884e-05, -2.5925351552356612e-05, -2.5904466230982875e-05, -2.5927169012679395e-05, -2.5920002430632568e-05, 0.00017363119905781436, -0.00022082874945285718, -2.590415996968301e-05, 0.00017335702525903828, -0.0002212237945618158, -0.00011653261220309693, -0.00011678363255549936, 0.00016159759300479317, 0.00016085376297096484, -0.00010638445023045322, 0.0001094666718482989, 0.00011137309336755009, -0.00010715095811310996, 8.632295510215689e-05, 8.769948229204311e-05, 0.00014482534806080775, -9.84246328993848e-05, -9.963080265206388e-05, 9.648434917961447e-05, 9.763308227356641e-05, 7.622574747758225e-05, 7.688498362309986e-05, 1.3578268904738603e-05, 6.168947826086556e-05, 8.739160707956815e-05, 8.78792398742313e-05, 6.915115996952855e-05, 6.918437290943534e-05, 4.401222983184504e-05, 4.3437507188527746e-05, 7.434017052641645e-06, 8.055792074138397e-05, 6.383078141438886e-05, 8.048104005719185e-05, 1.0344724666635294e-05, 6.33292407663894e-05, 9.885495347665802e-06, 9.84797762651035e-06, -3.0486079403408764e-05, 9.744969401319238e-06, -3.0037898630365433e-05, 9.729474108379966e-06, 9.583310946569972e-06, 9.544895537798654e-06, 7.517471554575228e-05, 9.541310204303742e-06, 5.963665970582318e-05, 7.461654174240893e-05, 9.061596238254524e-06, 9.058188050747515e-06, 8.998282355535993e-06, 9.010071227915452e-06, 8.94480667727951e-06, 8.918481979856847e-06, 5.867912292428111e-05, 8.776182680189266e-06, 8.73837867192955e-06, 8.734835870182782e-06, 2.0133506968246373e-05, 1.985539679290969e-05, 8.311316741294186e-06, -8.280473125195531e-06, -8.225111254529721e-06, -8.285151024852027e-06, -7.95667409075634e-06, 7.365555046790005e-06, -7.261119940906893e-06, 4.400699344344499e-05, ])


    return np.dot(coefficients_array, expressions_array)

def ellipse_truncated_coefficients_function_shadow_FALSE_ideal_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_False_ideal_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list


@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 12), ])


    coefficients_array = np.array([0.4551241179932208, 0.01579011534627793, 0.016287410059637682, 0.013454745684660053, 0.007788261360135128, 0.011981520010746543, 0.012793182953476078, 0.012681485359721424, -0.014021329461177272, -0.010896891349844898, 0.006274738203976657, 0.010150008162301351, 0.006016066138869259, -0.010698872367376407, 0.010148096730734921, -0.01054564593934089, -0.008791261415107547, 0.00880366020087466, 0.003569188020698695, -0.007426612631328657, 0.008630078480036583, -0.00953033597402573, -0.0084419830134381, 0.006237233899384173, -0.004893223998746174, 0.008534865313131294, -0.00804489687182277, -0.0027382359072619378, -0.008034548322248685, -0.005982328007318099, 0.006818617130453329, -0.007727712667406003, 0.002233596933288612, -0.0021503233466866546, -0.008359679669788397, 0.006867128990399596, 0.0031086299900802625, 0.004954309329789544, -0.005770627915783354, -0.00688378145157283, -0.0017662239065505605, -0.004772637131900792, -0.005624049738958326, 0.005684986669544764, -0.005451520283600718, 0.0033066489749108735, 0.005729899691577551, -0.007619789930697618, -0.005661649786945244, 0.004258317633638829, -0.0046317854028225585, 0.005638824753700124, -0.001369047346458311, -0.005387993800084424, -0.004075444318379679, -0.004712038220504299, -0.0034908975291591702, 0.004973159346220913, -0.005289516955848411, 0.003351441532880225, -0.002787594062401179, 0.005013997016749652, -0.005244312176792476, -0.004782275805621887, 0.0014634117994064247, -0.005094896714665182, -0.0015998673641148893, 0.003733168641404805, -0.006497961583204901, -0.003478206773568224, -0.004950583777048594, -0.0030546379278796987, -0.0046746369461585545, -0.0016517237847676663, 0.0032828791916687176, 0.004417712276837199, 0.004804965503681157, -0.004921760050864842, -0.004028361258335111, -0.004083332237041343, -0.004752512316909258, -0.005303698662504105, -0.004368860320627711, 0.0024755769576986133, 0.004048225159267495, 0.0028185800603949896, -0.00554119678271699, -0.0029889801965197528, -0.00523169274306366, 0.0013435495004802392, 0.0030443019059865958, 0.004247280397534014, 0.004812272033607117, -0.004070901795945623, 0.003552358107795558, 0.005100594207154182, 0.0012055620800300287, -0.0030816433436348678, -0.0028895187464500717, 0.0031814375279675426, -0.005233919860706352, 0.005084829431121306, 0.002211789221272805, 0.0036809760768283088, -0.004365758456527144, 0.0048919108203191635, 0.0005482127023560573, 0.0018264829903446337, -0.002806667319912054, -0.002502847537507559, -0.002946513954759831, -0.002704831002387396, -0.004372765742175504, -0.0004743312979404486, -0.002821566060096694, 0.004267795989567586, 0.0016632560461235391, -0.002368946024903325, -0.003891056562671055, -0.0004561193718001148, -0.0004492888887823513, 0.0028311707882346894, -0.00044392313730116505, -0.0016130179749857827, -0.0021243966832505687, 0.00043924326915457116, 0.0017687454664841412, 0.0014275990422917498, 0.0022943874433154327, -0.002792746115760671, -0.0004176764976139521, 0.0029229230422801234, -0.00366024250016512, 0.0019287504951343332, 0.0015008695243094391, 0.0033072170552876953, 0.0027836148067759245, -0.0011899754900431977, -0.000364304315937275, 0.0028074758708731993, 0.0027639347388138673, 0.002538111630078168, -0.000769195169046989, -0.0023437421630572164, -0.0003479799287002793, 0.0013622770797240265, 0.00034115016244212727, -0.001936332690293182, -0.0014264577562411644, 0.0027475048443110495, 0.00032992290695167334, -0.003095976836419355, -0.0016807127587905432, 0.0012232368813778047, -0.0007976694550429701, 0.0019050755808201266, 0.001635329610011849, -0.00028460221094104155, 0.0013745348875216687, 0.0017037273368072892, -0.0002782627965745087, 0.0013138368427701697, 0.0012213575250207265, 0.001191116779782722, 0.0021016186077992467, 0.0017075181882335176, 0.001396249734311006, 0.0014825873558080977, 0.0021356458162244255, -0.0014579026833024893, 0.001633858468228229, 0.00024296307687305318, 0.00023991818858376174, -0.0008682397183894858, 0.0012088895187047013, 0.0011546046194999538, 0.0012798608019209512, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), ])


    coefficients_array = np.array([-0.2345124243354104, 0.01256948182911438, -0.007651053004766334, 0.005252456734535845, -0.005193217774865048, -0.00493411256737608, 0.004416526567630939, 0.0035019881927791045, -0.003266393070087991, 0.0025372857681461272, -0.0024732658632489585, 0.0021298592034711835, 0.0020150099421853917, -0.0019235231172351809, -0.0018066228911202068, -0.0018048131039785792, 0.0017558467286935137, -0.0017280394581862526, 0.0017145256302426774, -0.0014807472644822618, 0.0012425022664987343, 0.0011309468947265256, 0.0010811964547867742, -0.0010134793840362478, -0.0010186539466078403, -0.0009712881997065354, 0.0008549157219215216, -0.0007965038278301854, 0.000698445711578583, 0.0006822663795863368, -0.0006260578332041819, -0.0006142843293658124, 0.000603057789198027, -0.0005242929147020284, 0.0005140947807402448, 0.0004992447289316689, -0.0004817657714742274, 0.00046526240544464474, -0.0004400152471791612, -0.0004130588559099897, 0.0003986327729871243, -0.0003827259187515276, -0.0003623276556083043, -0.0003482251558989718, 0.0002750930839522204, 0.0002547923199512526, -0.0002591407529390653, 0.00021255435157821272, -0.0002126469438685581, 0.00019978375249832326, 0.00015229667437987338, -0.00013855964702067674, -0.0001344710624500912, 0.00013187514089033845, 0.00010587853964565361, 1.2316318113424698e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 14), ])


    coefficients_array = np.array([0.5448758820067039, -0.015790115346101384, -0.016287410059653964, -0.013454745684643374, -0.007788261360119546, -0.01198152001098012, -0.012793182953394336, -0.012681485359735161, 0.014021329461336052, 0.01089689134980555, -0.006274738203963431, -0.01015000816224103, -0.006016066138790679, 0.010698872367379124, -0.010148096730785042, 0.01054564593931828, 0.008791261415002565, -0.008803660200943279, -0.0035691880205593633, 0.007426612631274163, -0.008630078480007422, 0.009530335974039872, 0.008441983013440705, -0.006237233899491741, 0.004893223998836633, -0.008534865312987873, 0.00804489687177587, 0.002738235907253962, 0.008034548322302085, 0.005982328007431367, -0.006818617130433259, 0.007727712667462086, -0.0022335969333090997, 0.0021503233466830356, 0.008359679669742055, -0.006867128990315121, -0.0031086299900041914, -0.004954309329819158, 0.005770627915868335, 0.006883781451467093, 0.0017662239065668458, 0.004772637131759976, 0.0056240497389324, -0.005684986669735511, 0.005451520283677873, -0.0033066489749015203, -0.005729899691598769, 0.007619789930668138, 0.005661649786860449, -0.004258317633616407, 0.004631785402794452, -0.005638824753707019, 0.0013690473464789093, 0.0053879938001039985, 0.004075444318341811, 0.004712038220572483, 0.0034908975292151957, -0.004973159346173388, 0.005289516955964625, -0.0033514415329082, 0.0027875940624837656, -0.005013997016666074, 0.005244312176774904, 0.00478227580567085, -0.0014634117993472138, 0.005094896714656885, 0.0015998673639927526, -0.0037331686415823743, 0.006497961583116809, 0.003478206773609629, 0.004950583777106263, 0.003054637927806573, 0.004674636946145297, 0.0016517237847993693, -0.003282879191698007, -0.004417712276792196, -0.0048049655036931736, 0.004921760050802836, 0.004028361258240953, 0.004083332237047903, 0.004752512316983333, 0.005303698662508431, 0.004368860320719303, -0.0024755769577948124, -0.0040482251592260255, -0.0028185800603970483, 0.005541196782701405, 0.002988980196591803, 0.00523169274308375, -0.0013435495005449524, -0.003044301905888682, -0.0042472803975394414, -0.004812272033562205, 0.004070901795999358, -0.00355235810774681, -0.005100594207123167, -0.0012055620801266344, 0.003081643343684369, 0.002889518746450765, -0.0031814375278887007, 0.005233919860681924, -0.005084829431037933, -0.002211789221351931, -0.0036809760767679903, 0.004365758456511879, -0.004891910820370831, -0.0005482127023544644, -0.0018264829902077421, 0.002806667319867231, 0.0025028475375290025, 0.002946513954759482, 0.002704831002279024, 0.004372765742281843, 0.0004743312979404237, 0.0028215660600972308, -0.004267795989568379, -0.0016632560461149685, 0.0023689460250405944, 0.0038910565626199575, 0.0004561193718002648, 0.000449288888782418, -0.0028311707882559206, 0.0004439231373007966, 0.0016130179749676951, 0.0021243966832581846, -0.000439243269153342, -0.001768745466541005, -0.0014275990422549286, -0.002294387443400725, 0.0027927461158088426, 0.00041767649761386083, -0.0029229230423693307, 0.0036602425001411036, -0.0019287504950993694, -0.0015008695242845983, -0.0033072170553954065, -0.002783614806583904, 0.0011899754899866665, 0.0003643043159372635, -0.0028074758709432327, -0.0027639347388933627, -0.002538111630075845, 0.0007691951690699792, 0.0023437421631598274, 0.0003479799287116642, -0.0013622770797458263, -0.0003411501624421212, 0.0019363326902796206, 0.001426457756236171, -0.002747504844340129, -0.0003299229069516486, 0.0030959768363751127, 0.0016807127586802642, -0.0012232368814491569, 0.0007976694550806436, -0.0019050755808911865, -0.0016353296100644948, 0.0002846022109394405, -0.0013745348876139268, -0.0017037273368274218, 0.00027826279657420654, -0.001313836842758619, -0.0012213575249528275, -0.0011911167797850186, -0.0021016186078029885, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (s_beta_s ** 14), 1, (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (s_alpha_s ** 2), (s_alpha_s ** 8), (s_alpha_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14), (s_alpha_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[11]), (c_harmonics_alpha[9] * c_harmonics_beta[13]), (c_harmonics_alpha[9] * c_harmonics_beta[7]), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[3]), (c_harmonics_alpha[9] * c_harmonics_beta[1]), (c_harmonics_alpha[9] * c_harmonics_beta[5]), (c_harmonics_alpha[9] * c_harmonics_beta[9]), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), ])


    coefficients_array = np.array([-0.4411997493471783, -0.22750559978786944, -0.21369414955447272, 0.1228811599661923, -0.15699548611679856, -0.14318403589190104, -0.1212199414558026, -0.10844946697332933, -0.09959456901109763, -0.038734650524196015, -0.08786507037295942, 0.034210954612027, -0.08511246549655091, 0.05772505972811209, 0.055919210619701044, -0.07428757723891875, -0.0747311418223187, -0.06467449829087307, -0.06691855681218138, 0.05382917674917937, 0.05202332771397506, -0.04700868456403073, -0.045781865295260654, -0.05751538572319073, 0.0517842614573293, 0.05017236016410828, 0.04984735610949014, 0.04842940239410079, -0.013811450266336267, -0.013311163002429792, 0.047978428130758435, 0.046726477090515056, 0.046218211808521065, 0.04510431834557809, 0.04358562657665029, 0.04458474096017516, -0.008942922797191518, -0.027392714054255304, -0.02380966434463416, -0.026165894851003246, -0.021542894338313478, -0.021640686855802897, -0.018830544571802173, 0.00461729734465018, -0.017574374094583855, -0.016368264288390926, 0.003901828637743409, -0.0035887617778991056, -0.0033432335494582824, -0.0032959397140648115, 0.0032221335357488523, -0.011454295813761561, -0.0028569477514421124, 0.002844162771924067, 0.011199559859874737, -0.011918879630575724, 0.01336136577001723, 0.0026020420176007474, 0.014335463216052146, -0.009187525752225483, -0.010733479261772467, 0.0109833434507706, -0.01187721387291507, 0.014722468451124423, 0.012766443296376788, -0.00233861983433353, -0.0022803322317281913, 0.013538858060037467, 0.0148058738044592, 0.006746787373240379, 0.010835502862200868, 0.007274252925588932, 0.011938760960028584, 0.008544536337843895, 0.013813688631273415, 0.01472651091398533, 0.012441402802266051, 0.013833751019352079, -0.009067071499479103, 0.0101215007749099, 0.01262692069762483, 0.00819551011600358, 0.011036806379150789, 0.01371937057163846, -0.00834447437660497, 0.012637975444896305, 0.0017323257471744066, 0.0016534764474832378, 0.011439010977650795, 0.011570930549876417, -0.0015187021493841925, -0.0015132009013652005, -0.00718045053015207, 0.0015008271660741977, -0.00142752739801058, 0.011555055689446148, -0.0013587707071452055, 0.004091763847145136, 0.004486419632876134, -0.001303853400276313, 0.0012458221132322636, 0.0012351428546596536, -0.001217792774799254, 0.0012023512407322529, 0.0012142583672620753, -0.0052278802924102235, -0.0069212119725500865, -0.00116761460033908, -0.005934545129480767, 0.0010215711820983698, -0.000965440664114345, -0.004792564943452693, 0.0008541252114272332, 0.0008341945417666268, -0.0007861682541412615, -0.004230998324935475, -0.004259600444612019, 0.004560334523240859, -0.003058572652923269, -0.0006313758399909269, 0.0006325211969341675, 0.0037018723940197684, -0.0006039430415804977, -0.004082653103228078, -0.0005754129548159707, 0.0005710355892379726, -0.003111302896713255, -0.0005003672242195643, 0.00048073919016985035, -0.0004373056114949884, 0.002399122022947524, -0.00043160788755450003, 0.00042213020979263595, 0.0027264923299119754, 0.00016580106967111104, -0.0003956355719786711, -0.001723400067505933, -0.0023110455721983246, 0.0017971911594428828, -0.0015695724266535354, 0.00023304644025750522, 0.00022646130068452062, -0.00022644060551409745, 0.0018431845009793915, 0.0002054130411763525, -0.00016688598302385155, 0.0002985545071255248, -0.00021520888151117004, -0.00016017104136155328, 0.00015242987521642403, 0.0005368311755587506, 0.0011295199858359327, -0.0011358777963500501, 0.0005302442269289304, -0.00022841020637057944, 0.0001870020817626389, -0.0002820159935639513, -0.0002768138697210709, -0.00030086756711363244, -0.00029520846664284213, 0.0004039637579595344, 0.0003973768031589892, 0.0004154856805318662, 0.00034844508745902105, 0.00033811184875380984, 0.0003303612777861089, -0.00021104039844713305, 8.613743860049293e-05, -0.00020583828699014632, -0.00022548657180306055, -8.480615380057857e-05, -0.00021982745399234355, -8.207989007818193e-05, 0.0001496357091149822, 8.074860231396486e-05, -0.0001086280315269593, 0.00014891879773581016, -0.00010658090562218399, 5.841865685129473e-05, 0.00029980244056385276, 0.000290888250148386, -0.00010410656921174048, -3.937784542724544e-05, -9.928081620981012e-05, -0.00017657996023263527, -0.00016932312237990247, -0.00032072667316913547, -0.00018863726163303833, 0.00027344706825398787, -0.00018129575265802232, 0.0002670037124942527, 6.791958144009248e-05, 0.0002470709537914549, -0.00011423146220617623, 0.0002467328966932042, -0.00011417870543536728, 6.163641321789434e-05, 6.2530767511304e-05, 0.00011288150952748296, -6.224348843485496e-05, 9.368180075638833e-05, -0.00015202276347071905, 0.00011216460252798537, 9.332027466825355e-05, -8.075506581478301e-05, 2.7731213311782384e-05, 2.773109738484721e-05, 2.773024616178855e-05, -5.9517224781732506e-05, 2.7707113126275804e-05, 2.7674323750710993e-05, 2.7723689548997927e-05, 2.773145676729672e-05, -7.870793335354303e-05, -0.00016284886316499371, -0.00014271115365673725, 2.7731084945879706e-05, 5.692673490313304e-05, -0.0001538250084242972, 0.0002237698731897971, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_harmonics_alpha[7] * s_harmonics_beta[15]), ])


    coefficients_array = np.array([-0.24204932451033676, -0.1981757857000688, -0.1640662353108674, -0.1405204345472757, -0.1319930469791797, -0.09783109591207381, -0.0876413901688899, 0.034864533763158054, -0.07462010065052399, -0.06661067004718892, -0.06426669529166931, 0.02735207388144001, 0.025947136927464247, -0.060158201831983, -0.050066715435539824, -0.05034386273702951, -0.0406366559618579, -0.04327942785608192, -0.04038723467499937, -0.03812504226225582, -0.0339773776804909, -0.026751763787873032, -0.023741094147657193, -0.00659724064298042, -0.0055018433162594025, -0.018916373322482912, -0.01861543925719757, -0.015364565429005873, 0.003614013595049488, -0.013323619767747453, -0.010032983414160035, -0.009263506948008315, -0.009672101948918058, -0.00841287173580152, -0.0017836723749511208, 0.0016530810922650943, 0.01173005719737812, 0.01162658844930231, 0.010707448487190761, -0.006426651935962479, 0.012460297987472254, 0.010425154301658919, 0.01013310619968702, 0.009134557861463029, 0.008942161570977075, -0.0013297538721343267, 0.008053961859359542, 0.006988614449376196, 0.00740056083336591, -0.001117120338726899, -0.0011251158148732987, -0.001108775584910681, -0.0010785658761170128, 0.006359788208474566, 0.001008024255517692, 0.005793495521282358, 0.0009821331756198327, 0.0009032270976251886, 0.0008833719766044237, -0.0008697317628712117, 0.0008653497749900928, 0.0008715822644254854, 0.0008141800487808368, -0.003705952415400254, 0.0007377255676811073, 0.003648087828147458, 0.0006726960000730148, 0.0006624956268435219, 0.0034858728032017834, -0.0006148172990325343, 0.003264748534195873, -0.0005854522282610022, 0.0005482415819999086, -0.002499331248115473, -0.000533283147849222, -0.0005194833100483569, 0.0005221967698565124, -0.0005207333109463949, 0.000491171704670388, 0.00047288079484090757, -0.00046448883179163073, -0.00042461609283687187, 0.00038395543166379727, 0.0020775420811296247, -0.00036876601574819813, 0.00033760454245366876, 0.0003332075221563123, -0.0003101859738126609, 0.00025311141749382937, 0.0011289334859983906, 0.00019622899255282298, -0.0009190457407096286, -0.00019615144225377168, 0.00018576250680606154, 0.00017850552191175112, 0.0001801846163723508, -0.0001738036051963656, -0.00015940263722180885, 0.00014442207399951028, -0.00014448689443588168, -0.00012481856940785342, -0.0001096221828785395, 0.00010534113876240874, 0.00010375442835218579, 8.690578121795553e-05, -7.806404027858955e-05, -7.88187619110224e-05, 5.6662602722330786e-05, -4.944920125087041e-05, -0.00022653348146778175, 2.2210946266358567e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_True_ideal_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 4), (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), ])


    coefficients_array = np.array([0.02570791258465483, -0.026814431312924207, 0.02435519954568041, -0.027328765475587984, 0.019820823790037512, -0.028680590324880968, 0.022489040536642885, -0.01307286783909484, 0.01238309959120589, -0.026778920057395097, -0.02518763730264942, 0.011291522570627821, 0.020082757929447855, 0.01848175335201282, -0.010833301584514603, -0.022637062508682006, -0.012616215970469316, 0.01605299450354674, -0.018467761047864923, -0.006977465635369602, -0.010416263458731216, -0.006793455879700179, -0.014765211622605601, 0.009212723103030975, -0.009028193754195427, -0.015815596528278776, 0.012694611841149417, -0.014044251433752828, 0.005605483370074817, 0.00781834380707011, 0.010721915525403405, 0.011512114279743036, 0.012791461727291356, -0.009716121971363297, 0.008401427955590214, 0.012165657294567245, -0.008610668097255136, -0.009119568695544472, 0.004325390781214089, 0.008571191295504233, 0.0034380058424926326, -0.008459274308143442, -0.010076155675421503, 0.007051979696196932, 0.009068441578366813, 0.009508637841384164, -0.006814247711364877, 0.006079665276996349, -0.008863818512591545, 0.0022840568248668593, -0.0022867311467645026, -0.008886941858615742, 0.009920631067944228, -0.009068422472123772, 0.007881159811247197, 0.008716334746622484, 0.007373605238014851, -0.008680760685591739, 0.007917100639779606, -0.008025147065668084, -0.007748974274048336, 0.006546229700890598, -0.008200980657870487, -0.0018267642476624633, -0.005984110864415856, -0.009304637968375067, -0.006358970548143166, 0.00908099098364591, -0.005116432170051866, 0.0037678292874709766, -0.009199820925221125, 0.008574959929079914, -0.009859407825660974, -0.006329709858664085, -0.009392993503926726, -0.007681262749245839, 0.003931910042925812, 0.006965708722164145, -0.009880008628344254, 0.005092805563990826, -0.001429506986803776, 0.0013995917228665539, 0.004859880161947699, 0.006675918292558458, -0.00492439425196295, -0.0070872685731150015, 0.0024492109874678, -0.005838967423996625, 0.004652870242769668, -0.00593949153266314, -0.005881961365881218, 0.008691478223728621, 0.004078792459826463, -0.005622081195149092, 0.0011374281093792173, 0.0011402100511730324, 0.0018661590132832704, 0.001128642658904997, 0.0011278069874443358, -0.005895038747849332, -0.0036085142922586363, -0.003861444561918989, -0.0056449791520895845, -0.005150112885345392, 0.008556145349839363, -0.0034966472719001186, 0.007120272242105488, 0.00647652107501764, 0.005509452836597803, -0.0010258510823893644, 0.001009495137368828, -0.004698396202539463, 0.004874068332286081, -0.0010032929629405236, -0.0010006102640285454, 0.0010014465082041906, -0.002641659443017634, -0.006437126782084731, -0.002110655251880583, -0.002141128170455901, 0.004851939780311564, 0.00729050518156453, -0.0009516658455353576, -0.005855765182103051, -0.000928665011126465, 0.0009250015043082798, -0.006760323635342428, -0.0016871275068708078, -0.0067182021509621355, -0.006056224473854972, 0.004832434328198806, -0.0009013175015868653, 0.0054017735154745184, -0.003255604028717419, -0.0038908744139485576, 0.004549199308941022, -0.0008752363946021312, -0.0041094465566191415, -0.0038300006642314754, -0.0007945606324111866, -0.0037453137234233053, 0.003945736371155048, 0.000778498620303754, 0.003568711790811952, -0.0026565141568973332, -0.003656763623397388, 0.00646254192424784, -0.0039654131026364975, 0.0007335678889902657, 0.00608588646734322, -0.0007312985049025564, 0.002763180610834596, -0.0035095874860104834, 0.002031202294481869, -0.0024197512391262964, 0.004352237933567581, -0.0022993912040776086, -0.0006786455402075133, -0.0006300747747298252, -0.0006311908968690241, 0.005700188454999623, 0.0038086243927040945, -0.0035183372531244115, -0.002908418031624019, -0.0018055953618976125, 0.0005960818299235432, 0.0033013242635369544, -0.002578059230395618, -0.003502752046263975, 0.0005662266539381512, 0.0014266279343289419, 0.0036740877902183586, 0.003021090379255922, -0.0040541342532682545, 0.0004987608917278124, -0.001896656733250006, 0.004219411021999708, -0.0033617151701135113, 0.000462219733443236, -0.0026649402296060123, 0.003403358543518391, -0.0035847932612740638, 0.002683934661553589, 0.0015684765199027715, 0.00289884274731684, -0.0024780498120643736, 0.0015327745374420956, 0.0030386966283203966, 0.0024226431115800737, -0.003062793538128459, 0.0035262272503062244, -0.0003621710738364722, -0.002124068956431528, -0.0003583505040363868, -0.0019641995707724356, 0.0008888711559793389, 0.0018194796321247513, -0.00233260561501116, -0.0003351489874652441, -0.0009619301700902266, -0.0018556280419686694, 0.0020804977967708955, -0.0022333770288330604, -0.001220074335063382, -0.0015266885403201844, 0.0017724020946931044, -0.0002870873186852398, 0.0020712515776464295, 0.00027515317654716354, 0.0010479619231230368, 0.00172674982208534, 0.00024283773223896554, 0.0011673169266787997, 0.00022451141183477146, -0.00202099860934447, 0.0011596775845899737, -0.0014927305695369708, -0.001071179397190604, 0.0016056095582304088, 0.0016372039492568832, 0.0014427739662142482, -0.0009803730578238567, -0.0001733488091393216, 0.0008863026094564986, 0.001339819203927016, 0.0009497814273802327, -0.0006193510029444192, 0.0009518566697313049, 0.00040944662464353996, -0.0008578754504237426, 0.000860437277873672, -0.0008695685478378404, -0.0010423669485915186, 0.00013166767143855048, -0.0011408835283505832, 0.0009421671914440875, 0.0010340907187837626, 0.0007663960447435004, 0.00011291451235363766, -0.0009241133262271386, -0.0007394987661413517, 9.67026866989655e-05, 0.0003980014826995193, -0.0007182351409250827, 9.118695810893631e-05, -0.0006697859240745368, -0.0006648952959964834, -0.0005107978397275056, -0.0002839036930671265, -0.0002819837866112776, -0.0004125564773499081, 0.00020042867818379002, 0.0002020043725584986, 0.00038932656376804864, -0.00012868504237952653, -0.00012757218179804545, 0.0002804081840047891, -0.00021231176552764772, -0.0002103918578129506, 0.00015094116494202906, 0.0001525168608256301, -9.590037720637074e-05, -0.00017627392315936938, 0.0002109538488731578, -9.478751582881189e-05, -0.00017483777314670386, 0.00019435527744101206, 0.0002334771962807348, 9.270628174214727e-05, 9.094689482594759e-05, 7.274615597434165e-05, 7.138334056587916e-05, 0.00012642755905864516, 0.00012754295419229394, -0.00015954222275800167, -0.00015370411472342483, -0.00015275172008928585, -7.929416510658435e-05, -7.860906273084109e-05, 0.00011115043636582485, 0.00011180552858913301, -0.0001378986919898055, -0.0001373693116392064, 1.730053452124432e-05, 7.984213952264485e-05, 0.00010046270821041111, -6.887404386540989e-05, 0.00010071519638819335, -0.0001260486599696268, -6.861670370345278e-05, 7.058860230791646e-05, -0.0001258815552445553, 6.882921469624566e-05, 1.5112619477720516e-05, 5.5517961860933916e-05, 5.415514685111116e-05, 8.917921685760047e-05, 9.244306041014283e-05, -0.000116745196899569, 9.235064138271023e-05, -0.00011688828025392296, -6.157368001489329e-05, -6.16906732335556e-05, ])


    return np.dot(coefficients_array, expressions_array)

def ellipse_truncated_coefficients_function_shadow_TRUE_ideal_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_True_ideal_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list
