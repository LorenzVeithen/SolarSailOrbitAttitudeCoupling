import numpy as np
from numba import jit
from time import time

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 12), ])


    coefficients_array = np.array([0.4385846609371699, 0.018291150091744222, 0.01296834123504817, 0.020414852488860602, 0.014281786322353962, 0.009064748866816033, 0.014858453027996443, 0.008148828706111548, 0.012178664226757152, 0.007277232656698295, -0.009854425880539508, 0.013197673263761043, 0.013292244406715727, -0.00470079313582148, 0.004648476701290503, 0.008771251823595855, -0.008234529685883799, -0.0062710893800316005, -0.006665258353492485, 0.009888960013360728, 0.00937953453913632, 0.007122608078525499, 0.009397707506205975, -0.0055506260403226345, -0.0024835331671065387, -0.007726598148569901, 0.005093476847660036, -0.0057452402989427165, 0.0028019166723769486, -0.00665672888826944, 0.001995857009695147, 0.005165329024589971, -0.0031139153598235127, -0.005183535117024671, 0.006051374104702229, 0.006829343588849904, 0.0032659398938074936, 0.004969493011516352, -0.00578059004536179, 0.0025968622146047907, -0.0015267827837980644, -0.004341456163131064, 0.0062840593098205475, -0.004934722827926517, -0.004852463468757967, -0.005591998356100162, -0.002144084724523311, -0.0032759574261591482, -0.003743886085028487, -0.004815011096201991, -0.0026177353949709387, -0.00335551443047662, -0.00333236905191588, -0.005077778976404542, -0.0034327604218655694, -0.004522129094255042, 0.001021083233371659, 0.003897999945703796, 0.003327245234420882, -0.0020949063268769154, -0.003731702864676586, -0.004921668480605915, -0.0024192250051204107, 0.0032280711790137057, -0.0009266715099539083, -0.000921451969512419, 0.0036873571906544745, -0.002363412353513445, 0.00429296708209707, -0.004109610592123247, 0.004111816378066257, 0.0031973083895602493, 0.003301742176899233, 0.0025131016319406593, -0.00419040997049377, -0.00437882125799335, -0.002540655456556637, -0.003789117687035381, 0.0037114723442212135, -0.0024011156897751048, -0.004179018528923047, 0.000690075090965757, -0.0014940191651945268, -0.003263743377326429, -0.004228212199276496, 0.0033353636716319376, -0.0023343712791229956, -0.0006182090107603868, 0.003825695702039464, -0.0019339173937529487, 0.0024471824752585946, -0.0038884877075459415, -0.0022920538344320895, 0.00251802289968199, 0.003002199739294802, 0.002607699032808316, -0.0008192674233733016, -0.002158113489763248, 0.0005418433441808726, -0.0030963296655188827, -0.0034823670089295365, 0.0025647782937538253, 0.002634672116665334, -0.0023944249701797564, 0.0034757252848898507, 0.002646994552323731, 0.0029438580922588227, -0.0022034132224310883, -0.0026778869549608057, -0.0032949913419918504, 0.002969603925614103, -0.002149537322870617, -0.003170384986087317, 0.0036949558901013457, 0.0007896770097077602, 0.0019098765890053918, -0.0033703586124336684, -0.00339273467015803, -0.0034994371996270902, -0.0018502472487803773, -0.002177499474272713, -0.002606044849888682, 0.002516909342718148, -0.0011704684359709746, 0.0037233236035585787, 0.002553717725773005, -0.0035537709800748203, 0.001275338128735319, -0.002568214641571605, -0.0027570183076361075, 0.00043382915690836217, 0.0015914062654128632, -0.0004327080227033321, -0.0012670192151191966, 0.0019080909121887964, -0.002562207807864934, -0.0030976481817138685, -0.0014773672763528434, -0.0004166681331348536, 0.003675385736494254, -0.002963383079475309, -0.0007429650181949432, -0.002910747074295087, 0.0024377955870711174, 0.002427612963206642, -0.0023065647005098646, -0.001418625901928906, 0.0012886756986476248, -0.003089609020049907, -0.001964265586502829, -0.0019569046392917773, -0.003150820223130862, -0.0028227877840618816, 0.002485884008105026, 0.0015031512155304816, -0.0016439414146998427, -0.0011502340138840848, -0.0025720182449276052, 0.0015376453222514048, 0.0012595250770740902, -0.0008857364493690273, 0.0016237155223215417, -0.0014083171138398053, 0.001500565499392415, -0.0024961927078437107, 0.001386636668050998, 0.0002878855364490828, -0.0022833078097748006, 0.0017247234648561246, -0.001360999246815778, -0.0018383069617405414, 0.0025503173551500676, 0.001674569115915368, -0.0014582428614263487, -0.0023446823667601013, 0.0016372412763957988, 0.00026377610968121367, 0.0014801258615095975, 0.0016927433127723118, -0.002275918873795916, 0.0016570456963333714, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), ])


    coefficients_array = np.array([-0.2334822669231708, 0.0095113457739457, -0.0067173334280761126, -0.006282513182511164, 0.006114731454998803, 0.004267302753072321, -0.0038710688311533485, 0.003239026583275608, -0.0032023306754269606, 0.0027218425826632062, -0.002283839138166098, 0.0019311579903296976, -0.0012726522636910943, 0.0012870439864841984, -0.0012127421522349945, 0.001113056271489619, -0.0011006745619830621, -0.0010507925983631442, -0.0010200580766711045, 0.001007324403064137, 0.0009337446533157071, -0.0008864352899273359, -0.000872383494657185, -0.0008448130788395381, -0.0008295618283981627, 0.0008190307020550714, 0.0007556234677390871, 0.0007414103629865994, -0.000701124909522427, 0.0006568124450463865, 0.0005956825965909352, 0.0005750275041998371, -0.0005559229996361902, 0.0005434419641556473, 0.0004948819283520258, -0.00044042100253056395, -0.0004309586053078584, 0.00042412636862405255, -0.000377131735336531, 0.0003420930892930522, 0.0003398697879673611, 0.0002917587149093958, 0.00028598569617862147, -0.00027594384370282154, 0.0002693946848274046, 0.0002518016828420793, -0.00023177308281769365, -0.00022217466511440016, 0.00020143135306311877, -0.00018690502054641539, 0.00016499106611611805, -0.00014477645666438483, -7.886811135916854e-05, -8.000094476125151e-05, 6.669510484134113e-05, 5.436299545245403e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), ])


    coefficients_array = np.array([0.5614153390627232, -0.018291150091728683, -0.012968341235128428, -0.020414852488926133, -0.014281786322277225, -0.009064748866726265, -0.014858453028245823, -0.008148828706124184, -0.01217866422654068, -0.00727723265678724, 0.009854425880523269, -0.013197673263805672, -0.013292244406774968, 0.004700793135814035, -0.004648476701349591, -0.008771251823602258, 0.00823452968597937, 0.006271089379918431, 0.006665258353536193, -0.009888960013568454, -0.00937953453890631, -0.007122608078438876, -0.009397707506048122, 0.005550626040348765, 0.0024835331670969322, 0.007726598148549023, -0.00509347684762827, 0.005745240298985345, -0.0028019166724699627, 0.0066567288882337745, -0.001995857009708944, -0.0051653290244991065, 0.0031139153599199693, 0.005183535117165579, -0.0060513741047057675, -0.006829343589059053, -0.0032659398937592054, -0.004969493011529477, 0.005780590045343326, -0.00259686221449356, 0.0015267827837961616, 0.004341456163171941, -0.0062840593098513475, 0.004934722827835337, 0.004852463468718478, 0.005591998356142903, 0.0021440847245076185, 0.0032759574262880157, 0.0037438860848993745, 0.0048150110961321215, 0.0026177353950396086, 0.0033555144304858167, 0.003332369051878202, 0.005077778976424207, 0.003432760421872616, 0.004522129094174041, -0.001021083233372401, -0.003897999945735769, -0.003327245234159708, 0.002094906327055438, 0.003731702864619877, 0.004921668480608313, 0.002419225005176742, -0.0032280711789941666, 0.0009266715099538784, 0.0009214519695132647, -0.0036873571904824857, 0.002363412353363235, -0.0042929670821277325, 0.004109610592132686, -0.004111816378090586, -0.003197308389571234, -0.0033017421768629786, -0.002513101631875638, 0.004190409970462743, 0.004378821258176353, 0.002540655456354432, 0.0037891176869513316, -0.0037114723441627195, 0.0024011156897031476, 0.004179018528923366, -0.0006900750909661501, 0.0014940191651812813, 0.0032637433773331716, 0.0042282121992471685, -0.00333536367162604, 0.0023343712791036725, 0.0006182090107567984, -0.003825695701996836, 0.0019339173937079563, -0.002447182475225487, 0.003888487707574733, 0.002292053834418012, -0.0025180228996705394, -0.0030021997392287066, -0.002607699032826332, 0.000819267423384692, 0.0021581134897654306, -0.0005418433441808946, 0.0030963296655663625, 0.0034823670089631363, -0.0025647782937044034, -0.002634672116580745, 0.002394424970188336, -0.0034757252848695744, -0.0026469945523478187, -0.0029438580921655965, 0.0022034132224383616, 0.0026778869550233403, 0.003294991342031984, -0.002969603925584493, 0.002149537322969328, 0.0031703849860514706, -0.003694955890130807, -0.0007896770096344839, -0.0019098765890247916, 0.0033703586124555042, 0.0033927346702298583, 0.0034994371996667053, 0.0018502472488041897, 0.0021774994742715984, 0.002606044849837911, -0.0025169093426959123, 0.0011704684360244323, -0.003723323603477738, -0.0025537177256567518, 0.0035537709801118826, -0.0012753381287576092, 0.0025682146414180915, 0.0027570183075918777, -0.0004338291569082346, -0.0015914062655858867, 0.00043270802270331294, 0.0012670192151093137, -0.0019080909122361437, 0.002562207807907032, 0.003097648181662194, 0.0014773672762893977, 0.0004166681331370855, -0.003675385736504435, 0.00296338307950247, 0.0007429650181693376, 0.002910747074262111, -0.0024377955871259516, -0.00242761296319811, 0.002306564700553815, 0.0014186259020787168, -0.0012886756986974235, 0.00308960901997834, 0.0019642655864701257, 0.001956904639302848, 0.003150820223027479, 0.002822787784043517, -0.0024858840081653575, -0.0015031512155375033, 0.001643941414645754, 0.0011502340139450987, 0.0025720182450266254, -0.0015376453222441047, -0.0012595250770688767, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (c_beta_s ** 10), 1, (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 14), (s_alpha_s ** 2), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 4), (s_alpha_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (s_alpha_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (s_alpha_s ** 10), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[7]), (c_harmonics_alpha[11] * c_harmonics_beta[11]), (c_harmonics_alpha[11] * c_harmonics_beta[13]), (c_harmonics_alpha[11] * c_harmonics_beta[1]), (c_harmonics_alpha[11] * c_harmonics_beta[3]), (c_harmonics_alpha[11] * c_harmonics_beta[5]), (c_harmonics_alpha[11] * c_harmonics_beta[9]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[15]), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), ])


    coefficients_array = np.array([-0.41453516429953496, -0.21201348792439786, -0.20252167634226048, 0.12423407116808098, -0.14466733347089217, -0.13517552191237525, -0.11060954184103898, -0.10188715920238355, -0.0901080891465607, -0.082155135546831, -0.03128938968918849, -0.0764375284456814, -0.06914855902301657, -0.06667965613947148, 0.021108853018337717, -0.059949225932336946, -0.05936672900384538, -0.049170636431520975, -0.04787366924166433, -0.05310667611639987, -0.034309311173663204, -0.03256434766497922, 0.019323524584904293, 0.02539199976802366, -0.009491811604466221, 0.023550354329809994, 0.028329675396311826, 0.017481879073194907, 0.026681154052849522, 0.02948813135172795, 0.028032733920487763, -0.029939606320877686, -0.028642639055672964, 0.02977129295162208, -0.007585216053584025, 0.028480388363013972, 0.02961495645119865, 0.02845991350431741, 0.02923457636050835, 0.028191651095554722, 0.0197362622898178, 0.005330377240493159, 0.017630891620213623, -0.01973655913316156, -0.004588057421618188, -0.020299530447337986, -0.017991595617031637, -0.01905168470562612, 0.02014503133578062, 0.004049796009645043, 0.018039660588435612, -0.0036747342149208106, 0.02029193029012418, -0.0034638022925132248, 0.013300763952986454, 0.01830153057983745, 0.014556568795251744, 0.020053060355334232, -0.0029651944265721517, 0.012878119247225947, 0.015210493639310013, 0.010926496196338679, 0.014117039202745475, -0.014694999749076034, 0.002819052444000997, 0.015521420954701284, 0.014759826317982698, 0.010526483472264855, -0.013496275611978388, 0.01817763166610036, 0.019627811714408222, 0.015064180998009926, -0.0025669145025111503, -0.012407823585255098, 0.01912818971814811, 0.017854342561133142, -0.010747579167482065, 0.01860925797781278, 0.017443668608352413, 0.006321049723185216, -0.011110214983642062, 0.0019751076002433874, 0.017002551700134927, 0.005943668999231541, -0.00995666572734796, -0.001795582062232738, -0.0017801081081122497, 0.010644917238823862, -0.001742824188588223, 0.009294638130499914, 0.001721539938878498, 0.011309433409710844, 0.011610922792122199, 0.01170994242770116, 0.006561367622076003, -0.00818837169602246, 0.008872977812335758, -0.00866060927720746, 0.009630042321342914, -0.001366728295918275, -0.0032445919066302134, 0.007418684780162598, -0.0013310349298962622, 0.01001261444850214, -0.007548288157828647, 0.01018287330812237, -0.0028672111482431605, -0.006612846444644934, 0.00118240000101357, -0.006903702916596861, 0.004581400399641914, 0.0009603762394949167, -0.0009457974470904971, -0.005829055671202379, -0.005527961302014658, 0.0008103823132913457, 0.0007512495690552003, 0.0007146847871623541, -0.0006833577217019835, -0.0006761413882165425, -0.004028355929665839, 0.00022659865705845165, -0.000554846244823514, -0.003740330867148488, 0.0005218328033946243, 0.0004578677936724596, 0.00044689717489047675, -0.00043823398150150583, 0.0004203633566002042, -0.0003995019843126514, 0.000383880938833346, 0.00035740263064568817, -0.0003539485056361715, -0.0023078460889241234, -0.002481757454114613, -0.000255892397527586, -0.00030959783817466753, -0.00033436015813438587, 0.00045827555413923283, 0.0009908127136249703, -0.0009891544735200672, -0.0002611051566808101, 0.00024369000260542474, -0.000230885940795754, -0.00022124391505823224, 0.00022119937982876848, 0.0008191256599125596, 0.0008235423741303679, -0.00021274289048811684, 0.00019432443077923924, -0.0003544272840920851, 0.0001772051230286887, 0.00028644809744111265, -0.00016020978442716065, -0.0011087781653333457, 0.00015128030321892659, -0.0004402675353572689, -0.00043230193229009685, -0.00046822447179848705, -0.0004616196870294705, 0.00013905165750055677, 0.0006190511866718879, 0.0006234678972697357, 0.0001083816486002118, 0.0005273987776444072, 0.0005150458205724819, -0.00013651748389950958, -0.00032403757247181285, 0.00013545037300253152, -0.00034563759128971363, -0.0003160719628651416, -0.0001740837673798413, 0.00023500849269831274, -0.0003390328174920063, 0.0002232670594919294, 0.00012044208208968265, -7.435320525467645e-05, -0.0001602764447517981, -0.00011937497595434718, 0.00047278095572314305, 8.706332601159645e-05, -0.00016603088339296165, 0.0004436583234480491, -0.00015643574502033472, 5.999680184073419e-05, -0.00026909556377397657, 0.0004267100445854453, 5.582559266518229e-05, -0.00028770553310165887, -0.00025478399754516313, 0.0001165190361748291, -0.00027437800236351204, 0.00040075852177743194, 0.00010151071709497682, -0.00018228085845509992, 0.00037913184685086894, 0.00018296665656811453, -0.00024456052899280735, 0.00014878031804548976, 0.000376292233928191, 0.00011276909831970895, -0.00017214639426616393, 9.454891718389404e-05, -0.00025993985707958075, -9.392985113568965e-05, 0.0001263794751270528, 0.0001712252190679978, -0.00012478899163993377, 8.155980645777758e-05, 0.00013766777766163654, 4.045172717494201e-05, 4.0449312598016217e-05, 4.044895059749e-05, 4.0439811714567005e-05, 4.0446908637103416e-05, 4.0450097782935375e-05, 4.0450642184452324e-05, 0.00036234264255878237, 4.044891640452058e-05, -0.00020797173933842535, 8.287579357930526e-05, -0.00022668006868867141, -0.00011098167686588081, 0.00032790899681187113, 3.973169465136818e-05, -0.00021820423437994495, 0.00011726520877088216, -6.549385930707915e-05, -7.678734436092264e-05, -0.00023222556335305119, -0.00011745385807923768, 0.00015686923018296353, 8.632931791854749e-05, -0.00018542204812257187, -0.00010785871092100767, -0.0002024924095792905, 0.00014528082328436998, -0.00020364480799886124, -0.00010226244305372597, -7.669327943794249e-05, -0.00018550942061886327, -0.00018840118859078807, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_harmonics_alpha[3] * s_harmonics_beta[15]), ])


    coefficients_array = np.array([-0.2461657652955841, -0.20634785720158696, -0.16361021837968762, -0.143721769369717, -0.13303735968701366, -0.10028684211206453, -0.08778744276970231, 0.03901708721045841, -0.07651147223699588, -0.06734173875083259, -0.06406422132631295, 0.02814984098305894, 0.02531928280866543, -0.06162860910198802, -0.049710442636846534, -0.05149893497496437, -0.04419554818384881, -0.040209272106110035, -0.04082150216654813, -0.03814670647619479, -0.033518043147628004, -0.010133367492426267, -0.026952785068153063, -0.023496231184522157, -0.018793058710272585, -0.005151640038417729, -0.018643122644858404, 0.004443349421363304, -0.015008328344865167, -0.013224848841691755, 0.0030354935567405016, 0.0026283385720627475, -0.00963006108913092, -0.009022187529016257, -0.009481477373559071, -0.002065783040118204, -0.00809368124355814, -0.0017835096503615979, 0.012143059955381594, 0.011146699379332428, 0.01206372740317496, 0.010842244430639828, 0.012866637801068503, 0.010597596048117197, 0.009571421151443717, 0.009401373524875623, -0.00137471857879033, -0.006006861872807775, 0.008471834006282198, 0.007435216147603179, 0.00787579518043922, 0.0012303641422103339, 0.0067883813365535416, -0.0011269284581167179, -0.0011055396117797146, 0.006250832941742378, -0.0010071857356554745, -0.0009193339730158072, 0.0008887122363167141, 0.0008017711902118124, 0.004072403464814912, -0.0033780385437877057, 0.003902145258252366, 0.0006974621607053942, 0.0006967183892398319, 0.0036924291185458486, 0.0006418658966300968, -0.0005261293880844381, 0.0004930088181556885, 0.0004835453546584527, 0.0004720080654907967, 0.0004787865562952905, -0.0021076340281056833, 0.0025074718743080854, -0.0004464877788818209, -0.00041849924878619224, -0.00039217563551820965, 0.00039789498655581337, 0.0003630989544655669, 0.00034440828512773575, -0.0003329289398779137, 0.00031421582854736945, 0.0015436808258868907, -0.000277447799147105, -0.00024291974765751933, -0.00024834306945495263, -0.00023737629162408247, 0.00024157980462136228, -0.00021491298328916606, 0.0001920615860767549, 0.0001901212084310883, 0.0001826922138807788, 0.0001788088337318689, 0.0001755083050347877, -0.0001535208585531923, 0.00014316830041246825, -0.0001273405636235299, -0.0005366463446072622, -0.00010830619364153303, 9.540402876804045e-05, 9.01301893100553e-05, 7.305384503302056e-05, -6.581997711916392e-05, -6.527951426850478e-05, 6.552070367563101e-05, -5.1366467996694596e-05, -4.974236419912924e-05, 4.4961245046826396e-05, 4.336104807130046e-05, 3.968037205857587e-05, 0.00016206421145103437, -3.1067127121697506e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), 1, (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 8), (s_beta_s ** 10), (s_alpha_s ** 6), (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[7]), (c_harmonics_alpha[12] * c_harmonics_beta[1]), (c_harmonics_alpha[12] * c_harmonics_beta[11]), (c_harmonics_alpha[12] * c_harmonics_beta[3]), (c_harmonics_alpha[12] * c_harmonics_beta[13]), (c_harmonics_alpha[12] * c_harmonics_beta[5]), (c_harmonics_alpha[12] * c_harmonics_beta[9]), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[15]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 2) * (c_beta_s ** 13), (c_alpha_s ** 1), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 2) * (c_beta_s ** 5), (s_alpha_s ** 2) * (c_beta_s ** 5), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 14) * (s_beta_s ** 6), ])


    coefficients_array = np.array([-0.029517508250443466, 0.024097650637475425, -0.030211866191201572, 0.018865300180945944, -0.016030998261359133, 0.014786892323113374, 0.023403292707404544, 0.01361714696678154, -0.014536676735903626, -0.028136415492317164, 0.026957321368861076, -0.010490285818721922, -0.0036253042434353996, -0.018785063327672914, 0.022137092415551427, 0.0175410184108338, -0.02118382385561028, -0.007976924062965718, 0.016095491552683073, -0.012409110951441414, 0.01843092177785342, -0.017928211065362906, 0.01590381929282178, 0.009040041249882056, -0.009794879772212405, 0.006901582864619659, 0.009729548530515001, 0.012622644199902335, -0.014057502156236749, -0.00645533421386307, 0.014818139902348313, 0.012141534613893038, 0.00509420708163285, 0.006114215550600598, -0.013037921748811973, -0.0059941780976556615, -0.011919006761587518, -0.011483360563249933, -0.010443987934318727, 0.009014618828547363, 0.011053450966000812, 0.010380673520648472, -0.009662602482818406, -0.00952320387726865, 0.00846149627898463, 0.007201539396184476, -0.010550357481220478, 0.002725047158985764, -0.009673803716300396, 0.010183529342855869, 0.010437557600690702, 0.008584866772336566, 0.008538467499681528, 0.010284505150751988, -0.008336821598243878, -0.007827616584576105, -0.010917450429870414, 0.004516780813488316, -0.009788225627161883, -0.006810743216864536, -0.010805500754831015, -0.0039872539226555506, -0.005721061340634132, -0.009266614765342228, -0.00729025458282838, -0.00790051097640537, 0.009259519087426083, 0.008015658883970298, 0.008068395263233077, 0.004248386594283723, 0.008918805059752124, 0.00734929269405128, 0.0018498234989050115, -0.005938067787281004, 0.007049981235414019, 0.009248525742706879, -0.01058009633340001, 0.006724865077474151, 0.0051052388564648546, -0.011331702633767178, -0.009659069387525303, -0.0016495791458417649, -0.007770911466566345, -0.00850883371589141, -0.010769644199244113, 0.008297036303992793, 0.005184874461972161, -0.011344889894319069, 0.006563214180228991, -0.008463382386136413, -0.0074687059776246695, 0.0014440527060152765, 0.008037203371844607, -0.0060636909242711, 0.004026538160022389, -0.0013453042518459216, 0.006755361634511822, -0.007615036271237249, 0.006360199031209472, -0.00130834662315323, 0.0038221861687951853, 0.0027698086277770746, -0.0044884749165629845, -0.0053443572570399216, 0.006386936108518838, -0.008815292491923706, -0.004805470385995168, -0.009431844335312026, -0.006250984547991905, 0.004641252541560395, 0.004135272473633138, 0.0044516384272703, 0.007074318422034658, -0.005651306502556961, -0.004369211028793613, 0.003529025764265136, 0.00397070787182728, -0.0031014933736898597, 0.006396395322439373, -0.0048902711340115266, 0.006176473739065518, 0.006578149430137931, -0.005793789669314311, 0.0008989779084217687, 0.003785614877615428, -0.00367245087161087, -0.004775306147671736, -0.0021073323196207686, 0.0007850793131657269, 0.003666875964347847, 0.003926622370768425, -0.004450320813128782, -0.0037948684631359604, -0.0028325118770793196, 0.0036093522845682463, -0.005835744590091134, 0.0026795673019998478, -0.0027145137937434594, -0.004396051843500514, 0.003131718723527001, -0.0045681182797442255, -0.004997100302965489, -0.0034135522873589216, -0.005138213367923645, -0.0019672631843054866, -0.004519581345289255, -0.004413315630549154, 0.0027016353354728773, -0.00119358560035206, -0.0035897408932017453, 0.003470888187503829, 0.0031543910424631223, -0.003913876049877272, 0.002892433161144122, -0.0035019951806300386, -0.0036498253673894507, -0.002432088836956961, 0.00299305588703138, -0.0005074353077370171, -0.0030237342791701277, -0.0005021399494320969, 0.0021879025324540676, 0.0026249023682359475, 0.001856310658424441, 0.003041797965642905, -0.002900699518372074, -0.0034395729957848705, 0.002516655099005613, 0.00402779638747764, 0.0006943579350692196, 0.002497644351115418, 0.0029726221203295743, 0.002637868097847274, -0.002785105137435979, -0.002638330261107205, -0.00036222423066576163, 0.00035190231316998156, -0.00034840427495977735, -0.0003459709979967072, 0.0027425989418850484, -0.0028992629600917983, 0.00033292089760017626, -0.00032399876375419854, -0.0021911366408470493, -0.0024681214976420966, 0.0018687076340061452, 0.00031033574768154316, 0.0010718018015312958, -0.0018411771334196157, 0.00029616158268293394, -0.0023751246071459764, 0.0024147358446556656, -0.00028176511360648333, 0.0002786673701058341, 0.0002769497125330231, 0.00027697967868221254, 0.0016994120416881045, 0.0017820400811218793, -0.0013228199481803002, -0.002254274998040507, 0.0014076535469276985, 0.0002512543552944554, 0.0002488548076643005, -0.0014535566472401774, -0.0015208472694943017, -0.0002445418316223975, 0.0012629638237796658, -0.0018433996314045666, -0.0002326132777707383, -0.00022453198148634013, -0.0014619956211882343, 0.0013050275735048407, 0.00020405807834187643, 0.0015617676465987127, 0.0010265737728472409, 0.00018702486966451306, 0.0015194294143084765, -0.0012608296038017083, -0.0008195095383922323, 0.0011860011732181012, 0.0008551950777588845, 0.000761261750987164, 0.0013663902103500595, 0.0003925654014420696, 0.0007912528290432984, -0.0005337321023131842, 0.001253689656736502, -0.0005308370157201789, 0.0005012209906079874, 0.0007748631459751224, -0.00013391806472100838, -0.0004901041776650339, 0.0009551592936295181, 0.0006234018266751054, 0.0008929865772883917, 0.00037909154228876036, 0.0003814914659055064, 0.0008518892901444526, 0.0003554090066286322, -0.00010453327852415263, 0.00010426115807303107, -0.00010313560844442106, -0.0002415085340067894, 0.0005508854257103659, 0.0008824958315810509, -0.00010077883234512584, -0.00023977424061848374, 9.90249598420165e-05, 9.460379299958524e-05, 0.0008535776507155248, -0.000679355357314384, -0.0003995885117588658, -0.00039669342546910503, 7.641162522461073e-05, -7.581879200892386e-05, -7.393504243895979e-05, 0.0005128332247079598, 7.164489672726421e-05, -6.990166219854221e-05, 0.0002850575416069205, 0.00028745746721162705, 6.895256279867473e-05, 0.0006208290004165045, -0.00018036727367366946, -0.0003321298622628482, -0.0001786329807071397, -0.0003300084842919603, 0.0001754626867581315, 0.00017279857052949818, 0.0001378352178110441, 0.0001357414001809269, 0.00023841011294512072, 0.0002400708958588252, -0.0002899119469480422, -0.00028856426952138535, -0.00014945112901291959, -0.00014840786461131934, -3.8327507046750426e-05, 0.0002093070196675305, 0.00021022866313324913, -0.00026036373691844077, -0.00025969107884033063, 0.0001889290190729568, -0.00013008293987052457, 0.00018920567797846302, -0.0002382164231065468, -0.00012973070348466754, 0.0001329888548788576, -0.00023812010392481464, 0.000130324741434778, -0.00017336763241485956, 0.00010465049182229579, 0.00010255667288043023, -2.593218426327274e-05, -2.5921530700107914e-05, -2.590773212906884e-05, -2.5925351552356612e-05, -2.5904466230982875e-05, -2.5927169012679395e-05, -2.5920002430632568e-05, 0.00017363119905781436, -0.00022082874945285718, -2.590415996968301e-05, 0.00017335702525903828, -0.0002212237945618158, -0.00011653261220309693, -0.00011678363255549936, 0.00016159759300479317, 0.00016085376297096484, -0.00010638445023045322, 0.0001094666718482989, 0.00011137309336755009, -0.00010715095811310996, 8.632295510215689e-05, 8.769948229204311e-05, 0.00014482534806080775, -9.84246328993848e-05, -9.963080265206388e-05, 9.648434917961447e-05, 9.763308227356641e-05, 7.622574747758225e-05, 7.688498362309986e-05, 1.3578268904738603e-05, 6.168947826086556e-05, 8.739160707956815e-05, 8.78792398742313e-05, 6.915115996952855e-05, 6.918437290943534e-05, 4.401222983184504e-05, 4.3437507188527746e-05, 7.434017052641645e-06, 8.055792074138397e-05, 6.383078141438886e-05, 8.048104005719185e-05, 1.0344724666635294e-05, 6.33292407663894e-05, 9.885495347665802e-06, 9.84797762651035e-06, -3.0486079403408764e-05, 9.744969401319238e-06, -3.0037898630365433e-05, 9.729474108379966e-06, 9.583310946569972e-06, 9.544895537798654e-06, 7.517471554575228e-05, 9.541310204303742e-06, 5.963665970582318e-05, 7.461654174240893e-05, 9.061596238254524e-06, 9.058188050747515e-06, 8.998282355535993e-06, 9.010071227915452e-06, 8.94480667727951e-06, 8.918481979856847e-06, 5.867912292428111e-05, 8.776182680189266e-06, 8.73837867192955e-06, 8.734835870182782e-06, 2.0133506968246373e-05, 1.985539679290969e-05, 8.311316741294186e-06, -8.280473125195531e-06, -8.225111254529721e-06, -8.285151024852027e-06, -7.95667409075634e-06, 7.365555046790005e-06, -7.261119940906893e-06, 4.400699344344499e-05, ])


    return np.dot(coefficients_array, expressions_array)

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 12), ])


    coefficients_array = np.array([0.4551241179932208, 0.01579011534627793, 0.016287410059637682, 0.013454745684660053, 0.007788261360135128, 0.011981520010746543, 0.012793182953476078, 0.012681485359721424, -0.014021329461177272, -0.010896891349844898, 0.006274738203976657, 0.010150008162301351, 0.006016066138869259, -0.010698872367376407, 0.010148096730734921, -0.01054564593934089, -0.008791261415107547, 0.00880366020087466, 0.003569188020698695, -0.007426612631328657, 0.008630078480036583, -0.00953033597402573, -0.0084419830134381, 0.006237233899384173, -0.004893223998746174, 0.008534865313131294, -0.00804489687182277, -0.0027382359072619378, -0.008034548322248685, -0.005982328007318099, 0.006818617130453329, -0.007727712667406003, 0.002233596933288612, -0.0021503233466866546, -0.008359679669788397, 0.006867128990399596, 0.0031086299900802625, 0.004954309329789544, -0.005770627915783354, -0.00688378145157283, -0.0017662239065505605, -0.004772637131900792, -0.005624049738958326, 0.005684986669544764, -0.005451520283600718, 0.0033066489749108735, 0.005729899691577551, -0.007619789930697618, -0.005661649786945244, 0.004258317633638829, -0.0046317854028225585, 0.005638824753700124, -0.001369047346458311, -0.005387993800084424, -0.004075444318379679, -0.004712038220504299, -0.0034908975291591702, 0.004973159346220913, -0.005289516955848411, 0.003351441532880225, -0.002787594062401179, 0.005013997016749652, -0.005244312176792476, -0.004782275805621887, 0.0014634117994064247, -0.005094896714665182, -0.0015998673641148893, 0.003733168641404805, -0.006497961583204901, -0.003478206773568224, -0.004950583777048594, -0.0030546379278796987, -0.0046746369461585545, -0.0016517237847676663, 0.0032828791916687176, 0.004417712276837199, 0.004804965503681157, -0.004921760050864842, -0.004028361258335111, -0.004083332237041343, -0.004752512316909258, -0.005303698662504105, -0.004368860320627711, 0.0024755769576986133, 0.004048225159267495, 0.0028185800603949896, -0.00554119678271699, -0.0029889801965197528, -0.00523169274306366, 0.0013435495004802392, 0.0030443019059865958, 0.004247280397534014, 0.004812272033607117, -0.004070901795945623, 0.003552358107795558, 0.005100594207154182, 0.0012055620800300287, -0.0030816433436348678, -0.0028895187464500717, 0.0031814375279675426, -0.005233919860706352, 0.005084829431121306, 0.002211789221272805, 0.0036809760768283088, -0.004365758456527144, 0.0048919108203191635, 0.0005482127023560573, 0.0018264829903446337, -0.002806667319912054, -0.002502847537507559, -0.002946513954759831, -0.002704831002387396, -0.004372765742175504, -0.0004743312979404486, -0.002821566060096694, 0.004267795989567586, 0.0016632560461235391, -0.002368946024903325, -0.003891056562671055, -0.0004561193718001148, -0.0004492888887823513, 0.0028311707882346894, -0.00044392313730116505, -0.0016130179749857827, -0.0021243966832505687, 0.00043924326915457116, 0.0017687454664841412, 0.0014275990422917498, 0.0022943874433154327, -0.002792746115760671, -0.0004176764976139521, 0.0029229230422801234, -0.00366024250016512, 0.0019287504951343332, 0.0015008695243094391, 0.0033072170552876953, 0.0027836148067759245, -0.0011899754900431977, -0.000364304315937275, 0.0028074758708731993, 0.0027639347388138673, 0.002538111630078168, -0.000769195169046989, -0.0023437421630572164, -0.0003479799287002793, 0.0013622770797240265, 0.00034115016244212727, -0.001936332690293182, -0.0014264577562411644, 0.0027475048443110495, 0.00032992290695167334, -0.003095976836419355, -0.0016807127587905432, 0.0012232368813778047, -0.0007976694550429701, 0.0019050755808201266, 0.001635329610011849, -0.00028460221094104155, 0.0013745348875216687, 0.0017037273368072892, -0.0002782627965745087, 0.0013138368427701697, 0.0012213575250207265, 0.001191116779782722, 0.0021016186077992467, 0.0017075181882335176, 0.001396249734311006, 0.0014825873558080977, 0.0021356458162244255, -0.0014579026833024893, 0.001633858468228229, 0.00024296307687305318, 0.00023991818858376174, -0.0008682397183894858, 0.0012088895187047013, 0.0011546046194999538, 0.0012798608019209512, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), ])


    coefficients_array = np.array([-0.2345124243354104, 0.01256948182911438, -0.007651053004766334, 0.005252456734535845, -0.005193217774865048, -0.00493411256737608, 0.004416526567630939, 0.0035019881927791045, -0.003266393070087991, 0.0025372857681461272, -0.0024732658632489585, 0.0021298592034711835, 0.0020150099421853917, -0.0019235231172351809, -0.0018066228911202068, -0.0018048131039785792, 0.0017558467286935137, -0.0017280394581862526, 0.0017145256302426774, -0.0014807472644822618, 0.0012425022664987343, 0.0011309468947265256, 0.0010811964547867742, -0.0010134793840362478, -0.0010186539466078403, -0.0009712881997065354, 0.0008549157219215216, -0.0007965038278301854, 0.000698445711578583, 0.0006822663795863368, -0.0006260578332041819, -0.0006142843293658124, 0.000603057789198027, -0.0005242929147020284, 0.0005140947807402448, 0.0004992447289316689, -0.0004817657714742274, 0.00046526240544464474, -0.0004400152471791612, -0.0004130588559099897, 0.0003986327729871243, -0.0003827259187515276, -0.0003623276556083043, -0.0003482251558989718, 0.0002750930839522204, 0.0002547923199512526, -0.0002591407529390653, 0.00021255435157821272, -0.0002126469438685581, 0.00019978375249832326, 0.00015229667437987338, -0.00013855964702067674, -0.0001344710624500912, 0.00013187514089033845, 0.00010587853964565361, 1.2316318113424698e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 14), ])


    coefficients_array = np.array([0.5448758820067039, -0.015790115346101384, -0.016287410059653964, -0.013454745684643374, -0.007788261360119546, -0.01198152001098012, -0.012793182953394336, -0.012681485359735161, 0.014021329461336052, 0.01089689134980555, -0.006274738203963431, -0.01015000816224103, -0.006016066138790679, 0.010698872367379124, -0.010148096730785042, 0.01054564593931828, 0.008791261415002565, -0.008803660200943279, -0.0035691880205593633, 0.007426612631274163, -0.008630078480007422, 0.009530335974039872, 0.008441983013440705, -0.006237233899491741, 0.004893223998836633, -0.008534865312987873, 0.00804489687177587, 0.002738235907253962, 0.008034548322302085, 0.005982328007431367, -0.006818617130433259, 0.007727712667462086, -0.0022335969333090997, 0.0021503233466830356, 0.008359679669742055, -0.006867128990315121, -0.0031086299900041914, -0.004954309329819158, 0.005770627915868335, 0.006883781451467093, 0.0017662239065668458, 0.004772637131759976, 0.0056240497389324, -0.005684986669735511, 0.005451520283677873, -0.0033066489749015203, -0.005729899691598769, 0.007619789930668138, 0.005661649786860449, -0.004258317633616407, 0.004631785402794452, -0.005638824753707019, 0.0013690473464789093, 0.0053879938001039985, 0.004075444318341811, 0.004712038220572483, 0.0034908975292151957, -0.004973159346173388, 0.005289516955964625, -0.0033514415329082, 0.0027875940624837656, -0.005013997016666074, 0.005244312176774904, 0.00478227580567085, -0.0014634117993472138, 0.005094896714656885, 0.0015998673639927526, -0.0037331686415823743, 0.006497961583116809, 0.003478206773609629, 0.004950583777106263, 0.003054637927806573, 0.004674636946145297, 0.0016517237847993693, -0.003282879191698007, -0.004417712276792196, -0.0048049655036931736, 0.004921760050802836, 0.004028361258240953, 0.004083332237047903, 0.004752512316983333, 0.005303698662508431, 0.004368860320719303, -0.0024755769577948124, -0.0040482251592260255, -0.0028185800603970483, 0.005541196782701405, 0.002988980196591803, 0.00523169274308375, -0.0013435495005449524, -0.003044301905888682, -0.0042472803975394414, -0.004812272033562205, 0.004070901795999358, -0.00355235810774681, -0.005100594207123167, -0.0012055620801266344, 0.003081643343684369, 0.002889518746450765, -0.0031814375278887007, 0.005233919860681924, -0.005084829431037933, -0.002211789221351931, -0.0036809760767679903, 0.004365758456511879, -0.004891910820370831, -0.0005482127023544644, -0.0018264829902077421, 0.002806667319867231, 0.0025028475375290025, 0.002946513954759482, 0.002704831002279024, 0.004372765742281843, 0.0004743312979404237, 0.0028215660600972308, -0.004267795989568379, -0.0016632560461149685, 0.0023689460250405944, 0.0038910565626199575, 0.0004561193718002648, 0.000449288888782418, -0.0028311707882559206, 0.0004439231373007966, 0.0016130179749676951, 0.0021243966832581846, -0.000439243269153342, -0.001768745466541005, -0.0014275990422549286, -0.002294387443400725, 0.0027927461158088426, 0.00041767649761386083, -0.0029229230423693307, 0.0036602425001411036, -0.0019287504950993694, -0.0015008695242845983, -0.0033072170553954065, -0.002783614806583904, 0.0011899754899866665, 0.0003643043159372635, -0.0028074758709432327, -0.0027639347388933627, -0.002538111630075845, 0.0007691951690699792, 0.0023437421631598274, 0.0003479799287116642, -0.0013622770797458263, -0.0003411501624421212, 0.0019363326902796206, 0.001426457756236171, -0.002747504844340129, -0.0003299229069516486, 0.0030959768363751127, 0.0016807127586802642, -0.0012232368814491569, 0.0007976694550806436, -0.0019050755808911865, -0.0016353296100644948, 0.0002846022109394405, -0.0013745348876139268, -0.0017037273368274218, 0.00027826279657420654, -0.001313836842758619, -0.0012213575249528275, -0.0011911167797850186, -0.0021016186078029885, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (s_beta_s ** 14), 1, (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (s_alpha_s ** 2), (s_alpha_s ** 8), (s_alpha_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 14), (s_alpha_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[11]), (c_harmonics_alpha[9] * c_harmonics_beta[13]), (c_harmonics_alpha[9] * c_harmonics_beta[7]), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[3]), (c_harmonics_alpha[9] * c_harmonics_beta[1]), (c_harmonics_alpha[9] * c_harmonics_beta[5]), (c_harmonics_alpha[9] * c_harmonics_beta[9]), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), ])


    coefficients_array = np.array([-0.4411997493471783, -0.22750559978786944, -0.21369414955447272, 0.1228811599661923, -0.15699548611679856, -0.14318403589190104, -0.1212199414558026, -0.10844946697332933, -0.09959456901109763, -0.038734650524196015, -0.08786507037295942, 0.034210954612027, -0.08511246549655091, 0.05772505972811209, 0.055919210619701044, -0.07428757723891875, -0.0747311418223187, -0.06467449829087307, -0.06691855681218138, 0.05382917674917937, 0.05202332771397506, -0.04700868456403073, -0.045781865295260654, -0.05751538572319073, 0.0517842614573293, 0.05017236016410828, 0.04984735610949014, 0.04842940239410079, -0.013811450266336267, -0.013311163002429792, 0.047978428130758435, 0.046726477090515056, 0.046218211808521065, 0.04510431834557809, 0.04358562657665029, 0.04458474096017516, -0.008942922797191518, -0.027392714054255304, -0.02380966434463416, -0.026165894851003246, -0.021542894338313478, -0.021640686855802897, -0.018830544571802173, 0.00461729734465018, -0.017574374094583855, -0.016368264288390926, 0.003901828637743409, -0.0035887617778991056, -0.0033432335494582824, -0.0032959397140648115, 0.0032221335357488523, -0.011454295813761561, -0.0028569477514421124, 0.002844162771924067, 0.011199559859874737, -0.011918879630575724, 0.01336136577001723, 0.0026020420176007474, 0.014335463216052146, -0.009187525752225483, -0.010733479261772467, 0.0109833434507706, -0.01187721387291507, 0.014722468451124423, 0.012766443296376788, -0.00233861983433353, -0.0022803322317281913, 0.013538858060037467, 0.0148058738044592, 0.006746787373240379, 0.010835502862200868, 0.007274252925588932, 0.011938760960028584, 0.008544536337843895, 0.013813688631273415, 0.01472651091398533, 0.012441402802266051, 0.013833751019352079, -0.009067071499479103, 0.0101215007749099, 0.01262692069762483, 0.00819551011600358, 0.011036806379150789, 0.01371937057163846, -0.00834447437660497, 0.012637975444896305, 0.0017323257471744066, 0.0016534764474832378, 0.011439010977650795, 0.011570930549876417, -0.0015187021493841925, -0.0015132009013652005, -0.00718045053015207, 0.0015008271660741977, -0.00142752739801058, 0.011555055689446148, -0.0013587707071452055, 0.004091763847145136, 0.004486419632876134, -0.001303853400276313, 0.0012458221132322636, 0.0012351428546596536, -0.001217792774799254, 0.0012023512407322529, 0.0012142583672620753, -0.0052278802924102235, -0.0069212119725500865, -0.00116761460033908, -0.005934545129480767, 0.0010215711820983698, -0.000965440664114345, -0.004792564943452693, 0.0008541252114272332, 0.0008341945417666268, -0.0007861682541412615, -0.004230998324935475, -0.004259600444612019, 0.004560334523240859, -0.003058572652923269, -0.0006313758399909269, 0.0006325211969341675, 0.0037018723940197684, -0.0006039430415804977, -0.004082653103228078, -0.0005754129548159707, 0.0005710355892379726, -0.003111302896713255, -0.0005003672242195643, 0.00048073919016985035, -0.0004373056114949884, 0.002399122022947524, -0.00043160788755450003, 0.00042213020979263595, 0.0027264923299119754, 0.00016580106967111104, -0.0003956355719786711, -0.001723400067505933, -0.0023110455721983246, 0.0017971911594428828, -0.0015695724266535354, 0.00023304644025750522, 0.00022646130068452062, -0.00022644060551409745, 0.0018431845009793915, 0.0002054130411763525, -0.00016688598302385155, 0.0002985545071255248, -0.00021520888151117004, -0.00016017104136155328, 0.00015242987521642403, 0.0005368311755587506, 0.0011295199858359327, -0.0011358777963500501, 0.0005302442269289304, -0.00022841020637057944, 0.0001870020817626389, -0.0002820159935639513, -0.0002768138697210709, -0.00030086756711363244, -0.00029520846664284213, 0.0004039637579595344, 0.0003973768031589892, 0.0004154856805318662, 0.00034844508745902105, 0.00033811184875380984, 0.0003303612777861089, -0.00021104039844713305, 8.613743860049293e-05, -0.00020583828699014632, -0.00022548657180306055, -8.480615380057857e-05, -0.00021982745399234355, -8.207989007818193e-05, 0.0001496357091149822, 8.074860231396486e-05, -0.0001086280315269593, 0.00014891879773581016, -0.00010658090562218399, 5.841865685129473e-05, 0.00029980244056385276, 0.000290888250148386, -0.00010410656921174048, -3.937784542724544e-05, -9.928081620981012e-05, -0.00017657996023263527, -0.00016932312237990247, -0.00032072667316913547, -0.00018863726163303833, 0.00027344706825398787, -0.00018129575265802232, 0.0002670037124942527, 6.791958144009248e-05, 0.0002470709537914549, -0.00011423146220617623, 0.0002467328966932042, -0.00011417870543536728, 6.163641321789434e-05, 6.2530767511304e-05, 0.00011288150952748296, -6.224348843485496e-05, 9.368180075638833e-05, -0.00015202276347071905, 0.00011216460252798537, 9.332027466825355e-05, -8.075506581478301e-05, 2.7731213311782384e-05, 2.773109738484721e-05, 2.773024616178855e-05, -5.9517224781732506e-05, 2.7707113126275804e-05, 2.7674323750710993e-05, 2.7723689548997927e-05, 2.773145676729672e-05, -7.870793335354303e-05, -0.00016284886316499371, -0.00014271115365673725, 2.7731084945879706e-05, 5.692673490313304e-05, -0.0001538250084242972, 0.0002237698731897971, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_harmonics_alpha[7] * s_harmonics_beta[15]), ])


    coefficients_array = np.array([-0.24204932451033676, -0.1981757857000688, -0.1640662353108674, -0.1405204345472757, -0.1319930469791797, -0.09783109591207381, -0.0876413901688899, 0.034864533763158054, -0.07462010065052399, -0.06661067004718892, -0.06426669529166931, 0.02735207388144001, 0.025947136927464247, -0.060158201831983, -0.050066715435539824, -0.05034386273702951, -0.0406366559618579, -0.04327942785608192, -0.04038723467499937, -0.03812504226225582, -0.0339773776804909, -0.026751763787873032, -0.023741094147657193, -0.00659724064298042, -0.0055018433162594025, -0.018916373322482912, -0.01861543925719757, -0.015364565429005873, 0.003614013595049488, -0.013323619767747453, -0.010032983414160035, -0.009263506948008315, -0.009672101948918058, -0.00841287173580152, -0.0017836723749511208, 0.0016530810922650943, 0.01173005719737812, 0.01162658844930231, 0.010707448487190761, -0.006426651935962479, 0.012460297987472254, 0.010425154301658919, 0.01013310619968702, 0.009134557861463029, 0.008942161570977075, -0.0013297538721343267, 0.008053961859359542, 0.006988614449376196, 0.00740056083336591, -0.001117120338726899, -0.0011251158148732987, -0.001108775584910681, -0.0010785658761170128, 0.006359788208474566, 0.001008024255517692, 0.005793495521282358, 0.0009821331756198327, 0.0009032270976251886, 0.0008833719766044237, -0.0008697317628712117, 0.0008653497749900928, 0.0008715822644254854, 0.0008141800487808368, -0.003705952415400254, 0.0007377255676811073, 0.003648087828147458, 0.0006726960000730148, 0.0006624956268435219, 0.0034858728032017834, -0.0006148172990325343, 0.003264748534195873, -0.0005854522282610022, 0.0005482415819999086, -0.002499331248115473, -0.000533283147849222, -0.0005194833100483569, 0.0005221967698565124, -0.0005207333109463949, 0.000491171704670388, 0.00047288079484090757, -0.00046448883179163073, -0.00042461609283687187, 0.00038395543166379727, 0.0020775420811296247, -0.00036876601574819813, 0.00033760454245366876, 0.0003332075221563123, -0.0003101859738126609, 0.00025311141749382937, 0.0011289334859983906, 0.00019622899255282298, -0.0009190457407096286, -0.00019615144225377168, 0.00018576250680606154, 0.00017850552191175112, 0.0001801846163723508, -0.0001738036051963656, -0.00015940263722180885, 0.00014442207399951028, -0.00014448689443588168, -0.00012481856940785342, -0.0001096221828785395, 0.00010534113876240874, 0.00010375442835218579, 8.690578121795553e-05, -7.806404027858955e-05, -7.88187619110224e-05, 5.6662602722330786e-05, -4.944920125087041e-05, -0.00022653348146778175, 2.2210946266358567e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 4), (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), ])


    coefficients_array = np.array([0.02570791258465483, -0.026814431312924207, 0.02435519954568041, -0.027328765475587984, 0.019820823790037512, -0.028680590324880968, 0.022489040536642885, -0.01307286783909484, 0.01238309959120589, -0.026778920057395097, -0.02518763730264942, 0.011291522570627821, 0.020082757929447855, 0.01848175335201282, -0.010833301584514603, -0.022637062508682006, -0.012616215970469316, 0.01605299450354674, -0.018467761047864923, -0.006977465635369602, -0.010416263458731216, -0.006793455879700179, -0.014765211622605601, 0.009212723103030975, -0.009028193754195427, -0.015815596528278776, 0.012694611841149417, -0.014044251433752828, 0.005605483370074817, 0.00781834380707011, 0.010721915525403405, 0.011512114279743036, 0.012791461727291356, -0.009716121971363297, 0.008401427955590214, 0.012165657294567245, -0.008610668097255136, -0.009119568695544472, 0.004325390781214089, 0.008571191295504233, 0.0034380058424926326, -0.008459274308143442, -0.010076155675421503, 0.007051979696196932, 0.009068441578366813, 0.009508637841384164, -0.006814247711364877, 0.006079665276996349, -0.008863818512591545, 0.0022840568248668593, -0.0022867311467645026, -0.008886941858615742, 0.009920631067944228, -0.009068422472123772, 0.007881159811247197, 0.008716334746622484, 0.007373605238014851, -0.008680760685591739, 0.007917100639779606, -0.008025147065668084, -0.007748974274048336, 0.006546229700890598, -0.008200980657870487, -0.0018267642476624633, -0.005984110864415856, -0.009304637968375067, -0.006358970548143166, 0.00908099098364591, -0.005116432170051866, 0.0037678292874709766, -0.009199820925221125, 0.008574959929079914, -0.009859407825660974, -0.006329709858664085, -0.009392993503926726, -0.007681262749245839, 0.003931910042925812, 0.006965708722164145, -0.009880008628344254, 0.005092805563990826, -0.001429506986803776, 0.0013995917228665539, 0.004859880161947699, 0.006675918292558458, -0.00492439425196295, -0.0070872685731150015, 0.0024492109874678, -0.005838967423996625, 0.004652870242769668, -0.00593949153266314, -0.005881961365881218, 0.008691478223728621, 0.004078792459826463, -0.005622081195149092, 0.0011374281093792173, 0.0011402100511730324, 0.0018661590132832704, 0.001128642658904997, 0.0011278069874443358, -0.005895038747849332, -0.0036085142922586363, -0.003861444561918989, -0.0056449791520895845, -0.005150112885345392, 0.008556145349839363, -0.0034966472719001186, 0.007120272242105488, 0.00647652107501764, 0.005509452836597803, -0.0010258510823893644, 0.001009495137368828, -0.004698396202539463, 0.004874068332286081, -0.0010032929629405236, -0.0010006102640285454, 0.0010014465082041906, -0.002641659443017634, -0.006437126782084731, -0.002110655251880583, -0.002141128170455901, 0.004851939780311564, 0.00729050518156453, -0.0009516658455353576, -0.005855765182103051, -0.000928665011126465, 0.0009250015043082798, -0.006760323635342428, -0.0016871275068708078, -0.0067182021509621355, -0.006056224473854972, 0.004832434328198806, -0.0009013175015868653, 0.0054017735154745184, -0.003255604028717419, -0.0038908744139485576, 0.004549199308941022, -0.0008752363946021312, -0.0041094465566191415, -0.0038300006642314754, -0.0007945606324111866, -0.0037453137234233053, 0.003945736371155048, 0.000778498620303754, 0.003568711790811952, -0.0026565141568973332, -0.003656763623397388, 0.00646254192424784, -0.0039654131026364975, 0.0007335678889902657, 0.00608588646734322, -0.0007312985049025564, 0.002763180610834596, -0.0035095874860104834, 0.002031202294481869, -0.0024197512391262964, 0.004352237933567581, -0.0022993912040776086, -0.0006786455402075133, -0.0006300747747298252, -0.0006311908968690241, 0.005700188454999623, 0.0038086243927040945, -0.0035183372531244115, -0.002908418031624019, -0.0018055953618976125, 0.0005960818299235432, 0.0033013242635369544, -0.002578059230395618, -0.003502752046263975, 0.0005662266539381512, 0.0014266279343289419, 0.0036740877902183586, 0.003021090379255922, -0.0040541342532682545, 0.0004987608917278124, -0.001896656733250006, 0.004219411021999708, -0.0033617151701135113, 0.000462219733443236, -0.0026649402296060123, 0.003403358543518391, -0.0035847932612740638, 0.002683934661553589, 0.0015684765199027715, 0.00289884274731684, -0.0024780498120643736, 0.0015327745374420956, 0.0030386966283203966, 0.0024226431115800737, -0.003062793538128459, 0.0035262272503062244, -0.0003621710738364722, -0.002124068956431528, -0.0003583505040363868, -0.0019641995707724356, 0.0008888711559793389, 0.0018194796321247513, -0.00233260561501116, -0.0003351489874652441, -0.0009619301700902266, -0.0018556280419686694, 0.0020804977967708955, -0.0022333770288330604, -0.001220074335063382, -0.0015266885403201844, 0.0017724020946931044, -0.0002870873186852398, 0.0020712515776464295, 0.00027515317654716354, 0.0010479619231230368, 0.00172674982208534, 0.00024283773223896554, 0.0011673169266787997, 0.00022451141183477146, -0.00202099860934447, 0.0011596775845899737, -0.0014927305695369708, -0.001071179397190604, 0.0016056095582304088, 0.0016372039492568832, 0.0014427739662142482, -0.0009803730578238567, -0.0001733488091393216, 0.0008863026094564986, 0.001339819203927016, 0.0009497814273802327, -0.0006193510029444192, 0.0009518566697313049, 0.00040944662464353996, -0.0008578754504237426, 0.000860437277873672, -0.0008695685478378404, -0.0010423669485915186, 0.00013166767143855048, -0.0011408835283505832, 0.0009421671914440875, 0.0010340907187837626, 0.0007663960447435004, 0.00011291451235363766, -0.0009241133262271386, -0.0007394987661413517, 9.67026866989655e-05, 0.0003980014826995193, -0.0007182351409250827, 9.118695810893631e-05, -0.0006697859240745368, -0.0006648952959964834, -0.0005107978397275056, -0.0002839036930671265, -0.0002819837866112776, -0.0004125564773499081, 0.00020042867818379002, 0.0002020043725584986, 0.00038932656376804864, -0.00012868504237952653, -0.00012757218179804545, 0.0002804081840047891, -0.00021231176552764772, -0.0002103918578129506, 0.00015094116494202906, 0.0001525168608256301, -9.590037720637074e-05, -0.00017627392315936938, 0.0002109538488731578, -9.478751582881189e-05, -0.00017483777314670386, 0.00019435527744101206, 0.0002334771962807348, 9.270628174214727e-05, 9.094689482594759e-05, 7.274615597434165e-05, 7.138334056587916e-05, 0.00012642755905864516, 0.00012754295419229394, -0.00015954222275800167, -0.00015370411472342483, -0.00015275172008928585, -7.929416510658435e-05, -7.860906273084109e-05, 0.00011115043636582485, 0.00011180552858913301, -0.0001378986919898055, -0.0001373693116392064, 1.730053452124432e-05, 7.984213952264485e-05, 0.00010046270821041111, -6.887404386540989e-05, 0.00010071519638819335, -0.0001260486599696268, -6.861670370345278e-05, 7.058860230791646e-05, -0.0001258815552445553, 6.882921469624566e-05, 1.5112619477720516e-05, 5.5517961860933916e-05, 5.415514685111116e-05, 8.917921685760047e-05, 9.244306041014283e-05, -0.000116745196899569, 9.235064138271023e-05, -0.00011688828025392296, -6.157368001489329e-05, -6.16906732335556e-05, ])


    return np.dot(coefficients_array, expressions_array)

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 10), ])


    coefficients_array = np.array([0.4383153469728792, 0.018984110931580048, 0.013399128256064517, 0.020593053135405524, 0.014186836010409444, 0.009041024206112483, 0.014237409530028526, 0.008345002331880217, 0.012379213647945959, -0.01006093882114649, 0.00681599570306355, 0.0135200143216369, 0.013352568281931773, -0.004712045034638043, 0.004636549653677524, -0.00861188479162585, 0.008705131112032695, -0.006562585032515809, 0.009454720705673842, 0.009547031759631102, -0.0057557458351630494, 0.0072404848490094965, 0.009301226876310298, -0.005616756808296809, 0.005464096628147246, -0.006295974487980969, -0.002383736555068881, -0.007308861815780349, -0.0033381894396140085, -0.006293400068941199, 0.005057322614373913, 0.0018421244103330005, 0.002301330937005202, 0.006072924962246929, -0.0057550356128335855, 0.0064467737035650485, -0.004558913855215708, -0.0015863738312344687, -0.004607664515680859, 0.004690377769763844, 0.006168201436046174, -0.004966052765872922, -0.004964315569450754, -0.00373974258318761, -0.005389840967969703, -0.002654167920947558, 0.0023198542867143663, -0.0029489630061551764, -0.0033825263356317323, -0.004325812879021906, -0.005251489467175133, -0.0032189858433153765, -0.002755991676951151, -0.0026804419619398155, 0.0017042463555689293, -0.0021973887683664193, -0.004374379220772191, 0.003931973578150882, -0.0009604644180341951, -0.003076297978857912, 0.0035476188191979124, 0.0009244944081568963, 0.0031891434423601574, 0.0027202163668006993, -0.004637691598475215, -0.004192495587471257, -0.0034230169875807026, 0.004198020132357162, -0.0018891354084769893, -0.0029002273866649848, 0.0028479751839963876, 0.003942226075108183, -0.004627129186967497, -0.000788589600265562, -0.004105681690518815, 0.002905763766724696, 0.0029343075193640697, -0.0037395176511110986, -0.001193210222188019, -0.0034035127410339486, 0.0006981792949459503, 0.0030441103550028566, -0.0022962833432133628, 0.0035044797979009363, -0.003964751976640117, -0.004087638247655464, 0.0006314294644634211, 0.001019914613079868, 0.003334456379913144, 0.0029970254991223207, -0.0025581778227362914, 0.0029630102957212087, -0.001875952076506793, -0.002079425142751922, -0.0032489365545877065, 0.0020694956580018637, 0.0035626657702255418, 0.0018830877580485626, -0.003654950644462253, 0.00320662756274971, -0.002170769124185907, 0.002270827472419105, 0.0028161103725994146, 0.0025153556351892423, -0.0035006381094643668, -0.0020343383152843764, -0.003360693455517915, -0.0017403893301201434, -0.0027845317460609923, 0.0028022090636122396, -0.0004896609347108208, -0.003175949036767103, -0.00048363701514721484, 0.0013988030172197702, -0.0027969775356243005, 0.0036112459889837867, -0.0013960137569553567, -0.0022209894186324105, 0.003196534847526389, 0.0023211552430708322, -0.0024178658523147135, -0.0033752446925793106, -0.0032058754745279863, 0.0037084835413367925, -0.0006623099704626224, -0.002051718353553199, -0.0023697157869934805, -0.0015982694565115497, -0.003133966397677556, -0.0019152753805287035, 0.002606365647911177, 0.0023736987093425244, 0.0010095192250761222, 0.001016844722579284, 0.0018177542921250362, -0.002603743745688976, 0.0019383033477247194, 0.0015901197160382715, -0.0028841185266344003, -0.0011395458168216885, -0.003150765547251989, 0.0003867317047522465, 0.003457677211739773, -0.0018854433587380992, -0.0011889504897943759, -0.0027898936643909523, 0.0023546369834783077, -0.002779190272962118, -0.001185245513762441, 0.0013842828265909054, -0.002216962150503261, 0.0013838466086461272, -0.003006248728650228, -0.0014299329501796635, -0.0003553389704436142, -0.001143728804896472, -0.002067773518421304, -0.0008891420594627578, 0.002093191368009334, -0.0017418116724297866, 0.00032548690168093504, 0.0012726516236405557, 0.00180882882805813, -0.0028097760694263158, 0.0014335261678073347, -0.002505826788996467, -0.002480250307286157, 0.0015082282066818046, -0.0024788045783655918, 0.0020878238453874366, 0.0002846136742182116, 0.0017309511196134189, -0.0016921698889852848, 0.001685269450610983, 0.0016764506816886902, -0.001071077202724898, -0.0023838644564108855, -0.0021583981666273224, -0.0009467215139663006, 0.0017383106841432668, 0.0013629223285536167, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), ])


    coefficients_array = np.array([-0.2340494221473139, 0.00886510288020755, -0.006414052509546367, -0.00606804980031541, 0.005841843483143711, 0.004172223028064242, -0.0036388568970104444, -0.0029230112420959424, 0.0028350430274502974, 0.0027277904662436174, -0.0022903800951234064, 0.0014249852782688324, -0.001416294788477346, 0.001412438770711789, -0.0012299019914317258, -0.0011887013117654092, 0.0011866165705988095, -0.0011215969148292992, -0.001108662453871988, 0.0010539911646412577, -0.0009505995979333425, 0.0009138942333064622, -0.0007941532022071298, 0.0007773080581713163, 0.0007613539981029129, 0.0006949991515462477, 0.0006831070574252812, 0.0006548392715061962, -0.000638770368590961, 0.00060403003245903, 0.0005667616914714116, -0.0005452808892015761, 0.00048712036490700973, -0.0004674984809538418, -0.00046163394320972894, -0.0004621510126964035, -0.00044524470792930174, 0.00042192546930478104, 0.0004022829245298196, -0.00034890378560290864, -0.0003367707321458067, 0.000337169046614432, -0.00030449322038155987, -0.00027008825814929917, -0.0002625885552443415, 0.00022529901426313238, 0.00020600203725081896, 0.00020595912881839275, 0.0001995041195592141, 0.00020150847153881321, 0.00020104350788096567, 0.00018543216258512394, -0.00018273319763774647, 0.0001695013854867084, -0.0001619050845082554, 0.0001591750671304192, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 4), (s_alpha_s ** 2), (s_alpha_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), ])


    coefficients_array = np.array([0.5616846530271884, -0.018984110931540538, -0.013399128256278628, -0.020593053135232103, -0.014186836010298992, -0.009041024206093951, -0.014237409529826958, -0.008345002331852135, -0.01237921364796171, 0.010060938821172788, -0.006815995702965675, -0.013520014321715346, -0.013352568282027745, 0.004712045034704689, -0.004636549653614658, 0.008611884791836935, -0.008705131112180364, 0.006562585032478867, -0.009454720705800043, -0.009547031759762402, 0.005755745835196954, -0.0072404848491909165, -0.009301226876294016, 0.005616756808123396, -0.005464096628106366, 0.006295974487875192, 0.002383736555003909, 0.00730886181580506, 0.0033381894396596855, 0.006293400068964959, -0.005057322614345615, -0.0018421244103276778, -0.0023013309371147012, -0.006072924962269888, 0.005755035612846821, -0.006446773703522114, 0.004558913855221137, 0.0015863738312282606, 0.004607664515712883, -0.004690377769690052, -0.006168201436088364, 0.004966052765897077, 0.004964315569482325, 0.0037397425832998367, 0.005389840967818294, 0.0026541679209183713, -0.002319854286889881, 0.0029489630061383877, 0.00338252633561467, 0.004325812879117812, 0.005251489467157939, 0.0032189858431597063, 0.002755991677046219, 0.0026804419617982374, -0.0017042463556816495, 0.0021973887683564486, 0.004374379220834795, -0.003931973578281299, 0.0009604644180391735, 0.003076297978836534, -0.0035476188191204024, -0.0009244944081570926, -0.0031891434423592193, -0.0027202163667666935, 0.004637691598492608, 0.004192495587378023, 0.0034230169874847906, -0.004198020132220584, 0.0018891354084955023, 0.0029002273867741297, -0.0028479751839417134, -0.003942226075072194, 0.004627129186943945, 0.0007885896002655426, 0.0041056816904818105, -0.0029057637667842845, -0.002934307519319624, 0.0037395176510643786, 0.0011932102221362778, 0.003403512740927483, -0.0006981792949456998, -0.0030441103552155185, 0.002296283343224682, -0.0035044797972518297, 0.003964751976754151, 0.004087638247732352, -0.000631429464463586, -0.0010199146130794323, -0.0033344563799444296, -0.0029970254991779225, 0.0025581778227351114, -0.0029630102956359587, 0.001875952076581458, 0.0020794251428629383, 0.0032489365546010257, -0.0020694956581920835, -0.0035626657702500174, -0.0018830877568874825, 0.003654950644454299, -0.0032066275626605224, 0.0021707691241742238, -0.0022708274724674658, -0.0028161103726134238, -0.0025153556351722828, 0.003500638109471731, 0.002034338315429898, 0.003360693455601613, 0.0017403893300793826, 0.0027845317460908356, -0.002802209063598566, 0.0004896609347160673, 0.003175949036818339, 0.00048363701514935245, -0.0013988030172339143, 0.002796977535582991, -0.0036112459890043015, 0.0013960137569694136, 0.002220989418742851, -0.003196534847596022, -0.0023211552430817597, 0.002417865852293418, 0.003375244692552652, 0.0032058754745238898, -0.0037084835413020547, 0.0006623099703415098, 0.002051718353517529, 0.002369715786914142, 0.0015982694562967936, 0.003133966397716362, 0.0019152753804041035, -0.0026063656479766635, -0.0023736987093471874, -0.0010095192250818943, -0.0010168447225287229, -0.0018177542921044049, 0.002603743745680631, -0.0019383033477088246, -0.0015901197159761515, 0.002884118526630678, 0.0011395458168496483, 0.0031507655472375862, -0.0003867317047521658, -0.0034576772117002282, 0.0018854433587513853, 0.0011889504898172827, 0.002789893664379058, -0.002354636983456816, 0.0027791902729179248, 0.0011852455137441103, -0.0013842828266254436, 0.00221696215051797, -0.0013838466086682551, 0.0030062487285800474, 0.0014299329502029893, 0.0003553389704445448, 0.0011437288049226217, 0.0020677735184134374, 0.0008891420595805783, -0.0020931913680027397, 0.0017418116724242463, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[6]), 1, (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (s_beta_s ** 10), (s_alpha_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 4), (s_alpha_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 4), (s_alpha_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 10), (s_alpha_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 2), ])


    coefficients_array = np.array([-0.41465063529017016, -0.21203633644438405, -0.20261429884376797, 0.12387650076807387, -0.14472044440351023, -0.1352984068559573, -0.11068310265350664, -0.10201985667342177, -0.09019557033238862, -0.08229111597527508, -0.03139174926782525, -0.07653452300952994, -0.06928569986031664, -0.0667829626979904, -0.06008661021952472, 0.021074426864017042, -0.05947396074500095, -0.04854490921988979, -0.05324377782376531, -0.047230319613255, -0.033565709546420595, 0.020319083727518353, -0.031813684086867966, 0.02609648271408338, 0.0185211622079611, 0.02429856122189738, -0.009422037594798576, 0.0288910120499177, 0.027281430939067975, 0.029961541506493588, 0.028540300608789912, -0.02949508141096482, 0.030183907405063503, -0.02818049175065838, 0.028923333892896867, -0.00721674752329208, 0.029982529726664986, 0.028854950647084238, 0.029567253096303835, 0.028549726362316268, 0.0050822905688318425, 0.01848719957084822, -0.004635444692335639, -0.01919685636809848, -0.019945666394072293, 0.01639234034329175, -0.018680078905561556, -0.01744483088601885, 0.019198195438022817, 0.0037901995803905414, 0.017103336126393365, 0.019498013683600216, -0.003293792472836204, -0.0013245973865258645, -0.0031154764534295303, -0.003066794401062836, 0.012862359100727982, 0.014151512435447832, 0.01751451364943937, 0.0193548868147064, 0.014830771515946941, 0.012413521384979222, -0.01439770984212335, 0.013687342928510902, 0.010440691628362956, 0.015162025042256621, 0.0027186283628090773, 0.01435672254519698, -0.013181124587255715, 0.010012637945777857, 0.018996433514395835, 0.01748274603365125, 0.014682391451739961, -0.011970848458051998, 0.01854671578751135, 0.017223359709301993, -0.010301985619384347, 0.018066902025824193, 0.016860416715274485, -0.0020363573480138663, -0.010852398459456106, 0.001529518263737329, 0.016456810835486176, 0.005759448029452392, -0.0027049616220370123, -0.0017923804376381756, -0.009680983546515769, 0.010585721799007753, -0.0017143969291805177, 0.009232966964579183, 0.0053521784668926695, -0.00398952457728043, 0.011251817425208671, -0.0016055448646351798, 0.011554380733898079, -0.003582254924998164, 0.011654230178389402, 0.001485849155829559, 0.006496005803235505, 0.0015671634325775073, 0.008810581335934903, 0.009567122872521148, -0.007816019512170942, -0.008432143379242469, 0.00735649258112043, 0.009949244026592963, -0.0012972021990801566, 0.001278588569256183, -0.0012732259153205876, 0.010119253197839061, -0.007302066951860428, -0.00114007343657064, -0.004269121170042149, 0.0011197166768151365, -0.006230319363512167, -0.004204537042634202, -0.006697980465797643, 0.004518197499186566, 0.0008993512004053118, -0.005605750039753293, -0.000861176836700184, 0.0027636373559513476, 0.0027028696707419963, -0.00520098638962606, 0.0015664562189515402, 0.0008011008249270677, 0.002264107522890287, 0.0022020381062551066, -0.0012517729844018215, -0.0009715500024221659, -0.0007275822099171613, -0.0007227115782763259, -0.0031980820612900725, 0.000623803782808761, 0.0006290135164472679, -0.003133497935633047, -0.0036900363004848083, 0.0005908854050534551, -0.0005704014146070318, 0.0008492710001811592, -0.0008291424170305981, 0.0005119236798985075, -0.0034472961353527037, 0.0004896024496313618, 0.0020964253459636816, 0.002035657675920505, -0.0013929634815481808, 0.0017253724257645985, -0.0026730979440411856, -0.001311998139624268, 0.0004319277681426422, -0.000700375782243237, -0.0025874429583051597, 0.001663303002863178, 0.00041709164350537867, 0.0006802471933997655, 0.000753024460169985, 0.000846151845775808, 0.0003931504950030565, -0.0007883780856774241, -0.001377818591188876, -0.0003536653693671988, 0.001790305810910597, -0.0024166759095669466, 0.0003494167183163186, -0.0003414314964056408, 0.0007299550813597003, 0.0007210115333929178, -0.0003269990663618702, -0.0007034949202681075, 0.0014921975742268221, 0.001674565199054183, -0.0021807818146778297, -0.001057058719763072, -0.002215180714267794, -0.0020026834802297873, -0.00029292098006745, 0.0013577427703339922, 0.0008422775685717573, 0.001666336713047704, -0.0021575124240958057, -0.0005862589795615225, 0.0009207495583733482, 0.0006940831035406787, 0.0014179762004199973, -0.00039570187646077026, -0.0019808400594000537, 0.0005609312780204098, -0.0002569454178238067, -0.0010166126311726756, -0.0022551096062561568, 0.0002724627698621281, -0.002013386841589016, 0.000703897270516214, -0.00023928649600787636, -0.00023729620123965104, -0.0009356472873058565, 0.0013740878701677197, -0.00023349382990636025, 0.0007461883970294346, 0.001480032642539559, -0.0019213766075917896, -0.00022332681809759513, 0.0005763836337813797, -0.0011195795706818415, 0.001255485909429173, -0.0006357641329670439, -0.00021715982045296544, 0.0007562907440860958, -0.0004574923167857443, -0.00020987749556309107, 0.0002096771339574698, 0.0008106571589311436, -0.0005347041011859267, 0.0010869971221327001, 0.0005787569632042861, -0.00020018577082434234, -0.0005684333008881603, -0.0006606619857789143, -0.0005201246207975944, 0.000508101885996662, 0.0006942873653615004, 0.0007557990875779494, -0.0017573501557803224, 0.00074784310091109, 0.0012573282759707192, 0.00065270596236892, -0.000183801177947635, -0.00018346933988799399, 0.00014889522934310556, 0.0004774873536273217, -0.00017903552811488618, -0.00017837280435777057, -0.0008532615661630377, -0.0005911109958837482, -0.0006735855597407716, 0.00017407232955541773, -0.00017029293234400232, 0.001218801153240054, -0.00048355012421600436, 0.0010014044625870299, -0.0004368458350545839, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), ])


    coefficients_array = np.array([-0.24595474894478908, -0.2064358628897955, -0.16304917407112404, -0.14370376818990652, -0.132857095994676, -0.100336263013211, -0.08761898351064283, 0.03892141129009239, -0.07659490508868759, -0.06730037087654327, -0.06390187755356255, 0.0283316959018593, 0.025464438819236913, -0.0617329640782535, -0.049552823466147505, -0.0516171812790877, -0.04432325866712766, -0.040056317578242746, -0.040839572830432734, -0.03809074910251406, -0.033370013003884, -0.009859754547114833, -0.02700377480135355, -0.02342999803862575, -0.018791748575208697, -0.0052918591735474415, -0.0187152009565621, 0.004246954623989539, -0.014935067824402983, 0.0036091447062752803, -0.013311310974871173, -0.009552299835362392, -0.002334984188876861, 0.002270309781993898, -0.00905258028607805, -0.00957802611119749, -0.008078466154478096, -0.0017013683168715424, -0.001577786514223969, 0.01212293662216117, 0.011119366573625498, 0.012027025185684105, 0.010834779515956143, 0.012837393791075347, 0.010551214058719387, 0.009557138606357254, 0.009364605188019202, -0.0059265092799517536, 0.00848246105899296, 0.007411893003976419, 0.007816842272391768, 0.006792822658785705, 0.0011045324659673358, 0.0010768300233725352, 0.006201725455646437, -0.0010109909397767116, -0.0008770286505779889, -0.0008602026851102844, 0.004068449439879035, -0.0007577366993721938, -0.0034290583991743386, 0.003939751240824418, 0.0006960048619415182, 0.0036571553519188175, 0.000665145304990651, 0.0006203543021365479, 0.0006100358032400742, -0.0005926105383431143, 0.0005840231196134068, 0.0005578204328421233, 0.0005244059994367992, -0.0005110680276104655, 0.000487964926322656, -0.0020823206102485153, 0.002432227787021382, 0.0004366587577813671, -0.0004184619001828464, 0.0003959887262966423, 0.0003548254443803983, 0.00032229012323178397, -0.0003108613555604482, 0.0015762219806056239, -0.0003108767267753082, 0.0002700302961242953, 0.00026581287849552636, -0.00025870642368997166, -0.00025093186401396007, -0.00022533743648514142, 0.00021771892545740374, 0.00021583361210098022, -0.00020363836725775707, -0.0001878278806297044, -0.00018343216213232303, -0.00017444892647311064, 0.00016378000497479893, -0.0001358395007222835, 0.00013243952546403644, 0.00013228226551409292, -0.00012865535452259326, -0.00012737413143875726, -0.00012557078665438592, -0.00012471142077493327, 0.00012384546955936178, -0.0005519049898749914, -0.00011488152966806219, -0.0001106108169523356, -0.00011158222502779493, -0.0001085213755504263, -0.00010441003767153828, -0.00010375096214994231, 0.0001037344913774165, -0.00010085953848120894, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), 1, (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12), (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 8), (s_beta_s ** 14), (s_beta_s ** 8), (s_alpha_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (s_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 1), (s_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (s_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 12), ])


    coefficients_array = np.array([-0.029271380268462762, 0.02468886983490244, -0.030379942745567396, 0.019506674502600768, -0.015749023911333575, 0.014551557986189926, 0.02358030736748362, 0.013599270767230585, -0.0146908390868967, -0.028327803885153543, 0.026874996858160475, -0.010280866912779102, -0.0037512245306300773, -0.01909409104552202, 0.02199227874319523, -0.00814020073245014, -0.020912508546275542, 0.016976924611270348, 0.016345973169488628, -0.011980118300388615, -0.010812475336229683, 0.01846483112939989, -0.0182177837170759, 0.01534353330486526, 0.008691176974015368, 0.011193204695548967, -0.007596554215875705, 0.006405811536926084, 0.012580659564245701, -0.013286359967768144, 0.014790747173561956, 0.012157239985649963, -0.012960672454333182, 0.004816483504781145, 0.005691072909471415, -0.005863356664744566, -0.01187486100321123, -0.011368624964086806, 0.0110725012205549, 0.00856675888676969, -0.00967510132995291, -0.011328819047976663, -0.009634571373637041, 0.010120149153519524, -0.00963679992830921, 0.008508733457007308, 0.010559359752579234, 0.007018938643312443, -0.009380540172187347, 0.010495840292896953, 0.008501275136268836, 0.010715204593815959, -0.00832184837065707, 0.004793910755590875, -0.007354758375199083, 0.008142001727033868, 0.002363593465299996, -0.006174848037116535, -0.010853512622442017, -0.009819607575179167, -0.010815852185577896, -0.0040760916351307045, -0.00791423381797243, -0.007683006390063896, -0.009397525014269718, 0.009519739795479272, 0.004403251964097442, 0.0077826301404289025, 0.007925249743049109, 0.007651057973566008, 0.008981768885568045, -0.007435439613152603, 0.0078059675753039655, 0.00955909506633942, 0.0059218364035010344, 0.006947371279593527, 0.005279559296245231, -0.010737445331362323, -0.0017623201175995726, -0.011409467192050014, -0.005615261852848573, 0.008771863177363459, -0.00952427329823511, 0.0016358476499998761, -0.01090231788910882, -0.008445380763590393, 0.004708439396745018, -0.01140703429629827, -0.007399121478667456, 0.006314147448919647, -0.008213248470697114, 0.003160701333618922, 0.008044910213567267, -0.00727850114619864, -0.005759768090902045, -0.005127462713108749, -0.007435281096092256, 0.006177649570641208, 0.006653272420926195, -0.004527122505413599, 0.004368215650104327, -0.006325959431588061, 0.004747060358171201, -0.008723914756066303, 0.003499684013015653, 0.006029569846272332, -0.009293792768951953, 0.007397059115062834, -0.006153998944122726, -0.0034660630197145222, -0.0011271886056265692, 0.0037734432505682016, -0.004841203195623246, 0.006763844704949116, -0.004432810956178572, 0.0010360966114912496, 0.003908211837132666, -0.004766986940548089, 0.003899035538071459, -0.00098130683564452, 0.006884171963278207, -0.0041274913549633, 0.005529797462477018, 0.004012718161883483, 0.0034105745628540654, 0.004399807600080692, -0.002202455141182112, -0.005333026393782164, 0.0008046794993864983, -0.0032139269933221114, -0.004748442037845618, -0.0024906269624382, 0.003825284856371711, -0.003854932767048706, -0.004343846607787392, 0.003547191930738823, -0.0028571472177573477, -0.001543261283699924, -0.0037561503865170287, 0.0011085624725910524, 0.0006589513203600399, -0.005400370419655715, 0.0006312981471175557, -0.005355018071697734, 0.0022854749212333743, -0.0047521539479842894, 0.0022860770816670404, -0.004001234361216412, -0.0006071157189498206, 0.0035040835310160452, -0.001796023923605167, -0.004527493584800926, -0.00410047319164157, -0.0017847422974641084, 0.00351726417093549, -0.004292406979487095, 0.0026324300176225556, 0.002940111264371507, -0.0036358973792689872, -0.00403790578073978, -0.0024706716882680955, 0.0004954956409435841, -0.0034593855403307052, 0.0028263115257916734, -0.0031428359740606894, 0.0011159372861905081, 0.004387558812448373, 0.0010961711103924076, 0.00045763273679642197, -0.003583894905649755, 0.0021935099095204244, 0.0024789719335498424, -0.0029371360152484053, -0.0026795150713078827, 0.002921480360444613, 0.003320049098930712, 0.002970002664554307, 0.0023860800241906135, 0.002575261841850028, -0.0028063639630057126, 0.0031161701337862613, 0.0017037300578947936, -0.0032186801381467738, -0.00037254090503186925, 0.002158850220503787, -0.00035656704147299216, -0.00035425207402934846, -0.0024146250344832944, 0.001720386206592022, 0.00172098836567391, -0.00033910800162565547, -0.002379790200603593, -0.001342671684911425, -0.0010904069306331059, -0.0013313900571721598, -0.0010844658886320013, 0.00031339460341030907, 0.00030670782415695143, 0.002545609925586401, -0.001430961445292339, -0.002300455524122571, -0.002257936049927886, -0.0017648263707823481, -0.0023033428623603206, 0.0002821022671064679, -0.00028161613878032636, -0.001716710079537905, 0.0018010471745455532, 0.0010267102295190675, -0.00026614238544546426, 0.0008436282829868872, 0.0008238621081969215, -0.0022057257915190295, 0.00025695257842623986, 0.0008987553653829579, 0.0014416904549610617, 0.0002452184081616978, 0.0019044969901916727, 0.0014345954033402268, -0.00023907289327685565, 0.0014289637178236236, -0.001367810750128539, -0.0011115163765550403, -0.0011091931267750883, 0.00021925293390085476, 0.0013228937010981183, 0.000549439042270966, 0.0011082745151104504, -0.00020786807092561385, 0.00019576888996649384, 0.000953751524081449, 0.0016442570541249112, 0.0012693196544457616, 0.00019108717216963366, 0.00100846699514718, 0.00018738453514184064, 0.0012545273986034305, 0.0006927785090269838, 0.0007024028783998066, -0.00018319521046137853, 0.0001801866229319916, -0.0008124291694562248, -0.0008064881290336972, 0.001245687557258877, 0.0009453264397430575, -0.0009649106779963444, -0.0009715458042249847, 0.0007835021367467902, -0.0001071329198518007, -0.0010975681069859977, 0.00016290919825043984, 0.0001615867720203179, 0.00015931425276460642, -0.0011491213022920257, 0.0008252692768585822, 0.0011495701412010688, 0.000786125411389418, 0.00015165304881188346, 0.00015010909021952748, 0.0011281630610459092, 0.0008056324310035052, 0.0012965476690845064, 0.0012937342808155622, -0.00040594309523435954, 0.00014680354813671458, 0.000613334139372669, 0.00014201497609867719, 0.0006128167018368873, -0.0003897327054348416, -0.0008612160449723778, -0.000875537023167334, -0.0001373351636668192, 0.0007834249700506233, -0.00082332742874837, 0.00013375090348414516, 0.0010602407654262164, -0.00013184768971779976, 0.00012830336183770105, 0.0010333012359567692, 0.00045103086664916427, -0.0006692820538321188, 0.00012265747492985751, -0.0006716574842397509, 0.00012221074312503244, 0.00012191987019480412, 0.0008421512343547891, -0.00011892867743092517, 0.0005589669134390518, 0.001048235098404242, 0.00011741785734645086, -0.0008036127344067193, -0.0007828784224642404, -0.0005448993019658001, 0.0009903168238813973, -0.00011411725459235819, 0.0001137262370826841, 0.0005497926121630645, 0.00011284873227217318, 0.0008018945437405614, 0.00010988498393924266, 0.0009931003375827716, 0.0009587554729968196, 0.00010625086778714235, 0.00010421413107132456, 0.0001042824154566712, 0.000518844648637912, -0.0007470975972356062, 0.0006855692185530327, -0.0007210190940717359, -9.750268839595248e-05, 0.0005024984232721896, -9.339557096311805e-05, -0.0005778465914495519, -0.0005885384904430454, -0.0006818922414675763, 9.003888629649779e-05, 0.00048767233449660243, 8.757565455183541e-05, 8.407123091614447e-05, -0.00030130316772840283, 0.00046539696554079557, -0.00024179584005599045, -8.040183120370723e-05, 7.906777511354883e-05, 7.761171706177308e-05, -0.00028509277824323605, -0.0005306883893791631, -0.0005128538879936997, 7.575398734911462e-05, 7.295925870362953e-05, 7.028472338127886e-05, -0.00026198908595087794, -6.645104129177836e-05, -6.63577698877672e-05, -0.0004873889260887863, 6.411662826353723e-05, -0.0004635856836447966, 6.028519507433345e-05, 0.0005283027824733943, 5.599025185619203e-05, -0.0002441874272180037, 5.547269096769506e-05, -0.00045337435875582256, -0.00023756859007633595, -0.00042458945214833484, 5.3538384201108354e-05, 5.381506407517105e-05, -5.1431171657989516e-05, 5.136375839212033e-05, 0.0003348487225519051, 4.6767922010490974e-05, -4.438863124752961e-05, 4.4378286348098717e-05, -5.535815158175248e-05, -4.307652912266132e-05, -0.00020618346505720894, -0.00020915617998773785, -5.177477769586232e-05, 3.957593470917328e-05, -3.9092548026611075e-05, 3.884264905714824e-05, 3.851790104552081e-05, 3.829560329663265e-05, -0.00018961103157208561, -0.00017842401905955577, -0.00010525728732478306, -0.00017501811809042233, -0.0001569940660263785, ])


    return np.dot(coefficients_array, expressions_array)

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_beta_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 8), ])


    coefficients_array = np.array([0.4549693796915666, 0.0157829306682663, 0.016315288434923175, 0.01340475477320478, 0.008094622843757874, 0.01199669746825981, 0.01283835375706317, 0.01283401655300524, -0.014016598401805226, -0.011043536968041005, 0.0064522636221585935, 0.010084768779932538, 0.006243529760976929, -0.010817530580012785, 0.010229834277435838, -0.008976511649605036, -0.01069490220803517, 0.008915898147507303, 0.003580959168231209, 0.006757959914492086, -0.007343575982551637, -0.009737447570189826, 0.008718398937916715, -0.008436322916779057, -0.004739393707476505, -0.008187670672738415, 0.008621850925503362, -0.002810049707841068, -0.008114182528457413, 0.006874550461597948, -0.006009195398519346, -0.007883149512947505, 0.002187261941296566, -0.0021559647802329427, -0.008396223213702725, 0.006887727893713505, -0.005987500424080517, 0.0048711133159374965, -0.0018243817258697728, -0.0070766947828835875, 0.002948914123613555, 0.005744056923445222, -0.00471371607205339, -0.005624570218836997, 0.006174913642365553, -0.005473708926458434, -0.007677556447342287, 0.0031749205122804285, -0.0047395798023714035, -0.004276370484006816, -0.005620375182626013, 0.005695558002552761, 0.004216502828486825, 0.005333336262310917, -0.004797817906305338, -0.00545342974587858, -0.0035726593126961157, 0.0052774888275614745, -0.0020009938857231137, -0.005337974811965141, -0.00535799221695193, -0.0012805462074015523, 0.0032782985328823236, -0.004955152859697061, -0.0026723683862175753, -0.005276235122731209, -0.0018472696122313614, -0.003577385020673447, -0.005104860302945736, -0.006495502493900831, 0.003645954722864203, -0.004764511438303148, 0.005130884450967877, 0.004423630472694418, 0.0012984540011182755, -0.004224786667386964, -0.002845299398368518, 0.003197040905692689, -0.004178112938788711, -0.004901708419186285, -0.0049594019484032695, -0.00536509560853002, 0.004289307071860701, -0.004481524131641494, 0.0029148394255067746, -0.005649902193136233, 0.0013934169647518483, 0.0022753766018755216, 0.005132056900783783, 0.004501556241956973, -0.002832980304254846, -0.00513486793613353, 0.0054360676345283155, 0.0037337329589475945, 0.0029809704421861626, -0.004212965687034566, 0.0012563557965658205, -0.0029768660454500308, -0.005297218413552147, 0.0031292923856081917, 0.005326755147052677, -0.002977621018602623, 0.0038746060898104365, 0.002213282562957426, -0.002969826077357946, -0.0005593882841914197, 0.004921496782904176, 0.0005480620868163892, -0.004233143141538831, 0.0017074638160620615, -0.0005162184764505703, 0.0017301154090497073, -0.0005129595253949254, 0.0005099689979083747, -0.002935984092044604, -0.002453119862106517, -0.0030292903737930686, -0.0026554391797558377, -0.004353602140199968, 0.004526236488741828, 0.0017598332039703984, -0.00048438850269626454, 0.0011448369071301915, 0.0011520478043984008, -0.002469112878570646, 0.002988312237016939, -0.002223769932512678, -0.00046193150711662615, -0.003836885976424168, -0.0009692042806283279, 0.0030365792102927157, -0.0028233974329287073, 0.0004215264097477824, -0.0015214224570995404, -0.0038064876813938917, -0.001276232982660497, 0.0035079163879183336, 0.0022090182385926128, -0.0012750719664227845, 0.0019831420207135626, 0.0029227659365562665, 0.0014867484947398708, 0.0014829552902432953, 0.0015965942211052118, -0.0003894459496157685, 0.0014804710845560509, 0.0026789346587889297, 0.0029432937486282107, -0.0024910643887845357, 0.002822573834408339, -0.00035721177147318006, -0.001964447353345522, 0.0012902099102215286, -0.0008425378503642786, -0.003005220003174109, 0.001395124413164013, 0.0018805787731045742, 0.002004232504537717, 0.0025920354329765655, 0.00030282803518908667, -0.0015150420252551323, 0.001121854342593254, 0.0013806419932472396, 0.0015262379685382303, -0.001199859672160892, 0.0002766056571815604, 0.0015191094275316054, 0.0022005037456348333, 0.0008633818263849936, -0.0008875202648422566, 0.0008705927220338236, 0.001781996429169735, 0.0013979673626246577, -0.0009569267657762603, 0.0015343088500415368, 0.0022286410531758213, 0.0012388941087277262, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), ])


    coefficients_array = np.array([-0.2349973368763135, 0.011918807308041656, -0.007723797840762084, -0.005278969874839671, 0.004776676540470666, 0.0043182291805599765, -0.004256228050754051, 0.0035545840508298264, -0.002988937035559901, 0.002650601080703246, -0.0023906503304674353, -0.002272052311479019, 0.0020734790629611186, -0.0020552138018271045, 0.0019992981782536684, 0.0019233676735125492, -0.0017165242613443649, 0.0016551120162785148, -0.00144395563711923, -0.001377605197979166, -0.0013421795297504247, 0.0012195339948399256, 0.0012081592015047856, 0.0011460381861915553, -0.000922781390798886, 0.000912111671381309, -0.0008706840274708004, -0.000739677276496756, 0.0007244149541580226, -0.000703051625662603, 0.0006768192296929542, 0.0006318824205131784, 0.0006187008722703245, -0.0005680702157098813, -0.0005360954834800087, 0.0005231347880448297, -0.0005259257283374918, 0.00048131515191039616, -0.0004778158419482519, -0.0004575062338490818, -0.0004496281949824188, -0.00044549788965012337, 0.0004139893801723528, -0.00036070121777386405, -0.0003486837140917836, 0.00027390314202974976, -0.00027780997848156477, -0.0002684272434761384, 0.0002382114066807899, 0.00024090399859571168, -0.00023272603974663032, -0.00022723240714464166, 0.0002265143680207727, 0.0002104181855974388, -0.00020594907634522108, 0.00020083585459600874, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_beta_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 10), ])


    coefficients_array = np.array([0.545030620308573, -0.015782930668555614, -0.016315288434898812, -0.013404754773311477, -0.008094622843758335, -0.011996697468191393, -0.012838353757033127, -0.012834016553140646, 0.014016598401767428, 0.011043536967901864, -0.006452263622202979, -0.010084768779922374, -0.006243529760937367, 0.01081753057990636, -0.010229834277421343, 0.008976511649599162, 0.010694902208078724, -0.008915898147401086, -0.0035809591682689937, -0.00675795991429564, 0.007343575982504939, 0.009737447570207095, -0.008718398937836354, 0.008436322916759616, 0.004739393707564046, 0.008187670672788125, -0.008621850925422715, 0.0028100497078589193, 0.00811418252845637, -0.006874550461515206, 0.0060091953985765825, 0.007883149512880912, -0.0021872619412653745, 0.0021559647802220265, 0.008396223213681355, -0.006887727893632892, 0.005987500424189218, -0.004871113315708479, 0.001824381725869464, 0.00707669478275544, -0.002948914123426262, -0.005744056923574233, 0.0047137160722190916, 0.005624570218742206, -0.006174913642419517, 0.00547370892650731, 0.007677556447279719, -0.003174920512280771, 0.004739579802372483, 0.004276370483939851, 0.005620375182606345, -0.005695558002496655, -0.004216502828587033, -0.005333336262362128, 0.004797817906199933, 0.005453429745967576, 0.003572659312653206, -0.005277488827828722, 0.0020009938857680513, 0.005337974811953975, 0.005357992216916615, 0.0012805462073713265, -0.00327829853295027, 0.0049551528596921595, 0.00267236838606362, 0.005276235122658233, 0.0018472696122837037, 0.0035773850206525007, 0.005104860302979138, 0.006495502493844497, -0.0036459547227082273, 0.004764511438315379, -0.005130884450944988, -0.004423630472862413, -0.0012984540012170385, 0.004224786667264647, 0.002845299398238968, -0.003197040905706252, 0.004178112938891832, 0.004901708419206306, 0.004959401948444057, 0.005365095608544035, -0.0042893070717308895, 0.004481524131613416, -0.002914839425588216, 0.005649902193113237, -0.0013934169647672704, -0.0022753766018705967, -0.005132056900763379, -0.004501556241903963, 0.002832980304280705, 0.005134867936108287, -0.00543606763450633, -0.00373373295894276, -0.0029809704422890915, 0.004212965687004769, -0.0012563557964440596, 0.002976866045482025, 0.005297218413461792, -0.003129292385873732, -0.0053267551469983205, 0.0029776210186365447, -0.0038746060899248545, -0.00221328256310338, 0.0029698260773375522, 0.0005593882841911837, -0.004921496782897538, -0.0005480620868161871, 0.004233143141540367, -0.001707463815898232, 0.0005162184764500164, -0.0017301154089348542, 0.0005129595253949303, -0.0005099689979083702, 0.0029359840919433514, 0.002453119861976871, 0.003029290373808025, 0.0026554391798106077, 0.004353602140172819, -0.004526236488689874, -0.0017598332039805832, 0.0004843885026966199, -0.0011448369070796707, -0.0011520478044581796, 0.002469112878612242, -0.0029883122369796494, 0.002223769932782314, 0.0004619315071166655, 0.0038368859763557154, 0.00096920428058728, -0.003036579210239205, 0.002823397432992427, -0.00042152640974777133, 0.0015214224570103915, 0.0038064876813661765, 0.0012762329826864806, -0.0035079163879599994, -0.0022090182385319864, 0.00127507196638325, -0.0019831420207275055, -0.0029227659365957588, -0.0014867484947283837, -0.0014829552902626524, -0.0015965942211599393, 0.00038944594961575624, -0.0014804710845038446, -0.0026789346589027587, -0.0029432937487637247, 0.0024910643887822953, -0.0028225738344523927, 0.0003572117714653639, 0.0019644473534035376, -0.0012902099102107324, 0.0008425378503785317, 0.003005220003232259, -0.0013951244131895995, -0.0018805787731174396, -0.002004232504564183, -0.002592035433004016, -0.0003028280351891221, 0.001515042025278597, -0.0011218543426077018, -0.001380641993238184, -0.0015262379685110745, 0.0011998596720944603, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 10), 1, (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (s_alpha_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (s_alpha_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 6), (s_alpha_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (s_beta_s ** 6), (s_alpha_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (s_alpha_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (s_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), ])


    coefficients_array = np.array([-0.44105092887338915, -0.22736642848772035, -0.21368450041076006, 0.12269910168921501, -0.15689767461247123, -0.14321574658733607, -0.12114669741113311, -0.10849797006783818, -0.09953755298917662, -0.039173580718946464, -0.0879220264338828, 0.0340066279374694, -0.08506674320600106, 0.057229525355191886, 0.0554697362147119, -0.0743495811460653, -0.07469354266714162, -0.06473990876257475, -0.06688694334136772, 0.05342098396539129, 0.05166119487289512, -0.04656491308793184, -0.04532111961254709, -0.05758329205455404, 0.05142140662410076, 0.0498522309840911, 0.04951404963579524, 0.04813548725168256, -0.013681928088292435, -0.013313164213125558, 0.0476664497538384, 0.04645120672367597, 0.04484347170088281, 0.04592268938494543, 0.043336601208381384, 0.04430253199068348, -0.008700391385812361, -0.02709148144014952, -0.025847688085953217, -0.0223107494674211, -0.020040934285366102, -0.023252572066940213, -0.02045853167818603, -0.017343566142918404, -0.016122171729285404, 0.003999583660507579, 0.0037945799537150997, -0.0036585532080004412, -0.0036117909103969715, -0.0033877551386539426, -0.0032420599721943513, 0.0031886184654944176, 0.011741218995593694, 0.0028492842566646723, 0.013798737091871316, -0.01035574174508184, -0.01173131133688246, -0.01309597874334846, 0.014707690659102572, 0.002612491957272365, -0.0025712895392155256, -0.010532315909642504, 0.007497098743577859, 0.015049080289549346, 0.01058080913282694, 0.012419875690667997, 0.011277825367869853, 0.015098350092556254, -0.008085926491997839, 0.009091223266088985, 0.012315862965584687, 0.013227218429371726, -0.002114315500092417, -0.010301938279002982, 0.014992326015030581, 0.012772899976110775, -0.0008197874122980947, 0.006760547085278587, 0.013526358038499088, 0.012924380470229098, -0.0018508010320552135, 0.013564612286458484, 0.00978505746053709, 0.012908922762307859, 0.010734529109400991, 0.007803862017915425, -0.0025548072115924264, 0.01346458394123113, -0.008186689240882948, 0.0016765700863367531, 0.0013465779747131, 0.011160479938602953, 0.004847103038140844, 0.0015428798325803103, 0.001504115380468319, -0.0014902859930087534, 0.011310227709594558, -0.007010487850630096, 0.0013936161842008964, 0.011308487410347304, -0.00794412322097745, 0.0014147076500246904, -0.0011988994680640144, 0.0039836000079390855, 0.001144457914501101, -0.0011053770914238707, -0.005798669630145594, -0.0011000655866129539, 0.0010863346304529234, 0.0010480692622950897, -0.00386860274137956, -0.003867237579029371, -0.0009737357802733594, -0.004329159251187333, 0.001882037635920101, -0.0009768759370374924, 0.000940760807705798, -0.005297200520389971, -0.004645657380120272, -0.0008631911728877036, 0.0008291076426835172, -0.0008227696051991889, -0.0013360880976790285, 0.005132105646354979, 0.0007757129420933265, 0.002448648553081124, 0.002436551782315603, -0.004983805961032981, -0.0041119359591627195, 0.004324777767367925, 0.0020643813986679833, 0.0007193945742897173, 0.002046330109394342, 0.0006837460068705355, -0.0008908962572801975, -0.0029358780303089683, -0.0005809610891753359, -0.0029345128777900015, 0.0005850720561788374, 0.0030874599455030494, -0.0005562050827379002, -0.0005440121404736005, -0.0029821108250256884, 0.0005108413702069265, 0.003298333842568069, -0.0021575011857956623, -0.0004644101506205237, 0.0004394859823900798, -0.001278140777010482, -0.001276666432785713, -0.0006838255295151215, 0.0017995313966822253, -0.0031273408732103384, 0.0006784941249375226, -0.0006627523790106675, 0.0006680837777892018, 0.0017874346092437371, -0.002490837842752201, -0.0024468283735247904, 0.0024196575057858576, 0.0015093057721976477, 0.0014912545008617514, -0.002484001026858188, -0.000374753483503705, -0.0003509814813740215, -0.0003358414678584755, 0.000703597372193996, 0.0007111102233810525, 0.000577488477448145, -0.0012019039278362393, -0.002162130020122676, -0.0020727459229397957, -0.0006512094183684258, -0.0006272387969763057, 0.001501737554460548, -0.000286751556712207, -0.0005574747283308396, -0.0002833914351881665, 0.00143611128309434, 0.0012617774294086408, -0.0002705583572327311, 0.00026447438920329763, -0.0005714830044737962, -0.0002598694426755111, -0.0005504098853184121, 0.001183707236830747, -0.0009768624823567203, -0.0009753881318292003, 0.0009403936630399231, 0.000941644004080761, -0.00023905609227492424, 0.0004321438971868193, 0.0013961075540587062, -0.0018037395508140317, -0.0018433133053851747, 0.0003882016504497513, -0.0002304563479955004, -0.0018886504197206297, -0.0020450702420483535, 0.001196642710604175, 0.0011243060718071577, -0.00022511383026252788, -0.000574402955023724, -0.00021946705236554584, 0.00048162554032561315, 0.0005588575896396097, 0.0004712151914422997, -0.00021572021019759452, 0.0007104638074535105, -0.0017807125114561533, 0.0012769518443989797, -0.0002100449990957755, 0.00021146126886692658, -0.00020898910495340225, 0.000536427701682731, 0.0013306484919701034, -0.00020216560530877877, -0.0006686120950358755, -0.0006674760008949772, 0.0005880475502673171, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[2] * s_harmonics_beta[1]), ])


    coefficients_array = np.array([-0.24182692038661302, -0.19824281940751315, -0.16355995175174828, -0.14048020234743328, -0.13180948545608814, -0.09784285189211729, -0.08748566879665663, 0.03498381547026233, -0.07465483671876613, -0.06656274589822803, -0.064127499100948, 0.027284406107434354, 0.026030035810714513, -0.06020730530015848, -0.049937753595024996, -0.05040356006675403, -0.040514788369144385, -0.04334742757595767, -0.0403915146954667, -0.038077035768583706, -0.03386106312198031, -0.02678360685021929, -0.02369096185861952, -0.006386969998197132, -0.0056922233665913, -0.01891667230898691, -0.01866524326472716, -0.015311229063062438, 0.0033678827464659147, -0.013386345780228822, -0.00997650373236484, -0.00929110963872722, -0.009744546613689455, -0.008407203677193472, -0.0018826724200855318, 0.011702220758120965, 0.011583291511952396, 0.010672932861547314, -0.006367609873526464, 0.012423881366814916, 0.010408920357558452, 0.010081815714370028, 0.009111938910500317, 0.008899877127221508, -0.001289360587329069, 0.008053804060361025, 0.001245585622460538, 0.0011857875816319555, 0.0011784239201391195, 0.001181978380873055, 0.006958543279318592, 0.007340546107241069, 0.0011134124136813438, -0.0011107437340071764, -0.0010962564972785411, -0.0011028463634898406, -0.0010760834680528994, 0.006353723425586286, 0.0010066682878262156, 0.005742754220480974, 0.0008801355148186956, 0.0008687093235028745, -0.0008574467658132627, -0.00375162445701552, -0.0008161992401930489, 0.0007739651048126172, -0.0006848112673559319, -0.0006816492170373266, 0.003635076258120256, 0.0006859370670971283, 0.0006489275166039135, 0.0035089257696593696, 0.003226570428049423, 0.0005729537336005598, -0.0005846789207270325, 0.0005729783966209775, -0.0005710455137698907, 0.00055337082716192, -0.002487178284936086, -0.0005109486963513468, 0.0004317482448740733, 0.00042976104752049174, -0.0003943357376629471, 0.0020093775992617276, -0.0003299502327807264, 0.0003136126273946058, 0.00026619292727714017, 0.00026160677803747337, -0.00025985541887210017, -0.0002532217477516689, 0.0002448382852603057, 0.00023446257778753524, 0.0011470174470527292, 0.00023079800505745087, 0.0002201233538268924, -0.00021846748764928843, -0.0002059009699709445, -0.00020564736433547397, -0.0009396326114994788, -0.00018435607710637851, -0.00018098230556529463, 0.00017503002104888189, -0.00016094769202022044, 0.0001493277665784904, -0.00015145786236610672, 0.00013926254480912847, 0.00013462630397306828, 0.00012540729474351037, -0.00012515643243614415, -0.00012420107740535537, 0.00012236189032755385, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 4), (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 6), (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (s_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 12), ])


    coefficients_array = np.array([0.02480809732849392, -0.026091377012479308, 0.024878997811330437, -0.02708991070910856, 0.021018872588026323, -0.028575711598938715, 0.022394663229853805, -0.012739518542493961, 0.012362096744154368, -0.026448132179014042, -0.025275390687034563, 0.022131659238334073, 0.011035408503368323, -0.01158592543351341, -0.01435301993897624, 0.018095808620332235, -0.022520326203146396, -0.011392608489199102, 0.016406958581332187, -0.0071173122262407525, -0.017509557891005504, -0.006652318185447861, -0.01532650393582272, 0.008378768886101316, 0.01273558904164894, -0.015208854817274077, -0.01431471077964335, -0.007677870601773762, 0.010259744538836052, 0.013098904349819713, 0.011257593005699456, 0.01260419665047757, 0.006997034696771665, 0.008241855483458276, 0.0039479723611559, -0.008947886583111792, -0.009862831859800693, 0.0043379165213082785, -0.008508794479974172, 0.008983693092800093, 0.007921540824042804, -0.008219623325383311, -0.009639141603242515, -0.009551026344992466, 0.006147053210728037, -0.006844307829206473, 0.009378793833663128, 0.009032754892833648, 0.003696713788130421, 0.008606010779746372, 0.009928177643354288, 0.008349760928814435, -0.008868982462284668, 0.004611914008737837, 0.007618894139126599, -0.008355460263566695, 0.008862799306336891, -0.008080574372101095, -0.005921828032418911, -0.008829946809683733, -0.007612487166251731, -0.001945873283932938, -0.008360270578601168, -0.0018785956590156789, 0.009671292633101534, -0.0064335264014345715, 0.00621402927613964, 0.0017519615647179035, -0.009329407564962642, -0.006802778739279119, -0.008812399728848114, 0.008618992843928846, -0.00982795308268555, -0.008340049781078268, -0.00973494613349364, -0.005279702378953151, 0.005252392305137243, 0.0015164657141860318, -0.001516136459182638, -0.010054765017419795, 0.002484334584252952, 0.002628642940940369, 0.00704440307671419, 0.0037405785038688, 0.0065692391632378834, -0.0049902512012510725, -0.0024981441598564127, 0.0013597150127918315, 0.004730271643223688, -0.004490188075866139, 0.004752371670380156, -0.0013142186026220764, 0.0012897730223469406, -0.006078316520052506, -0.006663001007979001, 0.001254545931593084, 0.0042819129358635495, 0.008969907023660342, -0.0065416690443659544, -0.005400596168495791, -0.0055991225131945535, -0.005582396637030641, 0.0011619307510840077, -0.005564742261178003, 0.008878574579789935, 0.006930219090550097, 0.007367588642905065, -0.002290990859855526, 0.005605143173947746, 0.001045059364747449, -0.003615862424375619, -0.0010089040360262759, 0.005390899995604928, -0.0064812962957570925, -0.0009763320843790582, -0.005031094748858095, -0.0035551614663538057, 0.007357845647496676, 0.004625502379623888, -0.0069444776101199165, -0.004208239508211915, -0.006148725435361435, 0.0009334801025332277, -0.0009275514907576797, -0.003052530686360605, -0.006721845691581357, -0.0009206543140917734, 0.004742744599801809, 0.004620806972098972, 0.005501691819482955, -0.004197753465961538, -0.004712695742896194, 0.004038095095429248, -0.0028788241477394265, -0.0008541735634130878, -0.003917993718842018, -0.004032932890307415, -0.005160073009555879, -0.002199080855207733, -0.0018145200234147107, -0.002444721903280649, -0.003948718359562294, 0.00696194839286176, 0.004918605004247875, 0.000792247411161312, -0.003457303024893455, 0.0007735031290415993, -0.0026409943317388727, 0.001981209857909736, -0.003193177931114551, -0.0025702365379070935, -0.0033406884348435605, 0.005850342765905044, -0.004255166357184998, 0.0006680205490899048, -0.0006644171882489619, 0.00604017474034942, -0.000643925324761337, -0.0029304379895653122, 0.0037529041829988358, 0.0006081790411075754, 0.003055993711768854, -0.000601194654346662, -0.0005792760359604078, 0.001636815118449264, -0.0032121945930042453, 0.0037065995198951453, -0.0005548218147073498, 0.0032148791650483807, -0.0005455199025016577, -0.0005389237067394614, 0.0030369974766952705, 0.001913124098874031, 0.001924491242319438, 0.0019242741515731292, -0.004079696277627657, 0.002611782341326359, -0.0028183208024905814, 0.0018731557308859538, -0.0018522955860764529, 0.001756901891160304, 0.004242857149809537, -0.003602445527551963, -0.0013734505866706628, 0.0026667895469895753, -0.0031770316235425486, 0.00043979311226964953, 0.0026398871710735343, -0.0013636895563577701, -0.003325438888691605, 0.0004229601134304526, 0.00042146510787144766, 0.0037089331586576857, 0.0030127999888696667, -0.002309709414868643, -0.0027442414314752185, -0.002190864935681258, -0.00037730350497508893, 0.002714888256048613, 0.00036892339698116024, -0.00141620947752256, 0.0003559919622714209, 0.002379106876038701, 0.0007740002525995396, 0.0023302003080995404, 0.0009405444676101782, 0.0007568216545057357, 0.0014510360276827363, 0.002090878286269874, 0.0014508189374392638, 0.0010570173037287454, -0.00028552472492616093, 0.0002711681141544154, -0.0014014352578437714, -0.0014881893950549267, 0.00026399875047002156, 0.0016468197264901943, -0.00025135988298705624, -0.0010235145671296264, 0.001342376455393051, -0.001013753534190952, -0.000812948601265008, -0.0013970479115998095, 0.0002353608779104551, -0.0008080939273083112, -0.002144695929344794, 0.0014500747377255607, -0.0006480301372724451, 0.0013129268420533648, 0.0012180264652940627, 0.0002082325788581812, -0.0014691600213298755, 0.0012103732850082024, -0.00020012128282978289, -0.001407170492989843, 0.001647001961924673, 0.0001924070135916173, 0.0015190848135627191, 0.0012444988739614422, -0.0010003772319132275, 0.0005897693340719976, 0.0014985705925665831, 0.00018485233262052, 0.00018436023640190115, 0.0005725907355566353, 0.00017498438117254157, -0.0008442245350732817, 0.00016918665693178375, -0.0008431075455713257, 0.0010740612001371428, 0.00015838260179415326, 0.0010589719308469322, 0.0001516575216697333, -0.0006208088806393875, -0.0011485973945429089, -0.0008604940347479333, -0.001078135469422969, 0.0001424199642089612, 0.00013891073828223372, 0.000663460412325682, 0.00034846885438096994, 0.0001369676676676193, -0.0006025685566540594, 0.00013268874854039864, 0.0009740573249056093, -0.0005977138814226632, -0.0007302714557876961, -0.0007377985080360861, 0.0004854010850116141, 0.0004927280668141, -0.00034815941572187626, 0.0009526534880929697, 0.001069509425448897, 0.0008805293827838261, 0.0009562635323948921, -0.000334079110010722, 0.0005653669185087412, -0.0009656815036658672, -0.0007043557432475962, -0.000997382643342898, 0.0001165457492369256, 0.0006648514009529151, 0.0008994165479324066, 0.00010914441137841224, 0.0008728196600249704, 0.00010446700121780118, -0.0006644918389666471, -0.0006496529545836961, 0.00010355070956806057, 0.0007953986012347283, 0.0004330570927709918, 0.0004305324534194619, 0.0008409352748186739, -9.359605381161601e-05, 9.266562307124867e-05, 0.0008100757452837801, -0.0004933625258992723, -0.0004965398690235579, 9.050283111878322e-05, 9.034792173869941e-05, -0.0006096237068295414, -0.0005888052001532433, -0.0007398982599099928, ])


    return np.dot(coefficients_array, expressions_array)

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_alpha_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 6), (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 10), (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 11) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (s_beta_s ** 10), ])


    coefficients_array = np.array([0.41212596059523365, 0.02972644719003739, 0.03586757167720022, 0.020517676483402247, 0.022049643413418935, 0.012251738189107478, 0.022520178797692057, 0.012191907641694992, -0.01945800658756843, 0.0232972795441584, 0.009027034762937612, -0.01607219762092992, 0.01590966640644372, -0.014093982841128574, -0.010268440609476619, 0.0061243444256387555, -0.009831836275291977, 0.012570292140556421, 0.015062056980636276, 0.01636551432766722, 0.010554031937699042, -0.00536542679586404, -0.012271859248910352, 0.00720626839717975, -0.009491339867584983, -0.011029426694274534, 0.010211099558939434, -0.006083074882660606, -0.006882631644351492, 0.011120715794008628, -0.003023711951973387, -0.011340945099104802, -0.008518326964673865, 0.010170979542976145, -0.010732928471950768, -0.007297161044136862, 0.0027711881783434394, 0.006987586435910658, -0.007758496527223281, -0.002587057322781258, -0.008004109448023043, -0.007530598198327016, -0.006426783719259983, 0.0029139385131414994, 0.006497045646729942, -0.0071100668752612515, 0.003921393861870555, 0.005638526936610519, 0.007751613329814113, 0.00562992720663536, -0.006387544812343424, -0.005921365878347945, -0.00803634857188192, 0.007165244267303153, 0.006608406963408644, -0.006503928842341039, -0.008266846531001073, -0.007658829902976845, -0.0053683682039100495, 0.006267128075024215, 0.004949814920940958, -0.005240793906510829, 0.005113671966674899, 0.0061996896203990555, -0.00717391432291241, 0.003933905186861209, -0.0058601921784986015, 0.006948465618301438, -0.005134415141131641, 0.003923454894143255, -0.002160251953368183, -0.0044974721196572595, -0.006079642926889769, 0.006040696101303099, -0.003147253385038785, 0.004730900890473443, 0.003921582292471882, 0.0011793605457787102, -0.0045507810985055, 0.003951560261243837, -0.0068767111085805055, -0.004109529212202925, -0.0010693146772998436, 0.004140289654090115, -0.0036542520217306288, 0.0043875363621415425, -0.005974866756398161, 0.0014627647360440181, -0.005830365548979609, -0.005488542072128672, -0.004441344068040325, -0.006452100893922555, -0.004339599968066904, 0.005309286791929428, 0.0042690518188077675, -0.0008824322320577447, 0.004645052122743374, 0.003388787668674708, 0.005494554797371369, 0.0027711243746693483, -0.0012614508795452623, 0.004356301177561688, -0.005062243129166052, -0.0024606901449954932, -0.0028343104812680675, -0.0007859187899890002, 0.0030348788714234993, 0.0037663487826845453, -0.00417517303386833, 0.0033978587062904646, 0.0036093388623143646, 0.0052237195101834345, -0.005137997563700916, -0.0031804644571344185, -0.005749153486044861, -0.004817017910896944, 0.003686754610472788, -0.0024446378299239936, 0.0045372781957218064, -0.002687013102083265, 0.0032574145839660913, -0.00230123803952489, -0.0043853996146551695, 0.004734932191294662, 0.0038945893167042756, -0.0006517993917430885, -0.0028069884114568316, -0.003308708445203948, -0.004525490969829722, 0.0020965089996551885, -0.004028988147646217, 0.0005978634442638214, 0.00451377841386133, -0.004040395556670843, -0.004256926054740396, -0.0013772870114084255, 0.003635165347557029, -0.0013773612763189036, -0.004169135284858194, 0.0028915857430886374, -0.002043448409882182, -0.0005529755208781431, -0.004701566988867034, -0.0020182557443966607, 0.0005386966201582871, -0.0025265215984234418, 0.0016505356271170966, 0.0016654637988660745, 0.0018988463444744772, -0.0031110798708598756, 0.0037520578757973527, -0.004137745066491666, 0.0022474007874068442, 0.0026970065017017353, 0.0016466349360331654, -0.0035479766990283586, -0.0004691482750225342, 0.002738281204871487, 0.0004665006986700558, 0.0025610836193619762, 0.001833363938495244, -0.0021272666486043504, -0.002346954444633322, -0.0036591866734916735, 0.0022299501619203804, 0.0004205566603426871, -0.0033601229226916667, -0.002504218392429752, 0.0022451815439349264, 0.002501555713269777, 0.002611422948578728, 0.0020353627559635233, -0.0031039387076719515, -0.0023849197011537628, 0.0029432824526671136, 0.0014374864300496098, -0.001860261035042886, 0.001912610573471579, -0.003334184938385705, -0.002741770130354161, -0.003049627221834685, -0.0017065800606914394, -0.0019494698556987615, -0.0016811299983343275, 0.0020656803577673096, -0.0019631474295468258, 0.0019509070233982467, -0.0021940776160312868, -0.001037193415269839, -0.001037267681709163, -0.002122116862349162, 0.0015251292260609133, 0.0020227909176413345, -0.0015397856526790815, -0.0021779954828572263, -0.001514592990293129, -0.002630466126810861, 0.001232014643600494, 0.0012469428149102586, 0.00029578107086829144, -0.0019702447509134437, -0.0002828991400653209, 0.0005957560060258186, 0.0002665667770233141, -0.00026675324711903183, 0.0011092830270928015, 0.0002648910936850261, -0.0012640966088362257, -0.0019188727398805772, 0.0018753601464183481, 0.001574206039162762, 0.000756377832698229, 0.000247403285329519, -0.002012688562087061, 0.0014208602444515414, 0.0007940355049758317, -0.0008690100488702974, -0.0008422809741491121, 0.0007734949175731766, -0.0008653574520779642, -0.0012883337489142945, -0.0008940824125111619, -0.0012623821370755677, 0.0016317976393680515, 0.0013064044738243785, -0.0011076343631951592, -0.00020863008495188406, 0.001021843403198803, 0.0010385930733283282, -0.0011422238033923428, 0.001330903638030631, -0.0017620054383579832, 0.0005486001819923, 0.0005404606414409003, 0.0016271479228876658, 0.0003613755294981192, 0.0008646571107319782, -0.0004790165656353766, 0.0003513386357127511, -0.0007646773279588508, -0.00017843814879298932, -0.0007572978685525469, -0.001131287235504472, 0.0011971482696103584, -0.00016428985489136392, -0.0011045766788539983, 0.0009087033941906682, 0.0008901322263694398, -0.0001565153008096279, 0.00015495575886363767, -0.0006243408597616601, -0.0006919990029428993, -0.001151822648596994, -0.0006814345393078639, -0.0002546962402603035, -0.001021382678690898, 0.0001346699116860006, -0.000994034661446464, 0.0005940760501261477, 0.0008179085608080813, 0.0007977862653776624, 0.0005735354647847496, -0.00012376066580861397, -0.000637669585685239, -0.00012291858266877062, -0.0008858404336991812, -0.00012262494474691449, -0.00031618954461275564, -0.0006244619836840221, -0.00011760424081450758, -0.0009389643787457731, -0.00011626489536116743, -0.00011504858724988479, -0.00011412399157447381, -0.0001165799082911041, 0.0005798445827887017, -0.0009111003893116127, -0.00011053154190047289, 0.0004083829566807912, 0.00040024341700266086, 0.0007498564838267882, 0.0007284534408968852, -0.0005950867020190044, 0.00026779678596765093, -0.00010540634634550065, -0.00010558124958490926, 0.0008842667252885999, 0.0008113836656506657, 0.00010359253396113816, -0.0005796770937461267, -0.0008742180674775581, 0.00025775988977112986, 0.000102807147204931, -9.883642831581828e-05, -9.767380473479823e-05, -0.000467908150587879, -9.750734740527864e-05, -0.0008459324427592571, 0.0006963977343715039, 0.0006739310958501605, 9.161580539913055e-05, -9.159838598865713e-05, 0.000494704350799072, 0.0008286238984617009, 0.00047294771430334335, -8.62571688093319e-05, 8.58159564792152e-05, -7.77322323657693e-05, -7.746136848663668e-05, 0.00033958988246333375, 0.0005457468236411103, 0.00032881926698220614, -7.302953789283393e-05, 0.0006676069980037422, 0.00021838333960221855, -7.104707423712708e-05, -6.986680489137535e-05, 0.00021359459011014082, 0.0004328373596894356, 0.00048544507298714485, 6.774355451645503e-05, 0.0004098646752475901, 0.00022359899660550129, -6.594918595553767e-05, -6.43116650272655e-05, -6.305722062463304e-05, 6.180625529615536e-05, -6.218683860851937e-05, -6.215372759563798e-05, 0.00029704334050121857, -5.7496395723898975e-05, 0.0002836416484145992, -5.6779838925805573e-05, 5.607752156984584e-05, 0.0003896300655498441, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 11) * (s_beta_s ** 3), ])


    coefficients_array = np.array([-0.32351165701799617, -0.011134259697374445, 0.009874835117626492, 0.007773620431984684, -0.006905082267152899, 0.006409077661861019, -0.005020915629129142, 0.0030429638855250314, -0.0030116551310663485, 0.0028905362901526124, -0.0023823967187409575, -0.0023731609352157135, 0.002224992628884972, 0.0017529988298125734, -0.0016800724640295482, 0.0015222151731527208, 0.0014164099648102696, -0.0012939546645135578, -0.0012073917267855997, -0.0011540300642753172, 0.0011246430924299882, -0.0010788340180846103, 0.0008829357144042997, 0.0007636243167812018, 0.0007540040931092404, 0.0007554479819164364, -0.0006958675051276786, 0.0006247631163751801, -0.000628867393213941, -0.0005791796435460764, -0.0005761159478532913, 0.0005521456316384074, 0.0004919113890994913, -0.0004388567072723246, -0.0004160218157726591, 0.0003897786934290795, 0.0003280985262494261, -0.00031740443448418845, -0.0003008274941191458, -0.0002708206186577261, 0.0002530202413917719, 0.00025450069747297137, 0.00023856321470939348, 0.00021881829754073775, 0.00020703849438137283, 0.00020837990840407003, 0.00020541877230784573, 0.0002074264559236988, 0.00019995353340957145, 0.00018557243696364038, 0.0001860039210396482, -0.00018284840438477078, 0.00016774725600081548, 0.00015798783893544076, 0.0001571632933858371, -0.00015516217042323792, 0.00015316718999920168, 0.00014594013240499618, 0.0001431633038127577, 0.00013594644164329587, 0.00013445721094341916, 0.0001369094082665992, 0.00012982670374118036, 0.00012748222682818004, -0.0001246638538741007, 0.00012228037900080521, 0.000123493273401568, 0.00012252168045185128, -0.00011738422918006329, 0.0001140549360868091, -0.00010668214308644134, 0.00010776561881753584, 0.00010513774604289767, 0.0001049928208524592, 0.00010348735796451307, 0.00010233659727198021, 0.00010284532928491614, 0.00010012528015741694, 9.815590078095846e-05, 9.037133658383047e-05, 8.577915405855538e-05, 7.722273868069039e-05, 7.711267484207463e-05, -7.181835339376272e-05, 7.266796470153574e-05, -7.22976178338586e-05, -7.001581162113013e-05, 6.863895214694824e-05, 6.119195592779905e-05, -6.095746989558909e-05, -5.918296814547316e-05, -5.512863520772077e-05, -5.65746002720284e-05, 5.3446534538689214e-05, 5.3607335879806116e-05, -4.866700564279631e-05, -4.977541677779025e-05, 4.698874735463427e-05, 4.5230043948009225e-05, 4.5234609523477285e-05, -4.357726818828666e-05, -4.247798236543615e-05, -3.3397051029069756e-05, 3.284236124022857e-05, 2.7470054121842034e-05, 2.58584107780441e-05, 2.4706577896721118e-05, -2.1719359513377178e-05, 2.0288574119044107e-05, -1.8805224688508864e-05, -2.5605936531162984e-05, -1.5470308770086816e-05, -1.5239636142810857e-05, -2.17045122605862e-05, -1.1478350216902542e-05, -1.1386880191899598e-05, -3.122345117442607e-05, -2.817676860851849e-05, -2.4726294536122973e-05, -1.858983457453294e-05, -2.1144031010994258e-05, 7.717525507542859e-06, 7.468280226159922e-06, 6.006316313030121e-06, -1.1150772189166748e-05, 5.908981223170965e-06, 1.4830449575155451e-05, 1.654282229319395e-05, 1.7119936451334347e-05, 1.7078957292521808e-05, 1.8156311688133884e-05, 1.715518668576029e-05, 1.360943816322271e-05, 1.0548950384149579e-05, 1.8238449122580205e-05, 1.7885470907738225e-05, 1.5370753254024178e-05, 1.638009490806566e-05, 1.198046575992742e-05, -2.8025545486664095e-06, 1.6421306351321387e-05, 1.605363367080864e-05, 1.3041595051656464e-05, 1.4153288321654303e-05, 1.4284816276820531e-05, 9.504796329249047e-06, 1.4005432460714099e-05, 1.090677280027086e-05, 1.2166659938866717e-05, 1.242029167406906e-05, -3.63821716523437e-06, 4.7832127881603234e-06, 4.348772872178435e-06, 1.2250476498171454e-05, 1.0524949841346331e-05, 9.112903803245091e-06, 7.159253496241854e-06, 1.0900553816489807e-05, 1.0836561145773073e-05, -5.1907049881489745e-06, 3.1088287540504477e-06, 5.1475425282996756e-06, 2.6986556716159394e-06, -2.7999761897397437e-06, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_alpha_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 6), (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 10), (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 10), (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[8] * c_harmonics_beta[14]), ])


    coefficients_array = np.array([0.5878740394046945, -0.02972644719005654, -0.03586757167717423, -0.02051767648331427, -0.022049643413980462, -0.012251738189071201, -0.022520178797573804, -0.012191907641744769, 0.019458006587669253, -0.023297279543854535, -0.009027034762964627, 0.016072197620861386, -0.01590966640666559, 0.014093982841081707, 0.010268440609394441, -0.006124344425271989, 0.009831836275292482, -0.01257029214054569, -0.015062056980806659, -0.016365514327554728, -0.010554031937776303, 0.005365426795930427, 0.01227185924892143, -0.007206268397089707, 0.00949133986769563, 0.011029426694235683, -0.010211099558733077, 0.006083074882675997, 0.006882631644502084, -0.011120715794192918, 0.0030237119520038153, 0.01134094509909561, 0.00851832696471131, -0.010170979542867747, 0.010732928472013962, 0.007297161044028227, -0.0027711881783268723, -0.0069875864359624515, 0.0077584965271902005, 0.0025870573227929727, 0.008004109447921888, 0.00753059819849255, 0.006426783719263696, -0.0029139385132643594, -0.006497045646817171, 0.007110066875257703, -0.003921393861942066, -0.0056385269366537, -0.007751613330047512, -0.005629927206414577, 0.0063875448124378915, 0.005921365878326542, 0.008036348571882535, -0.007165244267561068, -0.006608406963249244, 0.006503928842307657, 0.008266846530928237, 0.0076588299029089505, 0.005368368204009545, -0.006267128074932784, -0.004949814920940508, 0.0052407939065151265, -0.005113671966633767, -0.006199689620520319, 0.007173914322972027, -0.003933905186839012, 0.005860192178435001, -0.006948465618294356, 0.005134415141413131, -0.003923454893963829, 0.002160251953355034, 0.004497472119526243, 0.006079642926876918, -0.006040696101093738, 0.003147253385025178, -0.004730900890459134, -0.003921582292445128, -0.001179360545778094, 0.0045507810986167106, -0.003951560261149843, 0.00687671110869132, 0.004109529212090382, 0.0010693146772749417, -0.004140289654097922, 0.0036542520217002668, -0.004387536362021399, 0.0059748667563216985, -0.0014627647357022232, 0.005830365548947535, 0.005488542072127726, 0.004441344068073623, 0.006452100893894367, 0.004339599968034233, -0.005309286791916473, -0.004269051818714165, 0.0008824322320497304, -0.004645052122771809, -0.003388787668605476, -0.005494554797391931, -0.0027711243746258896, 0.0012614508796996273, -0.0043563011773847075, 0.005062243129142127, 0.0024606901449248154, 0.0028343104812584724, 0.0007859187899933673, -0.0030348788712680637, -0.0037663487829288174, 0.004175173033956347, -0.00339785870624625, -0.0036093388623132405, -0.005223719510154776, 0.0051379975637805735, 0.0031804644571489043, 0.005749153486119955, 0.004817017910947324, -0.0036867546104186657, 0.002444637829835469, -0.004537278195786137, 0.002687013102076977, -0.0032574145840740727, 0.0023012380394812054, 0.004385399614662386, -0.004734932191284159, -0.003894589316797812, 0.0006517993917430962, 0.002806988411552262, 0.0033087084452054156, 0.004525490969723898, -0.002096508999615101, 0.0040289881476764785, -0.0005978634442629011, -0.00451377841379242, 0.00404039555666142, 0.004256926054752306, 0.001377287011313254, -0.0036351653475221123, 0.0013773612763377558, 0.0041691352848002875, -0.00289158574319126, 0.002043448409909348, 0.0005529755208755858, 0.004701566988864578, 0.0020182557443658438, -0.000538696620158335, 0.0025265215983515535, -0.0016505356270932782, -0.0016654637988103777, -0.0018988463444604275, 0.003111079870729201, -0.003752057875889287, 0.004137745066524214, -0.002247400787241766, -0.002697006501720954, -0.0016466349360420257, 0.0035479766990598326, 0.00046914827502708033, -0.002738281204935962, -0.0004665006986700721, -0.0025610836193716855, -0.001833363938572783, 0.002127266648676078, 0.002346954444556324, 0.003659186673424968, -0.0022299501619949284, -0.0004205566603321855, 0.003360122922779909, 0.0025042183923531295, -0.0022451815439020525, -0.0025015557132463634, -0.0026114229486084604, -0.0020353627560527015, 0.0031039387077005484, 0.0023849197013483254, -0.0029432824526267965, -0.0014374864301229344, 0.001860261034958271, -0.0019126105736156313, 0.0033341849382704306, 0.002741770130250499, 0.003049627221887551, 0.001706580060836187, 0.001949469855504966, 0.001681129998269493, -0.00206568035782077, 0.0019631474295044916, -0.001950907023384046, 0.0021940776159905372, 0.0010371934152669708, 0.0010372676816835678, 0.0021221168623885675, -0.001525129226112264, -0.0020227909177038235, 0.0015397856526414065, 0.0021779954828872023, 0.0015145929902727147, 0.00263046612672585, -0.001232014643564225, -0.0012469428149243698, -0.00029578107086673474, 0.0019702447509007464, 0.0002828991400650926, -0.0005957560059537801, -0.0002665667770233164, 0.00026675324711875547, -0.0011092830270135567, -0.00026489109368481187, 0.0012640966088907656, 0.001918872739884774, -0.0018753601463824367, -0.0015742060391612546, -0.0007563778326792232, -0.0002474032853295003, 0.002012688562178148, -0.0014208602444979175, -0.000794035504956856, 0.0008690100489105357, 0.0008422809741009615, -0.000773494917550692, 0.0008653574521116353, 0.0012883337489477458, 0.0008940824124764266, 0.0012623821370712726, -0.001631797639396193, -0.0013064044738155434, 0.0011076343631481436, 0.00020863008495228266, -0.0010218434031914626, -0.0010385930733435309, 0.0011422238033643533, -0.0013309036380268328, 0.001762005438447846, -0.0005486001819956871, -0.0005404606413891361, -0.0016271479229145902, -0.00036137552947416, -0.0008646571107903646, 0.00047901656554335, -0.0003513386357217985, 0.0007646773279301084, 0.00017843814879299344, 0.0007572978684836604, 0.0011312872354938845, -0.0011971482695805043, 0.00016428985489136405, 0.0011045766788488646, -0.000908703394184735, -0.0008901322263877557, 0.0001565153008045436, -0.00015495575886379244, 0.0006243408598461481, 0.0006919990029501447, 0.0011518226486207485, 0.0006814345392676329, 0.0002546962403678706, 0.0010213826786852759, -0.00013466991168816988, 0.0009940346614485225, -0.0005940760501807645, -0.0008179085608075498, -0.000797786265376324, -0.0005735354647652154, 0.0001237606658090129, 0.000637669585664364, 0.00012291858266878458, 0.0008858404335877501, 0.0001226249447469135, 0.0003161895446799673, 0.0006244619836990229, 0.00011760424081451002, 0.0009389643787384244, 0.00011626489536116696, 0.00011504858724998706, 0.00011412399157447951, 0.00011657990829110254, -0.0005798445826996406, 0.0009111003893405656, 0.00011053154190048537, -0.0004083829566954875, -0.0004002434170307898, -0.0007498564838289155, -0.0007284534409019475, 0.0005950867020113755, -0.0002677967859826351, 0.00010540634634549632, 0.00010558124958513501, -0.0008842667253107291, -0.0008113836656188575, -0.00010359253396096649, 0.0005796770937554617, 0.0008742180674875957, -0.00025775988969208485, -0.00010280714720492791, 9.883642831432684e-05, 9.767380473465939e-05, 0.0004679081507322679, 9.750734740528252e-05, 0.0008459324427490118, -0.000696397734341915, -0.0006739310958696275, -9.161580539914856e-05, 9.159838598869272e-05, -0.0004947043508226863, -0.0008286238985097689, -0.00047294771431929467, 8.625716880933283e-05, -8.581595647923187e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), 1, (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (s_alpha_s ** 4), (s_alpha_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (s_alpha_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 10), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (s_alpha_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (s_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (s_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_beta_s ** 6), (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 10), (s_alpha_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (c_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 12), (s_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[13]), (c_harmonics_alpha[9] * c_harmonics_beta[11]), (c_harmonics_alpha[9] * c_harmonics_beta[1]), (c_harmonics_alpha[9] * c_harmonics_beta[7]), (c_harmonics_alpha[9] * c_harmonics_beta[3]), (c_harmonics_alpha[9] * c_harmonics_beta[5]), (c_harmonics_alpha[9] * c_harmonics_beta[9]), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[15]), (s_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (s_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[1]), (c_harmonics_alpha[8] * c_harmonics_beta[7]), (c_harmonics_alpha[8] * c_harmonics_beta[3]), (c_harmonics_alpha[8] * c_harmonics_beta[5]), (c_harmonics_alpha[8] * c_harmonics_beta[11]), (c_harmonics_alpha[8] * c_harmonics_beta[13]), (c_harmonics_alpha[8] * c_harmonics_beta[9]), (c_harmonics_alpha[8] * c_harmonics_beta[15]), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[7]), (c_harmonics_alpha[15] * c_harmonics_beta[1]), (c_harmonics_alpha[15] * c_harmonics_beta[3]), (c_harmonics_alpha[15] * c_harmonics_beta[11]), (c_harmonics_alpha[15] * c_harmonics_beta[13]), (c_harmonics_alpha[15] * c_harmonics_beta[5]), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[9]), (c_harmonics_alpha[15] * c_harmonics_beta[15]), (s_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[7]), (c_harmonics_alpha[10] * c_harmonics_beta[11]), (c_harmonics_alpha[10] * c_harmonics_beta[13]), (c_harmonics_alpha[10] * c_harmonics_beta[3]), (c_harmonics_alpha[10] * c_harmonics_beta[5]), (c_harmonics_alpha[10] * c_harmonics_beta[1]), (c_harmonics_alpha[10] * c_harmonics_beta[9]), (c_harmonics_alpha[10] * c_harmonics_beta[15]), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[13]), (c_harmonics_alpha[2] * c_harmonics_beta[11]), (s_alpha_s ** 2) * (c_beta_s ** 9), (s_alpha_s ** 12) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[15]), (c_harmonics_alpha[2] * c_harmonics_beta[9]), (c_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[3]), (c_harmonics_alpha[6] * c_harmonics_beta[5]), (c_harmonics_alpha[6] * c_harmonics_beta[7]), (c_alpha_s ** 2) * (c_beta_s ** 9), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[11]), (c_harmonics_alpha[6] * c_harmonics_beta[13]), (c_harmonics_alpha[2] * c_harmonics_beta[7]), (c_harmonics_alpha[6] * c_harmonics_beta[9]), (c_harmonics_alpha[6] * c_harmonics_beta[15]), (c_harmonics_alpha[6] * c_harmonics_beta[1]), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[14] * c_harmonics_beta[13]), (c_harmonics_alpha[14] * c_harmonics_beta[11]), (c_harmonics_alpha[14] * c_harmonics_beta[1]), (c_harmonics_alpha[14] * c_harmonics_beta[7]), (c_harmonics_alpha[14] * c_harmonics_beta[3]), (c_harmonics_alpha[14] * c_harmonics_beta[5]), (c_harmonics_alpha[14] * c_harmonics_beta[9]), (c_harmonics_alpha[14] * c_harmonics_beta[15]), (c_alpha_s ** 2) * (c_beta_s ** 5), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[13]), (c_harmonics_alpha[12] * c_harmonics_beta[11]), (c_harmonics_alpha[12] * c_harmonics_beta[1]), (c_harmonics_alpha[12] * c_harmonics_beta[7]), (c_harmonics_alpha[12] * c_harmonics_beta[3]), (c_harmonics_alpha[12] * c_harmonics_beta[5]), (c_harmonics_alpha[12] * c_harmonics_beta[9]), (c_harmonics_alpha[2] * c_harmonics_beta[5]), (s_alpha_s ** 2) * (c_beta_s ** 5), (c_harmonics_alpha[12] * c_harmonics_beta[15]), (c_harmonics_alpha[4] * c_harmonics_beta[13]), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[13] * c_harmonics_beta[7]), (c_harmonics_alpha[13] * c_harmonics_beta[1]), (c_harmonics_alpha[13] * c_harmonics_beta[3]), (c_harmonics_alpha[13] * c_harmonics_beta[5]), (c_harmonics_alpha[13] * c_harmonics_beta[11]), (c_harmonics_alpha[13] * c_harmonics_beta[13]), (c_harmonics_alpha[13] * c_harmonics_beta[9]), (c_harmonics_alpha[4] * c_harmonics_beta[11]), (c_harmonics_alpha[4] * c_harmonics_beta[15]), (c_harmonics_alpha[13] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (c_beta_s ** 13), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[9]), (s_alpha_s ** 4) * (c_beta_s ** 13), (c_harmonics_alpha[11] * c_harmonics_beta[7]), (c_harmonics_alpha[11] * c_harmonics_beta[1]), (c_harmonics_alpha[4] * c_harmonics_beta[7]), (c_harmonics_alpha[11] * c_harmonics_beta[3]), (c_harmonics_alpha[11] * c_harmonics_beta[5]), (c_harmonics_alpha[11] * c_harmonics_beta[11]), (c_harmonics_alpha[11] * c_harmonics_beta[13]), (c_harmonics_alpha[11] * c_harmonics_beta[9]), (c_harmonics_alpha[4] * c_harmonics_beta[5]), (s_alpha_s ** 4) * (c_beta_s ** 9), (c_harmonics_alpha[11] * c_harmonics_beta[15]), (c_harmonics_alpha[4] * c_harmonics_beta[3]), (s_alpha_s ** 10) * (c_beta_s ** 10), ])


    coefficients_array = np.array([-0.3667421213551866, -0.18915555448341148, -0.1775865668731874, 0.10212797073480627, -0.13054679290033155, -0.11897780537059618, -0.10077702815294903, -0.09013880873699813, -0.08275885465490179, -0.07305140342844413, -0.03064068503586361, -0.07067999726988101, 0.026530793653640843, -0.0617762734354728, -0.06201488286023381, -0.0664773329674233, -0.06448026819810761, -0.05378784551711905, -0.05549032790935339, 0.04363467670588704, 0.043085661586111094, -0.04688213872047031, -0.04533648217103235, -0.047833730121560586, 0.05252440511151201, 0.05019563646305743, 0.03952648371692658, 0.03897746867411419, -0.011568987602409608, -0.045195697994951586, 0.020687194897594276, -0.04319863320762927, 0.03749203376925816, 0.018643152570736593, 0.03690372573941724, 0.024387877244185657, 0.04367957158613952, 0.022343834950926976, 0.026120432126915036, 0.04135080286218995, 0.035820194136699554, -0.008179851185982228, 0.024311962553332442, 0.03519259314842746, -0.02971780626805469, -0.028172149679368184, 0.026640240415205893, 0.02506734339285531, 0.03432507832305552, 0.0336673470867093, -0.03451704247768981, 0.026571386223977644, -0.023276592437497082, 0.039204676356162295, -0.03259565378254956, 0.02519864013289482, -0.006399565307176684, 0.0329728642296612, 0.03698086445585076, -0.02105820741328145, 0.026219443065032193, 0.03229416554450556, 0.025011426140127673, 0.031747559936816015, 0.025734150518080996, 0.024661535525845768, 0.036143327321474183, 0.03105521835404849, 0.03402447221941697, -0.028128332693220737, 0.001999840792792668, -0.021116180395573222, -0.026282620152866688, 0.033794106557599624, 0.004534550442622555, -0.01960944302795341, 0.031769497879222834, 0.031887753066730126, 0.00394887759304179, -0.02388786254906246, 0.029946680426898752, -0.022111292674312326, -0.003549625843484369, -0.0035211904249871665, 0.030288910957409574, 0.0033233035072362397, 0.028422114877324337, -0.01607564676197474, -0.0030694305997180523, -0.020871100913686744, -0.014607828656720435, -0.013343858225628448, -0.01915714021486477, -0.018615410596376773, -0.011125473182064475, -0.016958268725126683, -0.012816388466072118, -0.0021358133302273826, -0.011386031144288076, -0.001939619723860003, -0.002057403893524206, -0.0014943993415207023, 0.0018559690813902542, 0.0025761190311724097, -0.010561347854834997, 0.0016437092583284948, -0.009166992815272206, -0.008330171811789975, -0.008922045176692876, 0.0013235740567878393, 0.004696187860687163, -0.007562135666592901, -0.006206425383411303, 0.004393406800926998, 0.0017944967138608474, -0.0010022575384438402, -0.0010122889522224227, -0.0009829109663098178, -0.0009743803145824861, 0.0009573624927999832, -0.0018535301857605718, -0.002709642477797092, -0.005447414577920759, -0.0027860899283120503, 0.0012629838568383454, -0.0008157623486896598, -0.002375837198587446, -0.002466785754038356, 0.0007475737373245769, 0.0035829858713220947, -0.000710896028928021, 0.0006944243220155283, -0.0005470777523488093, 0.0006570793143111501, 0.0032802048115207743, 0.0006343272423882927, 0.0010125470333075509, -0.001028930126313002, 0.0023202823070864955, 0.0005854342460009925, -0.001248961693860459, -0.0034183067514519036, -0.0005310401420002495, -0.000528911057646462, -0.0036347262640663066, -0.002047450830878133, 0.0005096070245972348, 0.0014467344962614697, -0.0021044805827272767, 0.0029343335886977706, 0.0028156550917128823, -0.0005071126509458555, -0.00046096889895956664, -0.0011856473384887888, 0.0004480785747542101, 0.00045830638830021903, -0.0017136455600622895, 0.000733284340344613, 0.0016238670675078116, -0.0012464732874651239, -0.001785176390976566, -0.0013180697726404116, 0.0008614236249892215, 0.002743171329329294, 0.0005088115821297527, -0.0007503975650259914, -0.0008378416364498032, 0.0011293845373893524, -0.0008084422445703229, 0.00036100589653797853, 0.0003599975819838252, 0.001071245193335583, -0.001655497563987198, 0.0003436979232993833, 0.0017128728948706394, -0.000991783740109433, -0.0017917969645890655, 0.0003428894580131017, -0.0016907433670348962, -0.000827059419679489, 0.002203033278834563, -0.00032098008917777726, -0.002420527789152651, 0.0010382771771507422, 0.0027879138876753386, 0.0006695740588738889, 0.00031191432511207446, 0.00030642598306544175, 0.0003054422340704067, 0.00238752704634904, -0.001443407176848019, -0.0017874512142307276, -0.0011911607366633316, 0.00048185236275699584, -0.001709921198544295, -0.0015173042668996247, 0.0007506907679098735, -0.0004654692775118127, 0.0011226317557121227, 0.000281012342792486, 0.00028232712362762514, -0.00122132178103917, 0.0002787316441001184, 0.00027362632993074555, 0.00027182847956215344, -0.0010441613181449518, -0.0006792547367818107, -0.0009055099808085526, -0.001695773852120185, -0.00025490558468090535, 0.002088668078306876, 0.0002511037143469787, 0.0019096024787409293, -0.0016910484308011256, 0.0003236931176775651, 0.00024035594057707522, 0.00023708553488430213, 0.0020207061349396087, 0.00023730698564826313, 0.00023029445566701486, -0.0007996898799335845, 0.0007658944976608969, 0.00023087747866502655, 0.0002293496801851116, 0.0015858298253555302, 0.0007562195351550438, -0.0010214657856002587, 0.00021292576104830048, 0.00020977895053796947, -0.0008093688404773734, -0.0002072908918165766, 0.0012683351599854598, 0.0005845401269457098, 0.0008052817995334728, -0.001031139985479955, 0.0010164576608588077, 0.0001965516824580903, 0.00019207232093816507, -0.00156843292149308, -0.0010338109624193834, 0.001748330191227916, -0.0005512642863082041, 0.000755884589768622, 0.0009188365327894518, -0.0011212687845788636, 0.001024080444397585, 0.0008114951557854442, -0.0007187728181009755, -0.00018189317952397118, -0.0011698202824112327, -0.0012536565445833174, -0.0011272043282859546, -0.0007178305046953635, -0.001036837300696041, 0.00017075224376674082, 0.00017024170973387417, 0.0001727116609854381, 0.0013142497833887484, -0.0001681777381398695, -0.0012100017444608235, -0.0011047593974769787, -0.0011579369712508146, -0.0012741004031792426, -0.0005241488018471956, -0.0005469220690092815, -0.0008154477072844855, 0.00033072897989390616, 0.0001508083377642247, 0.0005063897530090416, 0.0006849742926913333, -0.0007441993994276911, 0.0008535859792446075, -0.00048618019600465555, -0.00048528664261450266, 0.0001335536879927995, 0.0003452182686724075, 0.00013195738291640994, 0.0008094407171225016, -0.0003801540491684106, 0.0007792697309029059, -0.000274380787149124, 0.00012386508271134786, 0.0006641653206282597, -0.000870153498493362, 0.0005330858734671931, 0.0002618208076469742, -0.00043854012855144625, 0.0005294375057889089, -0.0004176586762598531, 0.00011614111261207996, 0.00029033847039725485, -0.0005498492275417683, -0.0005806552379454295, -0.00011070212805023174, -0.00011347121157025235, -0.0005284515232529675, -0.0008687246286507423, 0.0001106242723962405, -0.000454464172522065, -0.00067753627475341, -0.00010901087860982366, 0.00010760073557707214, 0.00010720463500845252, 0.00010372365824304359, -0.0006328322065773445, -0.0005208346120636133, -0.00042740080384891867, 9.826815222721417e-05, 9.742982799298951e-05, 0.0008056464045050616, 0.0008225891120541721, 9.398655366289311e-05, 0.0004530472434518589, 9.292676513949207e-05, -0.0004392239078358278, -0.0001671031966339692, -0.00024187918367201447, 0.00032175777799178123, 0.0006003845346443991, 0.0003033143935113759, 0.00044998532636627994, -0.00032484149505806754, -0.00047518881734285066, 0.00029804221444226786, 8.089351039282243e-05, -8.114129114438405e-05, 0.000525537448669246, -0.000378816356277283, -8.110780055297043e-05, -0.00044247104761998527, -0.0004898530614612819, 0.0005186669494443295, -0.0001404979121810793, -0.0004935405466686577, -0.0005530712675102326, -0.0005234909808414749, 7.232434402244568e-05, 6.988442281948949e-05, -0.00048320394940345947, -0.0004347976533055025, 0.00019173866440439684, -6.319812069368359e-05, 0.00017678688204909965, -5.990389370596432e-05, -0.0005614313730464398, -0.0002654187813012731, -0.0002113169800721224, -5.4892742476515e-05, -0.00046790987779265906, 0.00023037271248730387, -0.0004642847297083018, 0.00027937257627456356, 0.000169903326568335, -0.0001755376093879561, -4.876462091910769e-05, 0.0003515853412929513, -4.799699148690501e-05, 0.0003494107586664543, -0.00024451410919767026, 4.541873038540742e-05, 4.540997744804826e-05, 0.00021096493157369374, 0.0004059684231547841, 0.00023900600761502628, 4.412992505950767e-05, 4.359776289751812e-05, 4.329071714248961e-05, 0.0003114656695084546, -0.00024226136996539818, 4.086222792034959e-05, 4.073346356437999e-05, -0.0003199184246609166, -0.0001931789640813502, -3.992729665731481e-05, -3.992405173485273e-05, -3.9923877440371815e-05, -3.990010250365301e-05, -3.9911954793761196e-05, -3.9906395920399364e-05, -3.9911895360449564e-05, 0.00018673311576250786, -3.992760123282452e-05, -0.0002599946088522602, -0.0003018936352216122, 3.305503184967284e-05, 0.0002195609429871507, -3.276620812949774e-05, -0.00019384512581686395, -0.00012362194146271551, 0.0002308176712015889, -0.00013614519218370282, -2.7186675716790654e-05, -0.0001560515130009646, -0.0002219144153371993, -2.47304796525662e-05, -2.469620268192519e-05, -2.4693174978514383e-05, -2.4683378546056897e-05, -2.4584245182057735e-05, -2.4569711421177947e-05, -2.463919321054612e-05, -2.4568351407784296e-05, 2.3126080359227267e-05, 2.3045983855025417e-05, 2.304232960437731e-05, 2.304233089775127e-05, 2.302128005744233e-05, 2.301801875112853e-05, 2.30419094211788e-05, -0.0001765880215982123, 2.3033563597991716e-05, 2.3017713172439598e-05, 0.0001713525182818031, -6.342897668282187e-05, 0.00010461052757270476, -9.915204334628828e-05, 0.00010242714258579173, -0.0001160445015406539, -6.906732408483368e-05, -1.4530593090803994e-05, -1.4505760839690483e-05, -1.4502481371628875e-05, -1.451186804655503e-05, -1.4524676266909029e-05, -1.4455042799040187e-05, -1.4518130715513558e-05, -1.4502174368660174e-05, 0.00010507683279475532, 6.235181814841626e-05, 4.6856243531207556e-05, 4.4213800024569214e-05, 4.303563286664329e-05, 6.885209583248379e-05, 1.1354254249437206e-05, 1.1325109520587168e-05, -3.525016020144866e-05, -8.904024890532542e-05, 1.135623343272377e-05, 1.1126935271344192e-05, -5.705134116792497e-05, -8.785977718986074e-05, -1.0503493988471598e-05, -1.0494317284271832e-05, -1.0417290116217207e-05, -3.2155419264245364e-05, -7.906166089230592e-05, -1.0345181681113806e-05, -1.0340480393792745e-05, 1.0300918630354778e-05, -1.0367175582718027e-05, -1.034007812130393e-05, -9.81861208369913e-06, -3.261015321200226e-05, 9.150222713422625e-06, 9.146961441301844e-06, 9.126522973417605e-06, 9.12226331855876e-06, 9.126074467114614e-06, 9.126367309949387e-06, 9.13467848726293e-06, 9.150528292839168e-06, 2.09735911775989e-05, 5.99162295858054e-05, -8.173394818650207e-06, -2.152509634032701e-05, -3.1624759997396885e-05, 8.0373821109379e-06, 8.03389917995896e-06, 8.013530574965505e-06, 8.007578956291101e-06, 8.012434791097374e-06, 8.012165838851473e-06, 8.020787242499277e-06, 7.947647660349712e-06, 1.8856546807048378e-05, 8.037708506700443e-06, 7.835584849498448e-06, -3.239117603247839e-05, 7.757519966627408e-06, 7.753832447454668e-06, 7.75385279571457e-06, 7.75344205891456e-06, 7.732817156169136e-06, 7.72955586699936e-06, 7.745100550351328e-06, 7.673454175652813e-06, 7.850708635434531e-06, 7.729250289892714e-06, 3.627200309601538e-05, 4.336239308841706e-05, 7.054646292665635e-06, 3.2451392754684276e-05, 6.378606961847094e-06, 6.373492340632918e-06, 6.368914199665535e-06, 6.374351855784591e-06, 6.374372749036695e-06, 6.353955798945669e-06, 6.350695594156615e-06, 6.366230635827472e-06, 6.319923845749628e-06, -2.6195852232676054e-05, 6.350390081768072e-06, 5.712201053871249e-06, -3.7914910821280895e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_alpha_s ** 11) * (s_beta_s ** 5), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), ])


    coefficients_array = np.array([-0.2155798165761644, -0.19076208444762016, -0.13570876699224754, -0.12775767069173077, -0.11399434134706832, -0.09010291063209028, -0.07397025454495194, 0.03560776061476358, -0.06932614619680996, 0.02917730967435484, -0.05822678033350552, -0.05319841120169851, -0.05624126463382538, 0.018463670637449758, -0.04729121435406507, -0.040728156243488994, -0.040810654202994415, -0.03554209668890502, -0.03252749614620353, -0.03207394701107234, -0.009281793599877923, -0.026785216836124743, -0.023616235651873263, -0.019094614842739745, -0.00534579586790799, 0.005134607577998268, -0.016443497005527784, -0.015659500323339855, 0.003261869560021264, -0.011641479178948803, -0.011752772054331102, -0.0025576627778914514, -0.008503932673828509, -0.007349112915995291, 0.0017536397443778957, -0.006955907467130351, -0.001699625404912334, 0.0015748547687511895, -0.006111967191013723, 0.011204347865162546, 0.010332827450086934, 0.010154660737839069, 0.01107007407884641, 0.01177333964285312, 0.009044949977607668, 0.009769399043595845, 0.008787943455125933, 0.008211447684964875, 0.007159083534844519, 0.0073300196155110355, 0.006744627426224019, 0.005971193911762192, -0.0009576131303277001, -0.000907207589992228, 0.0009077118101944109, -0.003822663400257987, 0.004354654964501438, 0.004428127216753729, -0.0007421672995125025, 0.0007503461533435138, -0.0007145393428065978, 0.0038226552521413945, -0.0006214983907486578, -0.0006151568120974345, 0.0005726254108076361, -0.002542254155867853, 0.0005265193345602781, 0.002379321370783864, 0.0024713400481874647, 0.0004386117605838863, 0.0004176494224550437, 0.00040479514997249585, -0.00037204169694444143, 0.0003420559876645157, 0.0003411949698395075, -0.0003247607611945045, 0.00031069944987535436, 0.0002590406537548386, 0.00025308893256025336, -0.00024886512211171004, -0.0002569696019058561, -0.00023804867918525516, 0.0002203455577108712, -0.0002205701246949812, -0.00021326224690446484, 0.00020755629477112715, 0.00019874909417848472, 0.00018636373319457782, -0.00018481128116108408, -0.00018517754045712146, 0.00018022205927576622, -0.00018230489202881165, -0.0008203912620181002, -0.00017740610807307722, -0.0001799802095961336, 0.00017947382817463015, -0.00017049366928483577, -0.00015833227206043097, -0.0001481882214228979, -0.00014218201786372675, -0.00013439727649718037, -0.00013262283699277792, -0.00012892688269216433, -0.00012576028522645353, -0.00012342141890382785, -0.00012245780285408155, -0.00012262258750652717, -0.00011955578861439089, 0.00011417329882779781, 0.00011205287260861222, -0.00011016304280564508, 0.00010651577484000968, 9.948568204078056e-05, 9.931581410632645e-05, -9.879241010087196e-05, -0.0001007155966503248, -9.898319771035907e-05, 0.00047372852386474713, 8.34286594471495e-05, -8.252836353052786e-05, -8.133915303195645e-05, -7.944157205128965e-05, -7.606528959466826e-05, 7.291692076501356e-05, -6.927978988170715e-05, -6.957425419280033e-05, -6.776501738716118e-05, -6.943598651387825e-05, -6.199191561991853e-05, -6.091234171321878e-05, -6.058034867098012e-05, 5.997183552436837e-05, 0.00026095459853644587, -5.349766843396448e-05, -5.4091667976965144e-05, -5.311140651212399e-05, -5.170116944150535e-05, -4.820263362280706e-05, 4.836041248176308e-05, -4.3447921247761635e-05, -4.075306351559125e-05, 3.997803755626032e-05, -4.009428881298435e-05, 3.6315981224828576e-05, 3.308798901274444e-05, 3.1579934475515364e-05, -2.9243734858805417e-05, 2.7292256347032474e-05, 2.7296642363802833e-05, 2.7165595463964824e-05, -2.6124673520372265e-05, -2.5966598290529046e-05, 2.3914706471163588e-05, 2.3868204011709096e-05, 1.9560478897177714e-05, -1.7327902958685093e-05, -1.6752617127002866e-05, -1.6556356392098296e-05, 1.171847215385516e-05, 1.0934379128842043e-05, 1.0048121556951241e-05, -9.991932167553062e-06, -9.575009439004739e-06, -5.8715231065605675e-06, 5.770840206397663e-06, -2.402927941917478e-06, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_False_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_beta_s ** 2), (s_alpha_s ** 2), (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_beta_s ** 10), (s_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (s_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 9) * (c_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 1), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 12), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (c_alpha_s ** 3) * (s_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 9) * (c_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 9) * (c_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 9) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 8), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_alpha_s ** 9) * (s_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 11) * (s_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 1) * (s_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 2) * (c_beta_s ** 13), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (c_beta_s ** 9), (s_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (c_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 5), (s_alpha_s ** 2) * (c_beta_s ** 5), (c_harmonics_alpha[9] * c_harmonics_beta[7]), (c_harmonics_alpha[9] * c_harmonics_beta[3]), (c_harmonics_alpha[9] * c_harmonics_beta[1]), (c_harmonics_alpha[9] * c_harmonics_beta[5]), (c_harmonics_alpha[9] * c_harmonics_beta[11]), (c_harmonics_alpha[9] * c_harmonics_beta[13]), (c_harmonics_alpha[9] * c_harmonics_beta[9]), (c_harmonics_alpha[9] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (c_beta_s ** 13), (s_alpha_s ** 4) * (c_beta_s ** 13), (c_harmonics_alpha[7] * c_harmonics_beta[3]), (c_harmonics_alpha[7] * c_harmonics_beta[1]), (c_harmonics_alpha[7] * c_harmonics_beta[5]), (c_harmonics_alpha[7] * c_harmonics_beta[7]), (c_harmonics_alpha[7] * c_harmonics_beta[11]), (c_harmonics_alpha[7] * c_harmonics_beta[13]), (c_harmonics_alpha[7] * c_harmonics_beta[9]), (c_harmonics_alpha[7] * c_harmonics_beta[15]), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[13]), (c_harmonics_alpha[10] * c_harmonics_beta[11]), (c_harmonics_alpha[10] * c_harmonics_beta[7]), (c_harmonics_alpha[10] * c_harmonics_beta[3]), (c_harmonics_alpha[10] * c_harmonics_beta[1]), (c_harmonics_alpha[10] * c_harmonics_beta[5]), (c_harmonics_alpha[10] * c_harmonics_beta[9]), (c_harmonics_alpha[10] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (c_beta_s ** 9), (s_alpha_s ** 4) * (c_beta_s ** 9), (c_harmonics_alpha[13] * c_harmonics_beta[4]), ])


    coefficients_array = np.array([0.060416439250599606, 0.019134376353713, -0.011853693138325244, 0.013493546933772105, 0.011225951226538265, -0.01821888636881984, 0.010899406473980957, -0.01803100403618765, -0.010605824082113056, 0.019393222616875788, -0.01889472542793524, 0.020802713549830373, -0.007988776162442826, 0.012769183133628242, 0.016290272600787914, -0.00673018313218121, 0.018885778926851424, -0.0093300554855746, 0.015808041718053535, -0.014504562320400524, 0.015145698814115644, -0.00932217416861275, 0.009886282692205936, -0.007440075080947133, -0.006557136891677692, -0.014293636322455495, 0.00879243747468323, -0.015312738981904312, 0.013850187907705954, -0.008510958904760342, 0.006365193223097674, -0.010804259616295404, 0.010378933609763438, 0.007804192772983677, 0.013843334201362996, -0.010133146597653178, -0.013049251295676512, 0.008894931204290944, 0.01252389930626082, -0.008854542341763697, -0.012891011826564071, 0.008264095000232757, -0.005880480342886357, -0.01060493856059126, -0.013402873080256667, 0.00517028803222197, 0.00885551606807978, 0.005689354162728015, -0.00930000957385611, 0.008330313506993368, 0.0030762955210648624, 0.008783819193488664, -0.005818635684793637, -0.0111393853909148, -0.007373822645529439, -0.007345985349841342, 0.00736758154441229, -0.007841035584476515, 0.010713280714449947, 0.0019252886084602423, 0.007843621878864615, -0.01178550754198143, 0.00890332006307829, 0.00790955644265854, -0.0067148138707159065, -0.009874410961888836, -0.008903245406995537, -0.010846885027332715, 0.009250690829368607, -0.012272242041188874, -0.005486520604383074, -0.007920277783933267, 0.007731786715565133, 0.00530916154343456, -0.004185817558335916, 0.008546355780020639, 0.007214052156616755, -0.007115598010709986, -0.0027555410684772697, 0.008768521109268273, -0.011514872947595204, -0.005242221026964087, 0.008086147531675063, 0.0055498884110666835, 0.006029702772715713, 0.0017678916250518971, -0.0013414345881911697, 0.005034196102296879, 0.004403770997190489, 0.001375323798476406, -0.0051417827452123355, 0.001216190934967891, -0.003992991590033731, 0.007687226594255515, 0.0011960206966113555, -0.007778351392297646, -0.008131509330121302, -0.004146062920076273, -0.009793557057885422, -0.006592122992107723, 0.007194453302887054, -0.006478714548414317, -0.0033743435873049518, -0.0037373677173111125, 0.003882583360133192, -0.006574703260834016, 0.005068321882697238, 0.00471427988765456, -0.00318279330638435, -0.007506799236685683, -0.0034470834908812533, 0.0028810984868643547, -0.0055845146705643875, -0.004546847063847883, 0.005912158947605283, 0.005436103534079438, -0.003469961392281435, 0.004620912112536534, 0.002944922110021239, -0.004665135673007963, -0.005279589133475422, 0.003636029283926361, -0.006500849599851204, 0.004040517356139447, -0.000847810010751586, 0.0008216221766532932, -0.007532820773391232, -0.007189778934133203, -0.0007885843937005828, 0.005319222149736562, -0.00606169789272118, 0.003002397884840158, 0.005334127067608837, -0.006235062654041639, -0.005034973149392504, -0.003948719597360777, 0.0037864043794175787, -0.0026034894826411407, 0.0037708065486223704, -0.0025646777671915547, -0.0045673742507924475, -0.005284606293837747, 0.0038546119232280383, 0.004726451585489552, 0.0041136717700248765, -0.003281029172036213, 0.004994520379396742, 0.005881306315437565, 0.0019191616343801972, 0.0018975471635259648, -0.002328610252394057, 0.004248208458875215, -0.0005920468795965274, -0.0038553792874313577, 0.0038112483610510586, -0.004195373994730057, -0.000915489989227815, 0.0029553980613239174, 0.0021678901523187544, -0.0038920198545442466, 0.0035502750589570865, 0.004586990636719134, 0.003162239569373789, -0.003421200696347806, 0.0017255825613125093, -0.0005279149524741885, 0.004562234313122368, -0.002334743222336359, 0.00400256323961332, -0.002726672913988678, 0.00048764953928785357, 0.001474204140051011, -0.0017442986143786806, -0.003557821695733848, 0.0024198349280011534, 0.0027865662188490356, -0.003948382889083215, 0.0028086088456455963, -0.0027192938758505893, -0.0030284956454113806, -0.00276174966398204, 0.0031742676921388126, 0.0022313961584960774, -0.003650232656245833, 0.0011445396288015455, 0.0016735251972177685, -0.0004125609592329313, -0.0019545044081521186, -0.0019602430760370907, -0.0029910198378262625, 0.0016931279179998944, -0.00039057255012346566, -0.001921431362581844, -0.0009136431029638249, -0.0025172245881872127, -0.0009182534199845908, 0.00038120029255234595, -0.0031533054141553944, 0.0017822232013299914, 0.0017850547695199902, 0.0014401024463160544, 0.0014184879729225567, 0.0030892237524760987, 0.00021524669051497795, -0.00031733725699673824, -0.0019257301349811541, -0.002196845091735893, -0.0022192270596485264, 0.001770243982653703, -0.0023090876600621677, 0.0008233162025411802, 0.0008135237593282883, 0.00029441897930831355, 0.0010091904421864269, -0.001638798527692282, -0.0010112424574053225, -0.001825651694138089, -0.0011824003985901064, -0.0015996295051372508, -0.001539758680898834, -0.0020325904969921153, -0.0002544917362714551, 0.0008733177192869089, 0.0002533453823629309, -0.0004770786772389516, -0.0011830895866063174, 0.00084217034496012, -0.0004565051471153619, 0.0012015239183210827, 0.0011780073126160676, -0.0014163831177653385, 0.0006233519897872666, -0.00023079785849739782, -0.00022536812912556575, -0.001776255445286282, 0.0010491670468991772, -0.0006851711825642304, -0.0014380261516421804, -0.0006897815005479302, -0.0013984998159995848, -0.0013515169790336706, -0.0001968270181473215, 0.001006319409252684, -0.0001887999488739852, 0.00018698597536684399, -0.00018669490870147675, 0.001052627638316225, 0.0008875527642499257, 0.001027208899192687, -0.0012975621811781631, 0.0013070487344614284, -0.0013651810440809076, -0.00016854979316693585, -0.0008118145239308775, -0.00016764375582737273, -0.0012577338977896105, 0.0006173212257587269, -0.00016781646119976937, 0.0006075287814428792, -0.00016459231845460275, 0.0001645374102104692, -0.0001626801804567262, -0.00016169016766252406, -0.00016148892977954578, 0.0006456090310055432, -0.0001594857753269367, -0.0001575122170162267, -0.00015295788428155413, -0.000573299735321538, -0.0005731810272668002, 0.0009484475209538867, -0.0011922721556760284, 0.00092137656925267, -0.00014822653911089107, 0.00014467427717467052, 0.0006564702539324001, 0.00014231512542101728, 0.0001417718691017468, 0.0011091079631765784, -0.0003593288088408426, -0.0011521972900973218, 0.0001391877028908879, 0.0006253228816621145, 0.0001377132549913874, -0.00013721240625992777, -0.0001359989650976096, -0.00013448709950487044, -0.00033875527999490415, 0.00012972542534329243, -0.0011095973767001322, 0.0001260332719109749, 0.0008703030975965484, 0.0009026449820328826, 0.0008418298659425438, -0.0001260161696572083, -0.00012182873948564752, -0.001069314242685922, -0.00035038484945914606, -0.000118306315591828, -0.0005045624823134822, 0.00011609720338316316, 0.000515875376875906, 0.0005029796527946515, 0.0004540587473029053, -0.0004997147482695417, 0.00011277603315849348, -0.00011080405920896651, -0.00010878229949390226, 0.0008088779775779786, 0.0007792047116936217, -0.0007792997874590623, -0.0001070973021518278, 0.0005485538401039311, -9.963432393968346e-05, -9.783810024789527e-05, 9.779676844197235e-05, -9.705803802120601e-05, -0.00029701864911056035, -0.000457087728454598, 0.0005163918318658887, -9.456408735233644e-05, -0.00028331557347701844, 0.00011885708410311369, -0.00044812016820948707, 0.00045284971807183784, 0.0004368507110757247, -8.80309841604167e-05, -8.713362128499455e-05, -0.00037643581763989204, 0.0004541941680941884, 8.251687125368474e-05, 8.189713380253104e-05, -0.0004218688266823303, -0.0004093906473022462, -7.729073207081736e-05, 0.0003745995715059128, 0.00048119988828219983, 7.836657691392354e-05, 9.638960355797269e-05, -0.00025723328989279027, 0.00044802324131372977, -0.0002504006720329905, 0.0004088333055564848, -0.0003944539044255535, 0.000390132704458581, -6.845100117504755e-05, -6.754576432492605e-05, -0.0003789714212432317, 6.426288545339785e-05, 6.257445095059458e-05, 0.00043405810785346165, -6.184377759353664e-05, -6.293775777947767e-05, -6.118484299399658e-05, 0.00037583238854858327, -0.00022830221539998861, 0.000354831888214339, -0.0002291562911661144, 0.0004000049322497356, 5.867843087538212e-05, 9.657421452992879e-05, -5.515656780690692e-05, 0.00034988563321113677, 0.0003986761472295763, -0.00021229244846441208, 0.0003269158319083843, -4.932222359311425e-05, 0.00036388455778111836, -0.00020805990247834888, -4.888005816178801e-05, 0.00037084292977105016, -0.00020008086229975511, -4.379996572040788e-05, 7.410673362754763e-05, 0.0003354208369880194, -0.00019150689026457178, 8.103359952856093e-05, -3.981879736029371e-05, -3.933383818981624e-05, 0.0001694722801927966, -3.774034198223892e-05, 3.698373111320784e-05, 3.6405226176343626e-05, 3.3767652983132955e-05, 3.264110703778854e-05, 6.736447753993572e-05, 6.889893150724495e-05, -2.7924525804630524e-05, 6.402817357477598e-05, -2.5610825724824993e-05, -0.00014178379105653948, 6.179857295675988e-05, 5.906350529256541e-05, 2.2467483579994997e-05, -2.2085697403828524e-05, 2.126429634831999e-05, 6.0029336246969976e-05, 2.061489393890419e-05, 5.849520814933288e-05, -9.926824820961128e-05, 6.915980957991794e-05, 6.922376807643437e-05, 5.0880985725808873e-05, 1.84160137011167e-05, 1.7830062982524365e-05, -4.900468061601851e-05, -4.893395850319331e-05, 1.4891674988575621e-05, 4.393028051539256e-05, 0.00012470915727065516, 3.135603093732566e-05, 3.143527411170305e-05, 1.237878868546605e-05, 1.2381962965137157e-05, 1.2360900562790907e-05, 1.2377414045935062e-05, 1.233925132595982e-05, 1.2334284490770128e-05, 1.2358178560525228e-05, 1.2333821038877568e-05, 5.152643400420514e-05, 5.159039254935752e-05, 9.924504185117587e-06, 9.867950622368191e-06, 9.875207089352075e-06, 9.845161191409322e-06, 9.791075836130043e-06, 9.785712115324211e-06, 9.81279339946587e-06, 9.7852226593289e-06, -9.52039106567098e-06, 9.323629883392678e-06, 9.318720078269811e-06, 9.281043637600713e-06, 9.28089943565015e-06, 9.273320201474394e-06, 9.285532908052271e-06, 9.300176126881806e-06, 9.324089499144414e-06, -3.7084825122398724e-05, -3.7014102991036125e-05, 8.281244981866947e-06, ])


    return np.dot(coefficients_array, expressions_array)

@jit(nopython=True, cache=True)
def A_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_alpha_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_alpha_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_alpha_s ** 1), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (c_beta_s ** 6), ])


    coefficients_array = np.array([0.4319284318016297, 0.025721112497323586, 0.025014250351768238, 0.022566754469587693, 0.011157439069288483, 0.01773578747561443, 0.01971967861593925, -0.017158872961741876, 0.009970104430989767, 0.017348436137319248, 0.011286598728932827, -0.015494492623321834, 0.007465063173657731, -0.01437949969383893, 0.013247929449390747, -0.00856223954577611, 0.005121611307295349, -0.010933482026060325, 0.012556704233246473, -0.011343381290641028, -0.012122729590078124, -0.010660638187426128, -0.004068452884723598, -0.007827719851344906, 0.011469076736046222, 0.0073820124229487085, 0.006001433892659829, 0.006074678157615457, 0.00766581423376956, -0.008512992601670186, 0.008596749696409669, 0.007458967544276275, 0.0027190406882104876, -0.005782866275202684, -0.007561718991054129, -0.006722354507329337, -0.008765726364733335, -0.0025621363577182908, -0.008639212083722805, -0.007194773194336027, -0.006975240506127713, -0.002259115399442019, 0.007937328418435556, -0.007546959177200914, -0.006255174450939436, -0.0020435871749452136, 0.005179083247790303, 0.006634362874321894, -0.007283679668603643, 0.007143252007813987, -0.0027044668087734, -0.00526072581030485, -0.005808823390681463, 0.005485501847516785, -0.005425047874026148, -0.0057202324627859125, -0.005934077079540393, 0.004270773700427774, 0.0051716833616646035, -0.005809789184067885, -0.0053583356804353405, 0.0024197618224935913, -0.005160203450163795, -0.005811913528328, 0.005037219597632791, -0.006422779098673102, -0.005594244212763762, 0.0038743382452840805, 0.0057324396573986405, -0.0034372298297505994, 0.003962334532458462, 0.004072588212024204, -0.005778469890391446, -0.0015507096282076829, -0.0029661870928854436, 0.0026898490350640747, 0.0043399657027751995, -0.003424288301795788, -0.0043724795323926485, 0.0029298909948557174, -0.003830121287867322, 0.0034874725905681215, -0.003667381310829739, -0.002751921536584312, 0.0024918687111888677, -0.003583639194616003, -0.0032788051517524835, 0.0006990927945101518, 0.00294340834836048, -0.0036270327372499383, -0.004770895494423935, -0.004156889873896284, 0.0031226751986592974, -0.003012431306451765, -0.0036598551965390694, -0.004401310455053383, 0.002770095663089016, 0.001786454837197834, -0.002025388352489517, 0.0021571783328859662, -0.0005867440383350417, -0.002514647462348433, 0.0036696411474374606, -0.0024529400820476454, 0.0007366130335066513, -0.00200712989885831, 0.000548452519363206, -0.00440381860337356, 0.000540633422877962, -0.0028100340259792755, -0.0021074873849379026, -0.0005191944400289107, 0.0020005243056217914, -0.0004839565327627404, 0.0037282896690407066, -0.002126229838802038, 0.003915557936238742, 0.0018598492633036456, 0.0035815082531674043, 0.0033294538435355127, -0.00046037946250836805, 0.002315212673079791, -0.0011531025335287223, -0.0026624352575468804, -0.0025220279991585172, -0.0016528431460688844, -0.0022914221852650286, -0.00043008265536342724, -0.00041953180740807123, -0.0032723833123943177, 0.0024466368562943747, -0.0014738210495226429, 0.003415114866112646, 0.0028917639706518023, 0.0019644599143972567, 0.00359548059444824, -0.002663461304138177, 0.0019160514344991415, -0.003443493595531417, -0.0025007223892977762, 0.00255747724797863, 0.0023579697209816196, -0.00036001091968583293, 0.0003463186781501969, 0.0026288765866714853, 0.0019502219757927082, 0.0021762874197697613, -0.0025101683635818106, 0.0017607949962723758, -0.0027795228576430065, 0.00032393668626629687, -0.0029212146768548483, 0.0016611729450726348, -0.0015801027364376042, -0.00029291096748949007, -0.0017417813463025034, 0.0024326340265030046, -0.0016590705341473296, 0.0020397937056194694, 0.002593378246639839, 0.00028104437751555293, -0.00027759787705404547, -0.001308042988716261, -0.0012810368470869099, 0.0005166159889990225, 0.0005198338178780446, -0.0009549462799046122, -0.0013381547791856965, 0.0007648782598558101, -0.00227926929348183, 0.0015383150731378824, -0.0010410986063762678, -0.0002298925428861045, -0.0011720519310375978, 0.000850635662094712, -0.000869681056326812, 0.001704034819395797, -0.0004703152733719946, -0.0005126563616554338, 0.0007418092917583462, 0.0013104490904806121, -0.0005038120722733266, -0.0015104065826919517, -0.0012422837240553112, 0.0010536933469221278, -0.0016584200494015723, 0.00019859092477836145, 0.00019685569291828307, 0.0013572553810201906, -0.00019639110168119932, 0.0011563029007687971, 0.00018926324501265836, -0.0011160012036346568, -0.0009296462031056297, 0.0005891763430501641, -0.0009158330399822119, -0.00017168669874389718, -0.0011229630036651286, -0.00017257577207772823, -0.0008804944745850138, 0.0008070481303820348, 0.00144956168809754, -0.00017293365290466548, -0.0014328389889818136, 0.0009709731921748427, -0.0011194749133026057, 0.0005597074374376657, -0.00016082926716523088, 0.00015471032881861756, -0.0010125115735398977, 0.0003824653218838809, 0.00038568314933073837, -0.00015063187704881026, 0.001177524897847442, -0.000542632945783208, -0.0011481361015673775, -0.0005157403788539666, 0.0008063317434669002, 0.0008907618004368239, 0.0008666458205745518, -0.0001318001337455986, -8.406505772098851e-05, 0.00012674295214239306, -0.00038920791849876443, -0.00012333558520038001, -0.00038036362936742844, -0.00011827370239011899, -0.0001172655412790552, -0.0005432076798477182, 0.0003553904425441697, 0.0005389760139597428, 0.00011208544573332622, 0.00011215838037960071, -0.00011075806790697197, 0.00033556587948836236, 0.00010753090730755249, 0.0003680986195254601, 0.0005986103345072926, 0.0006308548765746074, 0.00031553589132704194, 0.0003184619106395952, 0.0003442753314061203, -9.939700115205306e-05, 0.000788671194205669, -0.0001002946966046568, -9.541025998646795e-05, -9.46434339252436e-05, -9.192733238393753e-05, -9.12432251541829e-05, -9.150769933697362e-05, -0.0003272936352979909, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def B_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_harmonics_alpha[2] * s_harmonics_beta[9]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 1) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 11), ])


    coefficients_array = np.array([-0.3270019077629519, 0.01470485243895263, -0.01456064016891997, 0.010186039721675744, -0.005628281486981243, -0.005573981177844955, 0.004948728798593618, 0.0041686964329461255, -0.003283936896243707, -0.003127640243220143, -0.002775455110927901, 0.002092345957543302, -0.002087058998337728, 0.001873402644758814, -0.00163302597190566, 0.0014887393360381517, 0.0014589344513354224, 0.0014631370520050624, 0.001436227096977126, -0.001313487640631153, -0.0013059225446852075, -0.0011391036990236975, 0.0011107951997330603, 0.001070192015383191, 0.0010586025127844688, -0.0009694593101993148, 0.0009110661946489035, 0.0008842039183340167, -0.0007082002010899642, -0.0006910978206346474, -0.0006458390993775016, -0.0006012305151968317, 0.0006048607248570001, -0.000569393233632245, 0.0005412347001987685, -0.0005304600101583009, -0.0005095587659754945, -0.0005162200117113819, 0.00046923966755425453, -0.00045083039653380383, 0.0004325571050967574, -0.00034449650019729305, 0.00028871217003094353, 0.00028533239183258565, 0.00026682461259557976, 0.00025653386687195305, 0.0002413950679481494, 0.00022808483142200848, 0.00021785732099051922, 0.0002133483528252937, 0.0002174878941933693, 0.00019778614657900531, 0.00019961093261785078, 0.0001882614664020246, 0.00018642545552681111, 0.0001832438811620405, 0.00018272715670060728, 0.00018241322761307303, 0.00017489259760657605, -0.0001765487349173956, 0.00017037065809907104, 0.00016756131615582674, 0.0001621350260310138, -0.00016215323862882027, 0.00015695382230890178, -0.00015283192690767776, 0.00014674343017062296, 0.00014630638892817237, -0.0001431146565936635, 0.00014099486909246374, 0.00013859971405408487, -0.000130281129156269, 0.00012305175042419078, 0.00011939786539118748, -0.00011704394130523364, 0.0001116862181926626, -0.00011083740258289097, 0.00010797418424285205, 0.00010736892498722258, -0.00010525508744508555, 0.00010088256454131468, 0.00010166247444819903, 0.00010075242128261043, 9.904226512886757e-05, 8.159823578773371e-05, 7.686318422390067e-05, -7.811917740938292e-05, 7.075723827230788e-05, 6.941636754875475e-05, -7.014867505727826e-05, 6.496299637558895e-05, 6.333378711478166e-05, -5.979600029352134e-05, 5.726537682837488e-05, 5.711548301983382e-05, -5.5687749343904904e-05, -5.460440304405891e-05, -5.283490063984226e-05, -4.234213630901294e-05, -4.16539608500881e-05, 3.591307360309371e-05, -2.9920362821723727e-05, 2.9079024934299495e-05, 2.866358776421505e-05, 2.8733083684111745e-05, 2.62080428586325e-05, 2.4619533798314574e-05, 3.4893043137770035e-05, 2.1575489010024554e-05, 2.0818800638621583e-05, 3.662883133801822e-05, 1.9392618160720697e-05, -1.9013362349947606e-05, -1.7933505067745974e-05, 3.313309226827056e-05, -1.4340106766468787e-05, 1.3678325559647691e-05, 2.8788431351735742e-05, 1.1439026734021592e-05, 2.0958713757606226e-05, 2.4719583722197235e-05, -2.2684212066024932e-05, -2.0791165577337395e-05, 2.157745213283625e-05, -1.8043956322089376e-05, 2.1158390365102883e-05, -7.138020732430696e-06, 6.439529544085465e-06, -6.452287148347124e-06, -1.3588563725594287e-05, 5.996415024488562e-06, 1.9456082839990802e-05, 1.705096635669813e-05, 1.4876144234357039e-05, 5.159689721023478e-06, -6.069750434824508e-06, 1.2998024694319206e-05, 7.3848277521273996e-06, 9.046755577227339e-06, -1.0268493265212659e-05, -2.2141815367283626e-06, -8.49014904116865e-06, 8.545435190309366e-06, 7.68038741384331e-06, -5.705345388285175e-06, 6.83017142467133e-06, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def C_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_alpha_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_beta_s ** 2), (s_alpha_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_alpha_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 14), (s_beta_s ** 8), (c_alpha_s ** 8) * (s_beta_s ** 2), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 4), (s_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 6) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 4), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (c_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 6), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 12), (c_alpha_s ** 13) * (c_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_alpha_s ** 1), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 4), ])


    coefficients_array = np.array([0.5680715681984835, -0.025721112497467637, -0.025014250351688402, -0.022566754469610366, -0.011157439069363648, -0.017735787475846077, -0.019719678616079997, 0.017158872961878863, -0.009970104430938811, -0.017348436137168945, -0.011286598728770001, 0.015494492623285094, -0.007465063173730048, 0.014379499693835522, -0.013247929449477051, 0.00856223954583986, -0.005121611307060913, 0.010933482026180908, -0.012556704233460097, 0.011343381290407784, 0.012122729589923116, 0.010660638187436462, 0.004068452884727416, 0.007827719851336219, -0.011469076735868264, -0.007382012422936449, -0.006001433892550073, -0.006074678157715579, -0.007665814233727239, 0.008512992601660226, -0.008596749696419034, -0.00745896754423863, -0.0027190406882361224, 0.005782866275225427, 0.007561718991000299, 0.006722354507396851, 0.008765726364743149, 0.0025621363577034207, 0.008639212083673103, 0.007194773194337637, 0.006975240505970199, 0.0022591153994395807, -0.007937328418292014, 0.007546959177249087, 0.006255174450822957, 0.0020435871749606605, -0.005179083247745, -0.006634362874216032, 0.0072836796685520335, -0.007143252007829526, 0.002704466808761522, 0.005260725810333612, 0.005808823390840559, -0.005485501847427941, 0.005425047873879092, 0.00572023246286477, 0.0059340770795605615, -0.004270773700386709, -0.00517168336179632, 0.005809789184144156, 0.0053583356802651425, -0.002419761822425852, 0.005160203450108332, 0.005811913528248426, -0.005037219597781897, 0.00642277909861679, 0.00559424421275461, -0.003874338245290946, -0.005732439657460902, 0.0034372298296480286, -0.00396233453246812, -0.004072588211995618, 0.005778469890412074, 0.0015507096281765283, 0.0029661870929790614, -0.002689849034879874, -0.004339965702834946, 0.00342428830165333, 0.004372479532514132, -0.00292989099485102, 0.003830121287790878, -0.0034874725904552027, 0.00366738131083321, 0.0027519215365694426, -0.0024918687112622903, 0.0035836391947140903, 0.0032788051516498247, -0.0006990927945097116, -0.0029434083483960804, 0.003627032737174681, 0.004770895494335898, 0.004156889874071498, -0.003122675198704286, 0.003012431306394824, 0.003659855196674904, 0.004401310455061281, -0.0027700956631889952, -0.0017864548372422326, 0.0020253883524761424, -0.002157178332741091, 0.0005867440383351586, 0.002514647462184036, -0.003669641147443073, 0.0024529400822250183, -0.0007366130335120963, 0.002007129898773561, -0.0005484525193634541, 0.004403818603318735, -0.000540633422877964, 0.002810034025930977, 0.002107487384970101, 0.000519194440028893, -0.0020005243056302495, 0.0004839565327628608, -0.003728289669103157, 0.0021262298387988857, -0.003915557936241656, -0.0018598492631804566, -0.0035815082531739503, -0.0033294538434822003, 0.00046037946250836995, -0.0023152126730745575, 0.00115310253359314, 0.0026624352576040252, 0.0025220279992375144, 0.0016528431461437783, 0.0022914221852785074, 0.00043008265536239096, 0.00041953180739439175, 0.0032723833123513113, -0.0024466368563260564, 0.00147382104951016, -0.00341511486611699, -0.002891763970689385, -0.001964459914258313, -0.0035954805943967426, 0.0026634613041659075, -0.001916051434601077, 0.003443493595473304, 0.002500722389293285, -0.0025574772480959265, -0.0023579697209562085, 0.00036001091968622113, -0.00034631867815172637, -0.0026288765866634718, -0.0019502219757638153, -0.002176287419660287, 0.002510168363588066, -0.0017607949962051422, 0.0027795228576391546, -0.00032393668626628255, 0.0029212146767895134, -0.001661172945045929, 0.001580102736614182, 0.00029291096748862037, 0.001741781346224075, -0.002432634026466577, 0.0016590705342023582, -0.002039793705750259, -0.002593378246688716, -0.00028104437751614735, 0.00027759787705403593, 0.00130804298871262, 0.0012810368472012273, -0.0005166159890148705, -0.0005198338178835733, 0.0009549462798616704, 0.001338154779111098, -0.0007648782599648306, 0.002279269293484594, -0.0015383150731729063, 0.0010410986063501809, 0.00022989254288611387, 0.0011720519310892935, -0.0008506356620191976, 0.0008696810562325494, -0.0017040348193788604, 0.0004703152733215387, 0.0005126563617491624, -0.0007418092917758695, -0.0013104490905112437, 0.0005038120721906082, 0.0015104065826542917, 0.0012422837240000622, -0.0010536933469616058, 0.0016584200494329272, -0.00019859092477836116, -0.0001968556929183042, -0.001357255380994679, 0.00019639110168316468, -0.0011563029006640925, -0.00018926324501264167, 0.0011160012035259436, 0.0009296462031152766, -0.0005891763430641116, 0.0009158330400459354, 0.0001716866987438842, 0.001122963003671617, 0.0001725757720777347, 0.0008804944745919162, -0.000807048130332082, -0.0014495616882170478, 0.0001729336529046661, 0.001432838988940302, -0.0009709731919551579, 0.0011194749133926559, -0.0005597074374057723, 0.00016082926716507723, -0.00015471032881860826, 0.0010125115735074353, -0.0003824653219123325, -0.00038568314929885084, 0.0001506318770413921, -0.0011775248977315622, 0.0005426329458140173, 0.001148136101577514, 0.0005157403788200344, -0.0008063317434455178, -0.0008907618003657525, -0.000866645820534147, 0.00013180013374366385, 8.406505773274505e-05, -0.00012674295214243326, 0.0003892079185183955, 0.0001233355852003542, 0.00038036362935700823, 0.00011827370238971692, 0.00011726554127906033, 0.0005432076798770834, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def D_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(c_alpha_s ** 1), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 1) * (c_beta_s ** 4), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 1) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_alpha_s ** 3) * (c_beta_s ** 2), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_alpha_s ** 1) * (c_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 10), (c_alpha_s ** 1) * (c_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_alpha_s ** 1) * (c_beta_s ** 14), (c_alpha_s ** 1) * (s_beta_s ** 12), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_alpha_s ** 1) * (s_beta_s ** 14), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 9) * (s_beta_s ** 2), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 7) * (c_beta_s ** 6), (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (s_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (c_beta_s ** 6), (s_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 11) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (c_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 14), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (s_alpha_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (s_beta_s ** 4), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_harmonics_alpha[7] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (c_alpha_s ** 11) * (s_beta_s ** 6), (s_beta_s ** 14), (c_harmonics_alpha[3] * c_harmonics_beta[8]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 11) * (s_beta_s ** 12), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 11) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 9) * (c_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (c_alpha_s ** 9) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_alpha_s ** 9) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 7) * (s_beta_s ** 10), (s_beta_s ** 10), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 9) * (c_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 10), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 11) * (s_beta_s ** 4), (s_alpha_s ** 10), (c_alpha_s ** 13) * (s_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 6), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 2) * (c_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[14]), (s_alpha_s ** 14), (c_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 2), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_alpha_s ** 4) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 5) * (c_beta_s ** 14), (s_alpha_s ** 8), (c_alpha_s ** 7) * (s_beta_s ** 12), (s_beta_s ** 6), (c_alpha_s ** 9) * (s_beta_s ** 14), (s_alpha_s ** 2), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 12), 1, (c_alpha_s ** 13) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 9) * (c_beta_s ** 6), (s_alpha_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 2), (c_alpha_s ** 9) * (s_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_alpha_s ** 5) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 14) * (c_beta_s ** 4), (s_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (c_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (c_beta_s ** 2), (c_alpha_s ** 2) * (s_beta_s ** 2), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 7) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[6]), (c_alpha_s ** 9) * (c_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (s_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (c_beta_s ** 8), (s_alpha_s ** 8) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 4) * (c_beta_s ** 4), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (s_alpha_s ** 2) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 9) * (s_beta_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 2), (s_alpha_s ** 14) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 10), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 8), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 12) * (c_beta_s ** 8), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 12) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 14), (s_alpha_s ** 10) * (c_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 14), (s_alpha_s ** 4) * (s_beta_s ** 10), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_alpha_s ** 6) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_alpha_s ** 9) * (s_beta_s ** 6), (c_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (c_alpha_s ** 10) * (c_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 4) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_alpha_s ** 10) * (s_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 14), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 14) * (c_beta_s ** 10), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 14), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (s_alpha_s ** 10) * (s_beta_s ** 8), (s_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 12), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 14), (c_alpha_s ** 4) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 10) * (s_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 10) * (s_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 6), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (c_alpha_s ** 2) * (c_beta_s ** 13), (s_alpha_s ** 2) * (c_beta_s ** 13), (c_alpha_s ** 6) * (c_beta_s ** 12), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 9), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_alpha_s ** 2) * (c_beta_s ** 9), (c_alpha_s ** 6) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 14) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 5), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[13]), (c_harmonics_alpha[7] * c_harmonics_beta[11]), (c_harmonics_alpha[7] * c_harmonics_beta[7]), (s_alpha_s ** 2) * (c_beta_s ** 5), (c_harmonics_alpha[7] * c_harmonics_beta[1]), (c_harmonics_alpha[7] * c_harmonics_beta[5]), (c_harmonics_alpha[7] * c_harmonics_beta[3]), (c_harmonics_alpha[7] * c_harmonics_beta[9]), (c_harmonics_alpha[7] * c_harmonics_beta[15]), (s_alpha_s ** 14) * (s_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[7]), (c_harmonics_alpha[6] * c_harmonics_beta[11]), (c_harmonics_alpha[6] * c_harmonics_beta[13]), (c_harmonics_alpha[6] * c_harmonics_beta[5]), (c_harmonics_alpha[11] * c_harmonics_beta[13]), (c_harmonics_alpha[6] * c_harmonics_beta[9]), (c_harmonics_alpha[11] * c_harmonics_beta[11]), (c_harmonics_alpha[11] * c_harmonics_beta[1]), (c_harmonics_alpha[11] * c_harmonics_beta[7]), (c_harmonics_alpha[11] * c_harmonics_beta[3]), (c_harmonics_alpha[11] * c_harmonics_beta[5]), (c_harmonics_alpha[11] * c_harmonics_beta[9]), (c_harmonics_alpha[6] * c_harmonics_beta[15]), (c_harmonics_alpha[6] * c_harmonics_beta[3]), (c_harmonics_alpha[11] * c_harmonics_beta[15]), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 4) * (c_beta_s ** 13), (c_harmonics_alpha[6] * c_harmonics_beta[1]), (s_alpha_s ** 4) * (c_beta_s ** 13), (c_alpha_s ** 6) * (s_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[7]), (c_harmonics_alpha[8] * c_harmonics_beta[5]), (s_alpha_s ** 4) * (c_beta_s ** 9), (c_harmonics_alpha[8] * c_harmonics_beta[9]), (c_harmonics_alpha[8] * c_harmonics_beta[11]), (c_harmonics_alpha[8] * c_harmonics_beta[13]), (c_harmonics_alpha[8] * c_harmonics_beta[3]), (c_harmonics_alpha[8] * c_harmonics_beta[15]), (c_harmonics_alpha[8] * c_harmonics_beta[1]), (c_alpha_s ** 4) * (c_beta_s ** 9), (c_harmonics_alpha[15] * c_harmonics_beta[7]), (c_harmonics_alpha[15] * c_harmonics_beta[1]), (c_harmonics_alpha[15] * c_harmonics_beta[3]), (c_harmonics_alpha[15] * c_harmonics_beta[5]), (c_harmonics_alpha[15] * c_harmonics_beta[11]), (c_harmonics_alpha[15] * c_harmonics_beta[13]), (s_alpha_s ** 8) * (s_beta_s ** 2), (c_harmonics_alpha[15] * c_harmonics_beta[9]), (c_harmonics_alpha[15] * c_harmonics_beta[15]), (c_alpha_s ** 4) * (c_beta_s ** 5), (c_harmonics_alpha[10] * c_harmonics_beta[7]), (c_harmonics_alpha[10] * c_harmonics_beta[5]), (c_harmonics_alpha[10] * c_harmonics_beta[11]), (c_harmonics_alpha[10] * c_harmonics_beta[13]), (c_harmonics_alpha[10] * c_harmonics_beta[3]), (c_harmonics_alpha[10] * c_harmonics_beta[9]), (c_harmonics_alpha[10] * c_harmonics_beta[1]), (c_harmonics_alpha[10] * c_harmonics_beta[15]), (c_alpha_s ** 6) * (c_beta_s ** 13), (c_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 8) * (s_beta_s ** 6), ])


    coefficients_array = np.array([-0.3894882930242213, -0.20276801658765375, -0.1867202764209804, 0.10033727854146056, -0.1415398200896164, -0.1254920799794969, -0.11030918645051606, -0.09549451729432168, -0.0913173659580006, 0.03888326359066748, -0.034517220585596774, 0.06591773016960993, 0.06360274091378347, -0.07773576785555239, -0.07852694453457225, -0.06601443271847868, -0.06931083183885432, 0.058055627961965846, 0.055740638711807296, -0.062342393175214304, -0.05770342147768021, 0.053990456085269464, 0.05194370845411528, -0.051502278549129865, -0.01604774015324969, 0.05089614983583009, -0.014372461013193984, 0.04911764362239937, 0.048306919010682146, 0.04675736895191068, 0.046071789393536795, 0.044711910058578073, -0.02534148427329719, -0.028629748028131313, -0.02411858076958604, 0.04411199899629013, 0.04290905475527382, -0.026169423701192848, -0.008772971736880778, 0.004951951193486244, -0.016458932291912275, -0.012736994002343923, -0.01399860791499212, 0.0036813962044792777, -0.011514090578816525, -0.011239473403908731, -0.003389931697587942, 0.003245891819259755, 0.0031903550496173404, -0.003136688944191003, -0.008301607986852104, -0.0026653698998881405, 0.0026554215644563027, -0.0023278618207985425, -0.010335784892312886, -0.007950939478668276, -0.001473297499756669, 0.0018045250105468513, -0.00644299004621428, -0.0016157170701168923, 0.002399901939359444, 0.0015668845547403515, 0.00813668704342068, -0.001614726238803272, 0.009031757287913535, -0.0014645308589348322, 0.0013993083789016472, -0.0013960697795241234, 0.006265906637121634, 0.009445400383467865, -0.005203604243970336, -0.0068180261487848, 0.0013322718371221065, 0.0013305788077762465, 0.009606544304334691, -0.0012216267102394718, 0.00962880807111503, 0.006983974924523785, 0.00785097279969175, 0.0011595711105896365, -0.0011562857205050126, 0.008262964226273345, 0.001141467316352988, 0.0011093188221597227, 0.001418522934431126, 0.005192871177765426, -0.0010754636072434437, 0.008435777934198552, 0.0010436385803353197, -0.004199477289164949, 0.006180888829639351, 0.008476374371535119, -0.0009663681226030055, 0.006713418108875032, 0.000947673272476033, 0.0051540764516957785, -0.001829102283174822, -0.0009217098535755567, -0.0009199535061284603, 0.006980592227876916, 0.000903586993068133, -0.0045086597473809305, -0.0008873102921846739, 0.007097720105708572, 0.003284048916227519, 0.005766450535783366, -0.0008573719372556616, 0.006149005336592088, -0.0008458169928333627, 0.005131543794159634, -0.0008337730393289038, 0.0031369271965511598, -0.0008170407900521367, -0.00460551651294186, 0.0013420438843644322, -0.002464885277752439, -0.0013642810182290417, 0.004971048698139879, 0.0055084043209244855, 0.004063849537867609, -0.0021208728362928967, -0.0022940494914894085, 0.0023926036861619863, 0.0057924892331689005, 0.0031515539197331677, -0.0011464214102144177, 0.005932171892743965, 0.003964593588186672, -0.0029014045276400564, -0.0019286429216191134, -0.000622266508830397, 0.0011731395672818915, 0.0022476999693579404, 0.0009381715953998253, -0.0009439125109599528, -0.0005661099400669235, 0.0012100147212320595, 0.002685293718836164, 0.0028975598070821217, 0.0007745807768384428, -0.0031223478882419463, 0.0006635625778281765, 0.0037218888067731375, -0.00040878653956279837, 0.002538172006109391, 0.00047734341427038967, -0.0015515967149727632, 0.003254805541680879, 0.0001900977062754411, -0.0016876322380579773, 0.0011833357198905204, 0.002201225679917376, 0.00048150029144568925, 0.001299707467743638, -0.0009553103837445471, 0.001105491202671688, -0.002366519535018259, 0.00043016117554121034, 0.0020340325752550526, 0.0004073799278514582, -0.00040163619925003794, 0.0014712062985747611, 0.0015390765857425642, 0.00252628683946565, -0.001645536397564378, 0.0023346666238408887, 0.0022900438977163135, 0.0008081407036359424, 0.001944801572551796, -0.0016331298327610197, 0.0008069690487818456, 0.0011001944755595703, 0.0009904404682064152, 0.0017513116656505828, -0.0006287019991608522, -0.0003446196156540372, -0.0013536178277324137, 0.00034016985468914815, -0.0014622940435759769, 0.00033108145651910854, 0.0005351259078272727, -0.0005293849952033853, -0.0011547842017661334, 0.00031751706665284965, -0.0020803548087873843, 0.0012394477118706272, 0.00031048395530841664, -0.0012616118737038382, -0.0006594158578247254, -0.0011613879148675054, -0.001293898393792047, 0.0002903979886364189, 0.00028760238724317375, 0.0016321164152612332, -0.0009461134522357721, 0.000974500792187653, -0.0010236214819303495, 0.0019472906403046899, -0.0002749086046323663, 0.00027230622258350056, -0.0015854129895785222, 0.0008020636768254727, 0.00026664050133159306, 0.0009042672373385844, 0.00026338058993747535, -0.0016963682590319764, 0.0002600884462091544, 0.0010399347198484649, -0.0006569973189293453, -0.0002527839482649617, -0.00098663936790969, 0.0017109234703393918, 0.0002466944095281207, 0.0021955833932043346, 0.0007060278111394475, 0.0002484758609273257, 0.0005237280432156353, 0.0011463705791996653, 0.0013546260740574286, -0.0007553724397534738, 0.0009033949801919896, -0.0013613403043460585, 0.0007586852953304501, 0.0010727521076058452, -0.001159842011986144, 0.00022366359579017805, -0.0011781897167050138, -0.0008424629305653842, 0.0015059802150275787, -0.0014235409415897639, -0.0012805061978166984, -0.0007217490065200468, -0.001103826423935487, 0.0012874004504115145, -0.0006186922436313791, -0.0007457544054381498, -0.0009858658174891708, 0.0010426882783955453, 0.00020157131472860431, -0.00129090770778475, -0.0014076609761233692, -0.0009045209811940042, 0.00019329848620323764, -0.0012593330378463591, -0.0013817643105421035, 0.00018775337907112817, -0.00018576586715892277, -0.00018575530761271401, -0.0008263438624172918, 0.0006401452542476244, -0.0009474244251587902, 0.0008067046186391196, -0.0010784733455759705, -0.0008745353659835883, -0.000843229772262216, 0.0016144574560978213, 0.0013672466526795106, 0.0005833585903484775, 0.00017379040050984618, 0.0004495454490421103, 0.0006786577618887776, 0.00016769648263643906, -0.0004308514637778753, 0.0010102111732904402, -0.0005890417846332116, -0.0008633774115101854, 0.00015824909002651018, 0.0008767741412250064, -0.0009486106972872832, -0.000157332688868292, -0.0001565109237980269, 0.0006563720730962773, -0.0006082431704610746, 0.001182731519607463, -0.0007325826161959632, 0.0011406004377292945, 0.00014906996673060894, 0.00014914830960282378, -0.00032546880374554964, -0.0004264100492436584, 0.0007780686105389808, 0.0001440183042280096, 0.0007368307426562626, 0.0011725804680530387, 0.000631377910856437, 0.0011880403142992334, 0.0005789899247198314, 0.0001382283097943435, -0.0001345691799698555, 0.0007080332454256706, -0.0001314909033312187, 0.0001283764035567428, 0.0006766425390413286, -0.0006223187769248003, -0.0009578759975813906, -0.0006847400265863672, 0.00011577172370507554, -0.0004976741074221439, -0.00040749330744524064, 0.0008310103231728078, 0.0004046169365784098, -0.0008058415967119982, -0.0005986517424775937, -0.0006467111437078258, 0.00053287661637022, -0.0005864497532083419, -0.0005747236636055606, -0.0003932102939038835, -9.840721527953287e-05, 0.0005300241959766094, -0.0007001844006590896, -0.000340659529018243, 0.0005671235522757027, -0.0007663317926510983, 0.00023518727413275828, 0.0004298327664126021, -0.0006825384265802375, -0.0006815201068137716, -0.0006009088189208463, -0.00043054722652496213, 0.0002433289503087457, -0.00038355623026059554, 0.0006935754687987406, 0.0005116201887482988, 0.00021401712685902314, 8.054433039379092e-05, -0.0006904253583589247, 7.834714853720847e-05, -0.0006026949737499021, -0.0005583080048453024, 0.0006315217877750182, -0.0003604099395414086, -0.0005821376432442486, 0.0005776085342225398, 7.152745781060354e-05, 7.162894407774137e-05, -0.0005022269916363071, 7.067317365593136e-05, 0.0002697446162705286, 6.624912402361642e-05, -0.000521485910537903, -0.00022594042114601834, 0.00025377801335123285, -0.000416661731340507, -0.00023549170452733203, -0.00037078234551301225, -0.000200307961747223, 5.7014463684150246e-05, 0.00014684638221526875, 5.545041295033747e-05, 5.501243011029275e-05, -5.622627891717878e-05, 5.418784015547155e-05, -0.00044124933935630754, -0.000404269541356567, -0.0003287407934994482, -5.213808955749457e-05, -0.00023857492897425575, 4.88046597670679e-05, 0.0002856810207846461, -0.00027031149292836227, -0.00032847960706747063, -0.00013051552823599506, -0.0002036973204676399, -0.0002790078325336534, -0.00026461440495392487, 0.00025172611145566677, 0.00038206908113085525, 8.905872325134454e-05, -0.00019157340681758882, -0.0002633004315183331, -0.00015088881230190324, 3.69007222928526e-05, 0.0002429782712730918, -0.00018846088111838097, 3.3587799214715616e-05, 0.00013564612674792426, 3.075911203497319e-05, 2.8926789098848086e-05, 2.6675862676517916e-05, 0.0001764282268526194, 0.00016182670942005493, -0.0001591868859384313, -0.00011698700250534196, 0.0001334191629616208, 2.2108321417667905e-05, 8.066255284537939e-05, 7.751877552082207e-05, -0.0001145719514576708, 0.0001031803871828751, -8.053836545627446e-05, -5.652295352757027e-05, 1.7531794658808122e-05, -5.383183303397658e-05, 6.967579569596154e-05, 1.6220244288572797e-05, 0.00014051948254275895, -5.437757733995698e-05, 3.708791882378583e-05, -0.00011003758467894154, -1.4734844604200956e-05, -1.4728899748649306e-05, -1.4672852221894704e-05, 3.500816801032362e-05, -1.4639688271887742e-05, -1.4650108751433215e-05, -1.4608249061206517e-05, -1.4705268518658306e-05, -1.4735390894233798e-05, -0.00013023007140704464, -1.3569763385301185e-05, -1.3541232096285894e-05, -1.3535772077576028e-05, -1.3494554411899981e-05, -1.347972040217932e-05, -1.3560704990218856e-05, -1.3474149140796625e-05, -1.3435763140112172e-05, -1.3431663827936475e-05, -1.3435802796634482e-05, -1.343779892686936e-05, -1.3453133649706426e-05, -1.3535253302613495e-05, -1.3203477505072853e-05, -1.3480242146651197e-05, 8.429854213642183e-05, 6.038409129193749e-05, -1.2200347415325707e-05, 5.7240314209031956e-05, 6.654872378243312e-05, -1.1481858711198518e-05, -6.419083846917862e-05, -6.723932101471492e-05, 1.0757726632821676e-05, -1.0515485351689135e-05, -1.0408335827864103e-05, -4.3196283370461595e-05, -1.0444735517135357e-05, -1.0356732813949073e-05, -1.0332713688255548e-05, -1.0225939226874588e-05, -1.0330442767507507e-05, -9.909056573064683e-06, -4.05051631940161e-05, 9.411851236389482e-06, 9.405612143527708e-06, 9.405616523475227e-06, 9.404907792393899e-06, 9.369729399432856e-06, 9.36416791215965e-06, -2.7482902170923937e-05, 9.390675794132178e-06, 9.363646805388749e-06, 2.7668004230500444e-05, -8.75223467479174e-06, -8.73619226924145e-06, -8.712914120942213e-06, -8.707407941077682e-06, -8.708708321517871e-06, -8.733412055690984e-06, -8.634412885773374e-06, -8.706890119899488e-06, 4.974450620665961e-05, 4.0731591173626166e-05, 5.7262145896603726e-05, 3.954015308899665e-05, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def E_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([(s_alpha_s ** 1) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 3), (s_alpha_s ** 5) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 5), (s_alpha_s ** 7) * (s_beta_s ** 1), (s_harmonics_alpha[5] * s_harmonics_beta[1]), (s_harmonics_alpha[3] * s_harmonics_beta[3]), (s_alpha_s ** 3) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 7), (s_alpha_s ** 9) * (s_beta_s ** 1), (s_harmonics_alpha[1] * s_harmonics_beta[5]), (s_alpha_s ** 11) * (s_beta_s ** 1), (s_alpha_s ** 1) * (s_beta_s ** 9), (s_alpha_s ** 13) * (s_beta_s ** 1), (s_alpha_s ** 5) * (s_beta_s ** 3), (s_alpha_s ** 1) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 5), (s_alpha_s ** 1) * (s_beta_s ** 13), (s_alpha_s ** 7) * (s_beta_s ** 3), (s_harmonics_alpha[1] * s_harmonics_beta[7]), (s_harmonics_alpha[7] * s_harmonics_beta[1]), (s_alpha_s ** 3) * (s_beta_s ** 7), (s_alpha_s ** 5) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 3), (s_harmonics_alpha[3] * s_harmonics_beta[5]), (s_alpha_s ** 3) * (s_beta_s ** 9), (s_alpha_s ** 11) * (s_beta_s ** 3), (s_alpha_s ** 13) * (s_beta_s ** 3), (s_alpha_s ** 7) * (s_beta_s ** 5), (s_alpha_s ** 3) * (s_beta_s ** 11), (s_alpha_s ** 5) * (s_beta_s ** 7), (s_harmonics_alpha[9] * s_harmonics_beta[1]), (s_harmonics_alpha[7] * s_harmonics_beta[9]), (s_harmonics_alpha[9] * s_harmonics_beta[9]), (s_alpha_s ** 11) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 11), (s_alpha_s ** 9) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 13), (s_alpha_s ** 13) * (s_beta_s ** 9), (s_alpha_s ** 9) * (s_beta_s ** 11), (s_alpha_s ** 11) * (s_beta_s ** 9), (s_harmonics_alpha[13] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 13), (s_harmonics_alpha[1] * s_harmonics_beta[9]), (s_harmonics_alpha[7] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[13]), (s_harmonics_alpha[9] * s_harmonics_beta[7]), (s_alpha_s ** 9) * (s_beta_s ** 9), (s_harmonics_alpha[9] * s_harmonics_beta[3]), (s_alpha_s ** 13) * (s_beta_s ** 7), (s_alpha_s ** 7) * (s_beta_s ** 11), (s_alpha_s ** 3) * (s_beta_s ** 13), (s_alpha_s ** 11) * (s_beta_s ** 7), (s_harmonics_alpha[13] * s_harmonics_beta[11]), (s_harmonics_alpha[11] * s_harmonics_beta[11]), (s_harmonics_alpha[13] * s_harmonics_beta[9]), (s_harmonics_alpha[5] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[15]), (s_harmonics_alpha[7] * s_harmonics_beta[5]), (s_harmonics_alpha[15] * s_harmonics_beta[1]), (s_alpha_s ** 7) * (s_beta_s ** 9), (s_alpha_s ** 5) * (s_beta_s ** 13), (s_harmonics_alpha[9] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[11]), (s_alpha_s ** 9) * (s_beta_s ** 5), (s_alpha_s ** 9) * (s_beta_s ** 7), (s_harmonics_alpha[5] * s_harmonics_beta[9]), (s_harmonics_alpha[1] * s_harmonics_beta[11]), (s_harmonics_alpha[15] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[1]), (s_harmonics_alpha[7] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[7]), (s_harmonics_alpha[3] * s_harmonics_beta[11]), (s_harmonics_alpha[3] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[15]), (s_harmonics_alpha[9] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[3]), (s_harmonics_alpha[5] * s_harmonics_beta[3]), (s_harmonics_alpha[7] * s_harmonics_beta[15]), (s_harmonics_alpha[5] * s_harmonics_beta[13]), (s_harmonics_alpha[11] * s_harmonics_beta[7]), (s_harmonics_alpha[11] * s_harmonics_beta[5]), (s_harmonics_alpha[15] * s_harmonics_beta[7]), (s_harmonics_alpha[13] * s_harmonics_beta[7]), (s_harmonics_alpha[1] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[15]), (s_harmonics_alpha[3] * s_harmonics_beta[13]), (s_harmonics_alpha[15] * s_harmonics_beta[5]), (s_harmonics_alpha[1] * s_harmonics_beta[13]), (s_harmonics_alpha[13] * s_harmonics_beta[13]), (s_alpha_s ** 5) * (s_beta_s ** 11), (s_alpha_s ** 13) * (s_beta_s ** 5), (s_harmonics_alpha[7] * s_harmonics_beta[7]), (s_harmonics_alpha[5] * s_harmonics_beta[5]), (s_harmonics_alpha[7] * s_harmonics_beta[13]), (s_alpha_s ** 5) * (s_beta_s ** 9), (s_harmonics_alpha[3] * s_harmonics_beta[15]), (s_harmonics_alpha[15] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[15]), (s_harmonics_alpha[10] * s_harmonics_beta[1]), (s_harmonics_alpha[13] * s_harmonics_beta[5]), (s_harmonics_alpha[5] * s_harmonics_beta[15]), (s_harmonics_alpha[13] * s_harmonics_beta[3]), (s_harmonics_alpha[3] * s_harmonics_beta[9]), (s_harmonics_alpha[14] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[3]), (s_harmonics_alpha[12] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[13]), (s_harmonics_alpha[2] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[5]), (s_harmonics_alpha[9] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[1]), (s_harmonics_alpha[11] * s_harmonics_beta[3]), (s_harmonics_alpha[14] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[1]), (s_harmonics_alpha[6] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[3]), (s_harmonics_alpha[15] * s_harmonics_beta[11]), (s_harmonics_alpha[10] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[9]), (s_harmonics_alpha[11] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[5]), (s_harmonics_alpha[4] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[1]), (s_harmonics_alpha[6] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[9]), (s_harmonics_alpha[2] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[5]), (s_harmonics_alpha[6] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[13]), (s_harmonics_alpha[8] * s_harmonics_beta[3]), (s_harmonics_alpha[4] * s_harmonics_beta[9]), (s_harmonics_alpha[10] * s_harmonics_beta[7]), (s_alpha_s ** 7) * (s_beta_s ** 7), (s_harmonics_alpha[12] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[3]), (s_harmonics_alpha[8] * s_harmonics_beta[5]), (s_harmonics_alpha[14] * s_harmonics_beta[15]), (s_harmonics_alpha[4] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[11]), (s_harmonics_alpha[4] * s_harmonics_beta[15]), (s_harmonics_alpha[6] * s_harmonics_beta[3]), (s_harmonics_alpha[10] * s_harmonics_beta[9]), (s_harmonics_alpha[12] * s_harmonics_beta[13]), (s_harmonics_alpha[6] * s_harmonics_beta[7]), (s_harmonics_alpha[8] * s_harmonics_beta[7]), (s_harmonics_alpha[14] * s_harmonics_beta[3]), (s_harmonics_alpha[6] * s_harmonics_beta[1]), (s_harmonics_alpha[14] * s_harmonics_beta[7]), (s_harmonics_alpha[12] * s_harmonics_beta[11]), (s_harmonics_alpha[6] * s_harmonics_beta[5]), (s_harmonics_alpha[12] * s_harmonics_beta[1]), (s_harmonics_alpha[2] * s_harmonics_beta[13]), (s_harmonics_alpha[14] * s_harmonics_beta[13]), (s_harmonics_alpha[4] * s_harmonics_beta[11]), (s_harmonics_alpha[8] * s_harmonics_beta[15]), (s_harmonics_alpha[2] * s_harmonics_beta[11]), (s_harmonics_alpha[2] * s_harmonics_beta[5]), ])


    coefficients_array = np.array([-0.21023987088724191, -0.180677640038495, -0.13549710678317065, -0.12380562643099018, -0.11251049316774972, -0.08716579545898269, -0.0736932910127522, -0.0671110665202713, 0.03026044755344627, 0.0273466562455861, -0.05726799633183642, -0.05341633956628494, -0.05454428211975106, 0.019917852292660472, -0.045972803689969914, -0.04117270416208867, -0.03977454634924216, -0.03499982265309822, -0.03307905283383551, -0.03202818437804452, -0.027385129767077097, -0.023373372597647525, -0.006094342094191937, -0.006024848784449394, -0.019407666193575066, -0.015816431653524844, -0.016411283599078043, 0.004230179488515233, -0.012107820434839772, -0.01186879447092052, -0.008725042274904048, -0.007652153244126301, -0.007486144356464996, -0.006525168279683852, 0.0015307938407752408, 0.0014352813328174358, -0.0013841835099849752, 0.010698489390556353, 0.009793687465124191, 0.009635230938766583, 0.0105409908422401, 0.011282378779946676, 0.009207849517713331, 0.008499433263623, 0.008224782690240087, -0.0012118044885584402, 0.007680812340706568, 0.0011979553889484103, -0.0011725442442455792, -0.0011717608497533612, 0.0011069972365663828, 0.006601584756274606, -0.0010706013355337334, 0.0067587031414044095, 0.006198517808886046, -0.004374494792001508, 0.005413433544536316, -0.0009095732258497049, 0.0009083754209264935, 0.0008700204463473187, 0.0008107571732462051, -0.0008211748699915954, -0.0007612366811494736, 0.0007460490727875283, 0.0038137793733327868, 0.003888661804920258, -0.0006896918359962865, 0.0006732537174380502, -0.0029445398428008924, 0.0032914987323285363, -0.0005737843817298183, 0.0005629136631195693, 0.0005689254646829624, 0.0005551276021619172, 0.0005252524649268224, -0.0005207977171237193, -0.0005177794576773804, 0.000507394674794033, 0.0004912152622061697, 0.00047973557784986004, 0.000486749925482863, -0.0004598511366413454, 0.0004477264701664871, -0.0004362138618674658, -0.0004283095027857939, 0.0004185240023191402, 0.00039784359549591017, -0.0003877205825769529, -0.00039515807053136807, 0.00039402296611301625, 0.0003662492095074859, -0.00037542055232097043, -0.00036461700382535867, 0.0003630156639698621, 0.0018398204685309443, 0.0019608934721865087, -0.0003551688074796223, -0.0003545139223505656, 0.0003386614523685257, -0.0013301231716879407, 0.00029263083185211816, -0.00028542931947855187, -0.0002664228642417154, -0.00024392723332898825, -0.00023032222740002883, -0.00023116963995958978, 0.00019427639818665187, -0.00019398606307880032, -0.00018561572463683188, 0.0001679571336660937, -0.00016721451704297376, -0.00015911534966424044, -0.00015603529312072786, -0.00015314633743782424, -0.00014863418453664077, -0.00014731955538633103, 0.0001389883442460735, -0.00013632568877212873, 0.00012639662530311953, -0.0001232704261487402, -0.00012145094939423532, 0.00011395949390474936, -0.00011223323301657912, -9.676056898697196e-05, -9.408353184944659e-05, -9.361653596460459e-05, -8.79561536144106e-05, -8.676222345713412e-05, 8.667466328365672e-05, -8.38014966770514e-05, -6.954371076046748e-05, -6.485841877165434e-05, -6.263351276839711e-05, -6.138645740478394e-05, -5.927186543045726e-05, -5.6361610324131794e-05, -5.468947779938322e-05, -5.212915979888094e-05, -4.899210781612119e-05, -4.895989033371453e-05, -0.00022435966967475652, 4.6077289658547296e-05, -4.121637147153817e-05, 4.1082004127753434e-05, -3.772696141907142e-05, -3.6283409764495465e-05, -3.204621013693191e-05, -3.1760100890521294e-05, -2.9248991219726695e-05, 2.455618685047489e-05, -2.3827427865660705e-05, 2.18945225269743e-05, -2.121910213810922e-05, -2.1187680343135e-05, -1.603193428651116e-05, 1.5654540791770946e-05, -1.5403197392128804e-05, 1.2491324485560167e-05, 9.437653925613265e-06, -8.130668867670154e-06, 6.828792467121502e-06, -6.137541122202026e-06, -5.277765703730497e-06, 3.2360972314345847e-06, -2.5721389625841927e-06, ])


    return np.dot(coefficients_array, expressions_array)
@jit(nopython=True, cache=True)
def F_coefficients_truncated_shadow_True_ACS3_optical_model(alpha_s_rad, beta_s_rad):
    alpha_s = alpha_s_rad
    beta_s = beta_s_rad
    c_alpha_s = np.cos(alpha_s)
    s_alpha_s = np.sin(alpha_s)
    c_beta_s = np.cos(beta_s)
    s_beta_s = np.sin(beta_s)
    s_harmonics_alpha = [np.sin(j * alpha_s) for j in range(16)]
    c_harmonics_alpha = [np.cos(j * alpha_s) for j in range(16)]
    s_harmonics_beta = [np.sin(j * beta_s) for j in range(16)]
    c_harmonics_beta = [np.cos(j * beta_s) for j in range(16)]
    expressions_array = np.array([1, (s_alpha_s ** 2), (s_beta_s ** 2), (s_alpha_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 2), (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[2]), (c_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[4]), (s_alpha_s ** 4) * (c_beta_s ** 2), (c_harmonics_alpha[4] * c_harmonics_beta[2]), (c_alpha_s ** 4) * (s_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[6]), (s_alpha_s ** 6), (s_alpha_s ** 4) * (c_beta_s ** 4), (s_alpha_s ** 2) * (c_beta_s ** 6), (c_harmonics_alpha[6] * c_harmonics_beta[2]), (s_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 4), (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 2), (s_beta_s ** 8), (s_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 4) * (s_beta_s ** 4), (s_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 2), (s_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 10), (c_harmonics_alpha[6] * c_harmonics_beta[4]), (s_alpha_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 2), (s_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 2), (c_harmonics_alpha[6] * c_harmonics_beta[6]), (s_alpha_s ** 4) * (c_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 6), (c_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 2), (s_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 2) * (s_beta_s ** 14), (s_alpha_s ** 2) * (s_beta_s ** 10), (c_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 2) * (c_beta_s ** 10), (s_alpha_s ** 8) * (s_beta_s ** 4), (s_alpha_s ** 8) * (c_beta_s ** 4), (s_alpha_s ** 12) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 10), (c_alpha_s ** 2) * (c_beta_s ** 8), (s_alpha_s ** 2) * (c_beta_s ** 12), (c_alpha_s ** 4) * (c_beta_s ** 8), (c_alpha_s ** 6) * (s_beta_s ** 4), (s_alpha_s ** 2) * (s_beta_s ** 4), (c_alpha_s ** 2) * (c_beta_s ** 12), (s_alpha_s ** 14) * (c_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 2), (s_alpha_s ** 8), (c_alpha_s ** 10) * (c_beta_s ** 2), (c_harmonics_alpha[2] * c_harmonics_beta[8]), (s_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 2) * (s_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 2), (c_alpha_s ** 4) * (c_beta_s ** 12), (s_alpha_s ** 4) * (c_beta_s ** 14), (c_harmonics_alpha[12] * c_harmonics_beta[2]), (c_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 4) * (s_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 2), (s_alpha_s ** 12) * (s_beta_s ** 4), (c_alpha_s ** 6) * (c_beta_s ** 2), (s_alpha_s ** 12) * (c_beta_s ** 4), (c_alpha_s ** 4) * (s_beta_s ** 14), (c_harmonics_alpha[6] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (s_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[12]), (c_harmonics_alpha[10] * c_harmonics_beta[2]), (s_alpha_s ** 10) * (c_beta_s ** 4), (s_alpha_s ** 4) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[12]), (s_alpha_s ** 10) * (c_beta_s ** 2), (c_alpha_s ** 8) * (c_beta_s ** 4), (c_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[8] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 4) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 10), (s_alpha_s ** 6) * (c_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 6), (c_alpha_s ** 6) * (c_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[6]), (s_alpha_s ** 12), (c_alpha_s ** 2) * (c_beta_s ** 4), (c_harmonics_alpha[4] * c_harmonics_beta[10]), (c_alpha_s ** 10) * (s_beta_s ** 6), (c_alpha_s ** 12) * (c_beta_s ** 4), (c_harmonics_alpha[14] * c_harmonics_beta[10]), (s_alpha_s ** 14) * (c_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 8), (c_alpha_s ** 8) * (c_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[10]), (c_harmonics_alpha[6] * c_harmonics_beta[14]), (c_harmonics_alpha[10] * c_harmonics_beta[8]), (c_harmonics_alpha[12] * c_harmonics_beta[10]), (c_alpha_s ** 12) * (c_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 14), (c_alpha_s ** 6) * (c_beta_s ** 8), (s_alpha_s ** 8) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[14]), (c_alpha_s ** 4) * (c_beta_s ** 4), (c_alpha_s ** 4) * (c_beta_s ** 14), (c_alpha_s ** 8) * (s_beta_s ** 2), (s_alpha_s ** 10) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[4]), (s_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 6), (c_harmonics_alpha[14] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (c_beta_s ** 12), (c_alpha_s ** 2) * (s_beta_s ** 10), (c_harmonics_alpha[4] * c_harmonics_beta[8]), (s_alpha_s ** 2) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 4) * (s_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 6), (s_alpha_s ** 2) * (s_beta_s ** 6), (s_alpha_s ** 6) * (s_beta_s ** 14), (c_alpha_s ** 2) * (c_beta_s ** 14), (c_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[14] * c_harmonics_beta[2]), (c_harmonics_alpha[8] * c_harmonics_beta[2]), (c_alpha_s ** 12) * (s_beta_s ** 6), (s_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 8) * (s_beta_s ** 12), (s_alpha_s ** 6) * (c_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 2), (c_harmonics_alpha[10] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (s_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[14]), (s_alpha_s ** 4) * (s_beta_s ** 12), (s_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 8) * (c_beta_s ** 6), (c_harmonics_alpha[8] * c_harmonics_beta[6]), (s_alpha_s ** 10) * (c_beta_s ** 6), (c_alpha_s ** 14) * (s_beta_s ** 4), (c_alpha_s ** 6) * (s_beta_s ** 14), (s_alpha_s ** 12) * (s_beta_s ** 6), (c_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 4), (s_alpha_s ** 6) * (s_beta_s ** 8), (c_harmonics_alpha[4] * c_harmonics_beta[12]), (c_harmonics_alpha[6] * c_harmonics_beta[10]), (s_alpha_s ** 4) * (s_beta_s ** 4), (c_alpha_s ** 12) * (c_beta_s ** 6), (c_alpha_s ** 14) * (c_beta_s ** 2), (s_alpha_s ** 6) * (c_beta_s ** 10), (c_alpha_s ** 14) * (s_beta_s ** 8), (c_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[12] * c_harmonics_beta[4]), (c_harmonics_alpha[10] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[10] * c_harmonics_beta[4]), (c_alpha_s ** 10) * (s_beta_s ** 4), (c_alpha_s ** 2) * (s_beta_s ** 8), (s_alpha_s ** 6) * (c_beta_s ** 12), (c_harmonics_alpha[2] * c_harmonics_beta[14]), (s_alpha_s ** 10) * (s_beta_s ** 12), (c_alpha_s ** 14) * (c_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 8), (c_alpha_s ** 2) * (s_beta_s ** 12), (s_alpha_s ** 8) * (s_beta_s ** 12), (c_harmonics_alpha[14] * c_harmonics_beta[12]), (c_harmonics_alpha[6] * c_harmonics_beta[12]), (c_alpha_s ** 4) * (s_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 14), (c_harmonics_alpha[13] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 12), (c_harmonics_alpha[9] * c_harmonics_beta[8]), (s_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 8) * (c_beta_s ** 10), (s_alpha_s ** 14) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 14) * (s_beta_s ** 10), (c_harmonics_alpha[2] * c_harmonics_beta[10]), (s_alpha_s ** 10) * (s_beta_s ** 8), (c_alpha_s ** 4) * (s_beta_s ** 12), (c_harmonics_alpha[1] * c_harmonics_beta[12]), (c_harmonics_alpha[11] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 2), (c_harmonics_alpha[14] * c_harmonics_beta[4]), (c_alpha_s ** 5) * (c_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[10]), (c_harmonics_alpha[15] * c_harmonics_beta[4]), (c_alpha_s ** 6) * (c_beta_s ** 6), (s_alpha_s ** 10) * (c_beta_s ** 12), (c_harmonics_alpha[12] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (s_beta_s ** 12), (s_alpha_s ** 4) * (s_beta_s ** 2), (c_alpha_s ** 2) * (c_beta_s ** 6), (c_alpha_s ** 10) * (c_beta_s ** 14), (c_harmonics_alpha[8] * c_harmonics_beta[8]), (c_alpha_s ** 1), (c_harmonics_alpha[14] * c_harmonics_beta[14]), (c_harmonics_alpha[4] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 14) * (s_beta_s ** 12), (c_harmonics_alpha[7] * c_harmonics_beta[2]), (c_harmonics_alpha[5] * c_harmonics_beta[2]), (s_alpha_s ** 12) * (s_beta_s ** 12), (s_alpha_s ** 6) * (s_beta_s ** 6), (c_harmonics_alpha[10] * c_harmonics_beta[12]), (c_harmonics_alpha[9] * c_harmonics_beta[2]), (c_alpha_s ** 8) * (c_beta_s ** 12), (c_alpha_s ** 10) * (c_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 2), (s_alpha_s ** 8) * (c_beta_s ** 8), (c_harmonics_alpha[7] * c_harmonics_beta[8]), (c_alpha_s ** 6) * (s_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[4]), (c_harmonics_alpha[15] * c_harmonics_beta[2]), (c_harmonics_alpha[11] * c_harmonics_beta[8]), (s_alpha_s ** 8) * (c_beta_s ** 10), (c_alpha_s ** 6) * (c_beta_s ** 4), (c_alpha_s ** 12) * (s_beta_s ** 2), (c_alpha_s ** 14) * (s_beta_s ** 14), (s_alpha_s ** 10) * (s_beta_s ** 10), (c_alpha_s ** 12) * (s_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (c_beta_s ** 2), (c_alpha_s ** 10) * (s_beta_s ** 14), (s_alpha_s ** 8) * (s_beta_s ** 8), (c_harmonics_alpha[3] * c_harmonics_beta[14]), (s_alpha_s ** 12) * (c_beta_s ** 10), (c_alpha_s ** 12) * (c_beta_s ** 10), (c_harmonics_alpha[15] * c_harmonics_beta[12]), (c_alpha_s ** 5) * (s_beta_s ** 4), (c_harmonics_alpha[11] * c_harmonics_beta[2]), (c_alpha_s ** 5) * (c_beta_s ** 4), (c_alpha_s ** 7) * (c_beta_s ** 2), (c_alpha_s ** 13) * (s_beta_s ** 2), (c_harmonics_alpha[1] * c_harmonics_beta[8]), (c_alpha_s ** 14) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 2), (c_alpha_s ** 8) * (s_beta_s ** 4), (c_harmonics_alpha[3] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[14]), (s_alpha_s ** 14) * (c_beta_s ** 10), (c_harmonics_alpha[7] * c_harmonics_beta[4]), (s_alpha_s ** 8) * (c_beta_s ** 12), (s_alpha_s ** 12) * (c_beta_s ** 12), (c_harmonics_alpha[11] * c_harmonics_beta[6]), (c_alpha_s ** 14) * (c_beta_s ** 4), (c_alpha_s ** 14) * (s_beta_s ** 6), (c_harmonics_alpha[11] * c_harmonics_beta[12]), (c_harmonics_alpha[15] * c_harmonics_beta[6]), (c_harmonics_alpha[15] * c_harmonics_beta[8]), (c_harmonics_alpha[12] * c_harmonics_beta[6]), (c_alpha_s ** 4) * (s_beta_s ** 8), (s_alpha_s ** 14) * (c_beta_s ** 12), (c_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 11) * (s_beta_s ** 2), (c_alpha_s ** 5) * (s_beta_s ** 6), (c_harmonics_alpha[3] * c_harmonics_beta[6]), (c_alpha_s ** 5) * (c_beta_s ** 6), (c_harmonics_alpha[7] * c_harmonics_beta[6]), (c_alpha_s ** 3) * (c_beta_s ** 4), (c_harmonics_alpha[9] * c_harmonics_beta[10]), (c_harmonics_alpha[9] * c_harmonics_beta[12]), (s_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 11) * (c_beta_s ** 2), (c_harmonics_alpha[11] * c_harmonics_beta[4]), (c_alpha_s ** 8) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 4), (c_alpha_s ** 13) * (c_beta_s ** 4), (c_alpha_s ** 8) * (c_beta_s ** 8), (c_alpha_s ** 14) * (c_beta_s ** 6), (c_harmonics_alpha[13] * c_harmonics_beta[4]), (c_harmonics_alpha[3] * c_harmonics_beta[2]), (c_alpha_s ** 7) * (c_beta_s ** 4), (c_harmonics_alpha[1] * c_harmonics_beta[6]), (c_alpha_s ** 13) * (s_beta_s ** 4), (c_alpha_s ** 5) * (s_beta_s ** 8), (c_alpha_s ** 5) * (c_beta_s ** 8), (s_alpha_s ** 10) * (c_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[6]), (c_alpha_s ** 12) * (c_beta_s ** 12), (c_alpha_s ** 7) * (s_beta_s ** 4), (c_harmonics_alpha[3] * c_harmonics_beta[12]), (s_alpha_s ** 12) * (c_beta_s ** 8), (c_harmonics_alpha[5] * c_harmonics_beta[8]), (c_harmonics_alpha[13] * c_harmonics_beta[2]), (c_alpha_s ** 1) * (s_beta_s ** 2), (c_harmonics_alpha[5] * c_harmonics_beta[14]), (c_alpha_s ** 3) * (c_beta_s ** 6), (c_harmonics_alpha[5] * c_harmonics_beta[12]), (c_alpha_s ** 12) * (s_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 6), (c_alpha_s ** 5) * (c_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 4), (c_harmonics_alpha[2] * c_harmonics_beta[12]), (c_harmonics_alpha[13] * c_harmonics_beta[8]), (c_alpha_s ** 7) * (c_beta_s ** 6), (c_alpha_s ** 13) * (s_beta_s ** 6), (s_alpha_s ** 12) * (s_beta_s ** 8), (s_alpha_s ** 14) * (s_beta_s ** 12), (s_alpha_s ** 10) * (c_beta_s ** 14), (c_alpha_s ** 5) * (s_beta_s ** 12), (c_harmonics_alpha[15] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (c_beta_s ** 12), (c_alpha_s ** 11) * (c_beta_s ** 4), (c_alpha_s ** 7) * (s_beta_s ** 6), (c_alpha_s ** 3) * (c_beta_s ** 8), (c_alpha_s ** 13) * (c_beta_s ** 8), (c_alpha_s ** 3) * (s_beta_s ** 8), (c_harmonics_alpha[13] * c_harmonics_beta[10]), (c_harmonics_alpha[7] * c_harmonics_beta[10]), (c_alpha_s ** 5) * (s_beta_s ** 14), (c_alpha_s ** 1) * (s_beta_s ** 4), (c_alpha_s ** 10) * (c_beta_s ** 10), (c_alpha_s ** 5) * (c_beta_s ** 14), (c_harmonics_alpha[11] * c_harmonics_beta[14]), (c_harmonics_alpha[13] * c_harmonics_beta[12]), (c_alpha_s ** 7) * (c_beta_s ** 8), (c_harmonics_alpha[1] * c_harmonics_beta[2]), (c_harmonics_alpha[1] * c_harmonics_beta[4]), (c_alpha_s ** 13) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 6), (s_alpha_s ** 8) * (s_beta_s ** 10), (c_alpha_s ** 13) * (c_beta_s ** 10), (c_alpha_s ** 3) * (s_beta_s ** 10), (c_alpha_s ** 7) * (s_beta_s ** 8), (c_harmonics_alpha[9] * c_harmonics_beta[4]), (c_harmonics_alpha[1] * c_harmonics_beta[14]), (c_alpha_s ** 1) * (c_beta_s ** 2), (c_alpha_s ** 7) * (c_beta_s ** 10), (c_alpha_s ** 3) * (c_beta_s ** 12), (c_harmonics_alpha[3] * c_harmonics_beta[4]), (c_alpha_s ** 11) * (c_beta_s ** 6), (c_alpha_s ** 13) * (c_beta_s ** 12), (c_alpha_s ** 13) * (s_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 6), (c_alpha_s ** 3) * (s_beta_s ** 12), (c_harmonics_alpha[5] * c_harmonics_beta[10]), (s_alpha_s ** 12) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 10), (c_alpha_s ** 11) * (s_beta_s ** 8), (c_alpha_s ** 3) * (c_beta_s ** 14), (c_alpha_s ** 7) * (c_beta_s ** 12), (c_harmonics_alpha[13] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (c_beta_s ** 14), (c_alpha_s ** 3) * (s_beta_s ** 14), (c_alpha_s ** 13) * (s_beta_s ** 12), (c_alpha_s ** 7) * (c_beta_s ** 14), (c_alpha_s ** 7) * (s_beta_s ** 12), (c_alpha_s ** 9) * (c_beta_s ** 2), (c_alpha_s ** 11) * (c_beta_s ** 8), (c_alpha_s ** 11) * (s_beta_s ** 10), (c_alpha_s ** 1) * (s_beta_s ** 8), (c_harmonics_alpha[15] * c_harmonics_beta[14]), (c_alpha_s ** 13) * (s_beta_s ** 14), ])


    coefficients_array = np.array([0.08704101452721519, -0.018579823190785, 0.017272751854326827, -0.017838112579362284, -0.02043176675814153, 0.013590829586139386, 0.010021916954604249, 0.015420808287014297, -0.019400029632576622, -0.008803525950591008, -0.017460258051986872, 0.0070649507229217255, 0.013191010187708893, -0.005991875742949184, -0.007672006508424598, -0.016049272916461254, -0.014056367762586407, -0.005331876582707474, 0.010003086384788924, 0.010707148878184384, -0.007165494992896701, -0.010836975287975366, -0.006036935708996192, -0.011690852994820412, 0.008856598782464885, -0.01050541119534031, 0.007418388777466444, 0.006130523616090465, -0.008099028283502466, 0.004528662569257873, 0.0026239784947722613, -0.004949599863962265, 0.006858758272580238, 0.0075023088869568735, 0.0025947128671537233, 0.0031590149075908236, -0.001926620708515138, -0.007000401008317433, -0.00729309866396222, 0.005610426602294883, -0.006725604576403058, -0.005089249817173597, -0.005126491156392101, -0.006493748049992924, 0.006322790577242943, -0.005320547217053149, 0.004022956892827815, -0.005032202261824055, 0.006111686345095393, -0.005836321744182461, 0.005353625828781303, 0.006473144088764767, 0.006095615196141184, 0.004137211186800073, -0.004862643351243744, 0.005235838462566392, 0.004542646411250516, 0.00288368070552168, 0.0045862264972259216, -0.006495506104228849, 0.0031649687864288745, 0.0017695084660051233, -0.003819348400083194, -0.001142588284027896, -0.004529706924799614, 0.0018519435718344513, -0.004013722703087749, 0.0051406778142197625, -0.00544682284856773, -0.0010625422521273456, -0.00457194083705041, -0.004547013674601029, -0.004576012967167138, 0.003536896740315936, 0.0034965328873797167, 0.003807723327881886, 0.0047660020489381115, 0.0024787495597677254, -0.004601346482721274, 0.004934042420183113, 0.0009516007522638875, 0.0036802958115995646, -0.005554718012192416, 0.0009214783574108507, -0.0009053072222503938, -0.004002811139233498, -0.00430819203487824, -0.0008961658479519871, -0.0029736463370651778, -0.003464870106656792, -0.004764797457281008, -0.0008747526312624964, -0.005551338383226289, 0.002781402844686644, -0.004901496552092841, -0.0036493522757130676, 0.0007501787626478543, -0.0035475535837555727, 0.003826995925050513, -0.000735751254929828, 0.001339903124873506, -0.0015546444990490772, 0.0007213922404753003, -0.003752617778668444, -0.00331467210509497, -0.0007013421561034015, -0.004352327652342748, -0.004572294459950259, -0.0020485817788425563, 0.0006920370331527863, 0.0006956890080913298, -0.000686058916390421, 0.0006784100728760435, -0.0023571081417843257, 0.003566895617900107, 0.004658629823122371, 0.002983417005323434, 0.003075846255052829, -0.004620084698080407, 0.0006296331637713654, 0.001796112209234823, 0.0030742546530151795, 0.0017967335444192421, 0.00470789330625747, -0.0005769656266681317, -0.001047026450441974, -0.002948224572429887, 0.000559992663295739, 0.0031247187961786636, -0.001844947774740767, -0.0005534652486989753, -0.0020171658540408133, -0.002868081352633459, -0.0019143041841865314, -0.0025654277116134447, -0.0014282440278223312, 0.003398434077063106, 0.00202732945263147, -0.003805880745158887, -0.002413052912391182, 0.0005067712810988405, 0.0005013113295835285, -0.0028457156045310784, -0.0027070074254847624, -0.0030685454569136655, -0.002801274777313224, 0.0017760047094754758, -0.00044294567853852374, 0.0022915476540183023, -0.00041676570642593135, -0.0020307233479305, 0.0036352894756986605, -0.0019352855071718162, 0.00041407601514741564, -0.002125727468217069, 0.0020510638128872385, 0.00243840784226266, 0.0022840392116843366, -0.003057683175538846, -0.002063810887551091, 0.0020061031797667284, -0.0018335301052182628, -0.0003759377975868005, -0.0003628415566255741, 0.0010331306079354367, -0.0019690410067123077, 0.0013307068113702673, -0.0017932058129130203, -0.0023837149015414265, -0.002612802940103213, 0.00033449896544202913, 0.00032845550585872834, 0.002458286801582682, 0.00031935228849285267, -0.001376309078533521, -0.0009104445523034981, -0.0017377816940324002, -0.0002898065370696831, 0.0021264353849577413, 0.0018916474999448464, -0.0019241100486001445, 0.0009701394015287529, 0.00174143645692222, 0.00025924679953452233, -0.0002529925855462349, -0.0011004135222032413, 0.0014756317832232684, -0.00024048557862703065, 0.0019861503551832915, -0.0002314663741451374, 0.0014995434825074124, 0.0013007225913364213, -0.0015350176598423243, 0.0019987593300888683, -0.0016787604208246018, -0.0002086187710763651, 0.001239943693393684, 0.0009565819088371268, -0.00019135059259637338, -0.00019023237496046803, 0.00045677030776298687, -0.0006237166447181703, -0.0001898516946478577, 0.0004467657835552123, -0.00018334538253260505, -0.00018827660166539052, 0.0007491632889645107, 0.0013209821881053994, -0.0001767697510331049, -0.0009995186292957648, -0.00037785452565560905, 0.00041588807612020134, -0.001234105372480057, 0.0001594232898282068, 0.0001001280935390527, 0.00015639412149147123, -0.00015457788577524794, -0.001400308145472752, -0.0013002046039617817, -0.00015155691610568782, -0.00015157569353374428, 0.0012206578019451836, 0.0006157844600581748, -0.00013507888437593366, -0.00013497037438915777, 0.0008514549869138608, -0.0007502998376275534, -0.0002417621377646518, -0.0006884968166394242, -0.00012691521540943946, 0.000520747939113144, -0.00023335658369913486, -0.0001210213129347969, -0.0001225319247021023, -0.00011883531888482093, 0.0007029479858468238, -0.0003969928101695143, 0.00041504342378883045, 0.0010528751167959548, 0.0007797777970109416, -0.0005425205397429319, -0.00011364619719810722, -0.0004136976523281123, -0.0008820010911294284, 0.0006102947611267187, -0.00011047804018769591, 0.0007959732171540692, 0.0007732811972392761, 0.00011091704923959921, 0.0003443540831609773, 0.00010651223126263182, 0.00033434955905192076, -0.00028608966093695393, -0.00038058965938421365, -9.869932792241375e-05, 0.0008788633354901185, -0.0002700769617084998, 0.0003804452151437288, -9.232718574792546e-05, 9.005942715227798e-05, -0.000695151401444594, -8.829957473308188e-05, 0.0005753238523137062, 0.0006864254898213535, -8.48179719172247e-05, -0.0004259527044499278, -0.0005153606774473429, -8.272925711653816e-05, -8.365819435700598e-05, -8.338940069124392e-05, -7.95455443783671e-05, -0.0003136603243107332, -0.0006730497316183761, -0.0006457852696776862, 0.0002625809295396212, 0.0002875158976103655, -7.452843298119913e-05, 0.0002787715203328101, -7.156721020694118e-05, -0.0001802046937959156, -7.165131375745168e-05, -7.166908422490837e-05, -0.0004947833665003635, 0.0002342959342927125, -6.836466107670713e-05, -0.0004620477519711593, -0.00017179913885344845, -0.00031713794065788426, 0.00034080227471498445, 0.0003838122666100313, -6.325950348983756e-05, 6.214641051665001e-05, -0.00021728443627969067, 5.901442940809127e-05, -0.0002840299477833546, 0.00025128097942905836, 0.00024379675111184645, 0.0003306527480383406, -5.497662495047572e-05, 0.00042258684056586823, -0.00020127173641213176, -5.4120650017542725e-05, -0.0003488079354526043, 5.2806964284496194e-05, 5.181445819009212e-05, 6.602548309014241e-05, -5.145931291658468e-05, -0.00014836240067465036, -4.8971621291032546e-05, -0.00040677823006944613, 0.00022572943152410164, -0.0001420839890669578, -0.00026831657313340125, 0.0002187418822526806, 0.0001982202851995237, 4.284903624977761e-05, -4.198664905501645e-05, -0.00018235994078381098, -0.00023629160422338928, 0.00026593681067544613, -0.00034580311653595623, 0.0003070294686542171, 0.00020657783159757655, -3.939243756919977e-05, 0.00019932349283633395, 0.00016993529036771077, -0.0001673910069185118, -0.00012876453281546597, -0.00023777317573020322, -0.00012461326312403824, -3.460215431758244e-05, -3.42877379052016e-05, 0.00019158538171932008, 5.747183805510171e-05, 0.0002163535050117437, 0.0001834989579061166, -3.272920809916743e-05, -3.221229707724551e-05, -0.00016066881187202036, -3.192287441150887e-05, 3.1698923013312795e-05, -0.0002068312290100391, -0.0001157855335635633, 0.0001655122575583609, 0.00018264382304732161, -0.0002166291565134423, -0.00011276809169066217, -0.00014674364548327646, 2.7273156641171403e-05, -2.689731374493642e-05, 3.410260595490562e-05, -0.00014592219781910925, -0.00010684256187721005, -2.5733440295447165e-05, 0.000138282673602926, -0.00020108951589164657, -0.00018624944437260294, 5.0353221246898105e-05, -0.00010396563650905091, -2.4357514835728568e-05, -0.00020108046775053128, -0.0001323851355640353, 0.00014467221443439183, -0.00010051872961059094, -0.0001353673317543347, -2.2193700254917134e-05, -0.00018919048633821639, -9.703994615261297e-05, -0.00017075125203837985, -0.00012754255581181594, -0.0001215627087888897, -6.045358720323534e-05, 0.00011849804162039058, 0.00013004266989399902, 4.381968096785544e-05, -1.8986539617979038e-05, -0.00015850542385915603, ])


    return np.dot(coefficients_array, expressions_array)

def ellipse_truncated_coefficients_function_shadow_FALSE_double_ideal_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_False_double_ideal_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list

def ellipse_truncated_coefficients_function_shadow_TRUE_double_ideal_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_True_double_ideal_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list

def ellipse_truncated_coefficients_function_shadow_FALSE_single_ideal_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_False_single_ideal_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list

def ellipse_truncated_coefficients_function_shadow_TRUE_single_ideal_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_True_single_ideal_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list

def ellipse_truncated_coefficients_function_shadow_FALSE_ACS3_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_False_ACS3_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list

def ellipse_truncated_coefficients_function_shadow_TRUE_ACS3_optical_model():
    A_func = lambda alpha, beta: A_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    B_func = lambda alpha, beta: B_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    C_func = lambda alpha, beta: C_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    D_func = lambda alpha, beta: D_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    E_func = lambda alpha, beta: E_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    F_func = lambda alpha, beta: F_coefficients_truncated_shadow_True_ACS3_optical_model(alpha, beta)
    ellipse_coefficient_functions_list = [A_func, B_func, C_func, D_func, E_func, F_func]
    return ellipse_coefficient_functions_list
